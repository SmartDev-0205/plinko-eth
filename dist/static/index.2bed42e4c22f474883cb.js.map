{"version":3,"file":"index.2bed42e4c22f474883cb.js","mappings":"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,KACA,MACA,KACA,MACA,KACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,EAAG,CACC,MACA,MACA,MACA,MACA,MACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,EAAG,CACC,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,EAAG,CACC,MACA,MACA,MACA,KACA,MACA,MACA,KACA,MACA,MACA,KACA,MACA,KACA,MACA,MACA,MACA,OAEJ,EAAG,CACC,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,EAAG,CACC,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,KACA,KACA,OAEJ,EAAG,CACC,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,MACA,KACA,KACA,OAEJ,EAAG,CACC,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,GACA,MACA,MACA,MACA,MACA,MACA,MACA,QAGR,GAAI,CACA,EAAG,CACC,KACA,KACA,MACA,MACA,KACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,OAEJ,EAAG,CACC,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,MACA,MACA,MACA,MACA,OAEJ,EAAG,CACC,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,MACA,MACA,OAEJ,EAAG,CACC,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,EAAG,CACC,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,KACA,MACA,MACA,MACA,MAEJ,EAAG,CACC,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,KACA,MACA,OAEJ,EAAG,CACC,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,OAEJ,EAAG,CACC,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,EAAG,CACC,MACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,EAAG,CACC,MACA,MACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,GAAI,CACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,GAAI,CACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MAEJ,GAAI,CACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,KACA,KACA,MACA,KACA,MACA,MACA,MACA,QAGR,GAAI,CACA,EAAG,CAAC,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,OACpE,EAAG,CACC,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,EAAG,CACC,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAEJ,EAAG,CACC,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,EAAG,CACC,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,KACA,MACA,MACA,MACA,OAEJ,EAAG,CACC,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,EAAG,CACC,MACA,MACA,MACA,KACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,EAAG,CACC,MACA,KACA,MACA,MACA,MACA,KACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,EAAG,CACC,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,EAAG,CACC,MACA,MACA,MACA,MACA,MACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,GAAI,CACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,GAAI,CACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,GAAI,CACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,OAEJ,GAAI,CACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,GAAI,CACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,GAAI,CACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJ,GAAI,CACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,SChrBZ,IAAgB,YAAc,qBAAqB,YAAc,qBAAqB,WAAa,oBAAoB,WAAa,oBAAoB,iBAAmB,0BAA0B,gBAAkB,yBAAyB,gBAAkB,yBAAyB,kBAAkB,yBAAyB,kBAAkB,yBAAyB,kBAAkB,yBAAyB,kBAAkB,yBAAyB,kBAAkB,yBAAyB,kBAAkB,yBAAyB,kBAAkB,yBAAyB,kBAAkB,yBAAy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","sources":["webpack:///./src/config/config.tsx","webpack:///./src/config/apiEndpoints.tsx","webpack:///./src/platform/modules/account/selectors.tsx","webpack:///./src/util/util.tsx","webpack:///./src/app/constants.tsx","webpack:///./src/platform/modules/utilities/actions.tsx","webpack:///./src/platform/modules/utilities/asyncActions.tsx","webpack:///./src/platform/modules/bets/constants.tsx","webpack:///./src/platform/modules/bets/actions.tsx","webpack:///./src/platform/modules/bets/asyncActions.tsx","webpack:///./src/platform/modules/chat/constants.tsx","webpack:///./src/platform/modules/chat/actions.tsx","webpack:///./src/platform/modules/friends/constants.tsx","webpack:///./src/platform/modules/friends/actions.tsx","webpack:///./src/platform/modules/modals/actions.tsx","webpack:///./src/platform/modules/web3/constants.tsx","webpack:///./src/platform/modules/web3/actions.tsx","webpack:///./src/platform/modules/web3/asyncActions.tsx","webpack:///./src/platform/modules/account/constants.tsx","webpack:///./src/platform/modules/account/actions.tsx","webpack:///./src/platform/modules/account/asyncActions.tsx","webpack:///./src/platform/modules/friends/asyncActions.tsx","webpack:///./src/platform/modules/chat/asyncActions.tsx","webpack:///./src/platform/modules/bets/reducer.tsx","webpack:///./src/platform/modules/chat/reducer.tsx","webpack:///./src/platform/modules/friends/reducer.tsx","webpack:///./src/pages/games/plinko/constants.tsx","webpack:///./src/pages/games/plinko/reducer.tsx","webpack:///./src/platform/modules/games/info/constants.tsx","webpack:///./src/platform/modules/games/info/reducer.tsx","webpack:///./src/platform/modules/games/state/constants.tsx","webpack:///./src/platform/modules/games/state/reducer.tsx","webpack:///./src/platform/modules/games/reducer.tsx","webpack:///./src/platform/modules/utilities/reducer.tsx","webpack:///./src/platform/modules/web3/reducer.tsx","webpack:///./src/rootReducer.tsx","webpack:///./src/platform/modules/account/reducer.tsx","webpack:///./src/store.tsx","webpack:///./src/config/interceptors.tsx","webpack:///./src/layout/Layout.tsx","webpack:///./src/platform/modules/games/info/actions.tsx","webpack:///./src/platform/modules/games/state/actions.tsx","webpack:///./src/platform/modules/games/state/asyncActions.tsx","webpack:///./src/contractUtils/index.tsx","webpack:///./src/reusable/Section.scss","webpack:///./src/reusable/Section.tsx","webpack:///./src/reusable/Container.tsx","webpack:///./src/pages/games/utilities.tsx","webpack:///./src/reusable/Row.tsx","webpack:///./src/reusable/Col.tsx","webpack:///./src/reusable/FormGroup.tsx","webpack:///./src/reusable/Label.tsx","webpack:///./src/reusable/Button.tsx","webpack:///./src/util/math.tsx","webpack:///./src/reusable/Input.scss?126e","webpack:///./src/reusable/Input.tsx","webpack:///./src/reusable/NumericInput.tsx","webpack:///./src/reusable/ValueInput.tsx","webpack:///./src/reusable/Select.tsx","webpack:///./src/reusable/Modal.tsx","webpack:///./src/reusable/Modal.scss?efe8","webpack:///./src/reusable/Ether.tsx","webpack:///./src/reusable/Ether.scss?bece","webpack:///./src/pages/games/reusable/HowToPlayBase.tsx","webpack:///./src/pages/games/reusable/HowToPlayBase.scss?077e","webpack:///./src/pages/games/plinko/components/HowToPlay.tsx","webpack:///./src/pages/games/reusable/PureCanvas.tsx","webpack:///./src/pages/games/plinko/components/Drawable.tsx","webpack:///./src/pages/games/plinko/components/Vector2.ts","webpack:///./src/pages/games/plinko/components/Ball.tsx","webpack:///./src/pages/games/plinko/components/lookupTables.tsx","webpack:///./src/pages/games/plinko/components/PayoutTable.scss?a964","webpack:///./src/pages/games/plinko/components/PayoutTable.tsx","webpack:///./src/pages/games/plinko/components/Pin.tsx","webpack:///./src/pages/games/plinko/components/Pins.tsx","webpack:///./src/pages/games/plinko/components/PlinkoDayColors.scss","webpack:///./src/pages/games/plinko/components/PlinkoNightColors.scss","webpack:///./src/pages/games/plinko/components/Plinko.tsx","webpack:///./src/pages/games/plinko/components/Plinko.scss?5e64","webpack:///./src/pages/games/plinko/components/Ui.scss?682e","webpack:///./src/pages/games/plinko/components/Ui.tsx","webpack:///./src/pages/games/plinko/Plinko.tsx","webpack:///./src/util/audio.tsx","webpack:///./src/pages/games/plinko/actions.tsx","webpack:///./src/pages/games/Game.tsx","webpack:///./src/pages/games/Game.scss?c8a2","webpack:///./src/reusable/FontAwesomeIcon.scss?46a9","webpack:///./src/reusable/FontAwesomeIcon.tsx","webpack:///./src/reusable/DataLoader.scss?dfad","webpack:///./src/reusable/DataLoader.tsx","webpack:///./src/reusable/IconButton.tsx","webpack:///./src/reusable/Popover.tsx","webpack:///./src/reusable/CopyToClipboard.tsx","webpack:///./src/platform/components/bet/BetInfo/Overview.scss?f97e","webpack:///./src/platform/components/bet/BetInfo/Overview.tsx","webpack:///./src/platform/components/bet/BetInfo/PlinkoBetInfo.tsx","webpack:///./src/reusable/Output.tsx","webpack:///./src/reusable/Collapse.tsx","webpack:///./src/platform/components/bet/BetInfo/CollapseButton.tsx","webpack:///./src/platform/components/bet/BetInfo/CollapsButton.scss?62ab","webpack:///./src/platform/components/bet/BetInfo/Verification.scss?c5ea","webpack:///./src/platform/components/bet/BetInfo/Verification.tsx","webpack:///./src/platform/components/bet/BetInfo/VerificationInfo.tsx","webpack:///./src/platform/components/bet/BetInfo/VerificationInfo.scss?6d8f","webpack:///./src/platform/components/bet/BetInfo/index.tsx","webpack:///./src/platform/components/bet/Bet.tsx","webpack:///./src/platform/components/modals/BetModal.tsx","webpack:///./src/reusable/MissingWallet.tsx","webpack:///./src/platform/components/modals/MissingWalletModal.tsx","webpack:///./src/reusable/Form.tsx","webpack:///./src/reusable/FormText.tsx","webpack:///./src/platform/components/user/Register.tsx","webpack:///./src/platform/modules/account/util.tsx","webpack:///./src/platform/components/modals/RegisterModal.tsx","webpack:///./src/pages/account/components/stats/GameStats.tsx","webpack:///./src/pages/account/components/stats/GameStats.scss?7604","webpack:///./src/reusable/Address.tsx","webpack:///./src/reusable/Address.scss?f229","webpack:///./src/platform/components/user/UserInfo.tsx","webpack:///./src/platform/components/user/UserInfo.scss?8570","webpack:///./src/platform/components/user/User.tsx","webpack:///./src/platform/components/modals/UserModal.tsx","webpack:///./src/platform/components/modals/Modals.tsx","webpack:///./src/platform/components/state/StateLoader.tsx","webpack:///./src/app/BeforeUnload.tsx","webpack:///./src/app/Notification.scss?739b","webpack:///./src/app/Notification.tsx","webpack:///./src/app/App.tsx","webpack:///./src/Root.tsx","webpack:///./src/app/withTracker.tsx","webpack:///./src/index.tsx","webpack:///./src/googleanalytics.js"],"sourcesContent":["import {toChecksumAddress} from \"ethereumjs-util\";\r\nexport const NAME = \"Dicether\";\r\nexport const VERSION = process.env.VERSION || \"\";\r\nexport const BUILD_DATE = new Date(process.env.BUILD_DATE || new Date());\r\n\r\nexport const CONTRACT_ADDRESS = toChecksumAddress(process.env.CONTRACT_ADDRESS || \"\");\r\nexport const TOKEN_ADDRESS = toChecksumAddress(\"0xe5f129a4770d0e955c064b5d0adecdfc7726eff8\");\r\nconsole.log(\"address\", CONTRACT_ADDRESS, TOKEN_ADDRESS);\r\nexport const CHAIN_ID = Number.parseInt(process.env.CHAIN_ID || \"1\", 10);\r\nexport const SIGNATURE_VERSION = 2;\r\nexport const NEW_EIP_GAME_ID = 572;\r\nexport const NEW_EIP_GAME_ID_2 = 1759;\r\nexport const OLD_EIP_GAME_ID = 638;\r\n\r\nexport const SERVER_ADDRESS = toChecksumAddress(process.env.SERVER_ADDRESS || \"\");\r\n\r\nexport const DISCORD_URL = \"https://discord.gg/kD7FajM\";\r\nexport const REDDIT_URL = \"https://www.reddit.com/r/Dicether\";\r\nexport const CONTRACT_URL = `https://etherscan.io/address/${CONTRACT_ADDRESS}#code`;\r\nexport const CONTACT_URL = \"contact@dicether.com\";\r\nexport const BUGS_URL = \"bugs@dicether.com\";\r\nexport const TWITTER_URL = \"https://twitter.com/dicether\";\r\nexport const METAMASK_URL = \"https://metamask.io\";\r\nexport const TRUST_WALLET_URL = \"https://trustwalletapp.com\";\r\nexport const COINBASE_WALLET_URL = \"https://wallet.coinbase.com\";\r\nexport const GITHUB_URL = \"https://github.com/dicether\";\r\n\r\nexport const API_URL = process.env.API_URL || \"\";\r\nexport const SOCKET_URL = process.env.SOCKET_URL || \"\";\r\n\r\nexport const REALM = \"Dicether\";\r\n\r\nexport const ACCOUNT_BALANCE_POLL_INTERVAL = 5000;\r\n\r\nexport const FROM_WEI_TO_BASE = 1e18; // conversion from wei to base unit GWEI\r\nexport const FROM_BASE_TO_WEI = 1e18; // conversion from base unit GWEI to wei\r\n\r\nexport const NETWORK_NAME = \"Main\";\r\n\r\nexport const MIN_GAME_SESSION_VALUE = 1e7;\r\nexport const MAX_GAME_SESSION_VALUE = 30e9;\r\nexport const HOUSE_EDGE = 150;\r\nexport const HOUSE_EDGE_DIVISOR = 10000;\r\n\r\nexport const MIN_BET_VALUE = 1e9;\r\nexport const MAX_BET_VALUE = 1e20;\r\nexport const MIN_BANKROLL = 9e9;\r\nexport const KELLY_FACTOR = 1;\r\n\r\nexport const RANGE = 100;\r\nexport const MIN_NUMBER_DICE_1 = 1;\r\nexport const MAX_NUMBER_DICE_1 = 98;\r\nexport const MIN_NUMBER_DICE_2 = 2;\r\nexport const MAX_NUMBER_DICE_2 = 99;\r\n\r\nexport const SESSION_TIMEOUT = 48; // in hours\r\n","import axios from \"axios\";\r\nimport {API_URL} from \"./config\";\r\n\r\naxios.defaults.baseURL = API_URL;\r\n\r\nexport function changeAxiosAuthToken(jwt: string | null) {\r\n    if (jwt === null) {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n        delete axios.defaults.headers.common[\"CustomAuthorization\"];\r\n    } else {\r\n        axios.defaults.headers.common = {\r\n            Authorization: `Bearer ${jwt}`,\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n    }\r\n}\r\n","import jwtDecode from \"jwt-decode\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nimport {State} from \"../../../rootReducer\";\r\nimport {User} from \"./types\";\r\n\r\nexport const getUser = createSelector([(state: State) => state.account.jwt], (jwt) => {\r\n    return jwt !== null ? jwtDecode<User>(jwt) : null;\r\n});\r\n","import {Action, AnyAction} from \"redux\";\r\n\r\nimport {State} from \"../rootReducer\";\r\n\r\nexport function fixedLengthAddElement<T>(array: T[], element: T, maxLength: number): T[] {\r\n    if (array.length >= maxLength) {\r\n        return [...array.slice(array.length - maxLength + 1), element];\r\n    } else {\r\n        return [...array, element];\r\n    }\r\n}\r\n\r\nexport function fixedLengthAddElementFront<T>(array: T[], element: T, maxLength: number): T[] {\r\n    if (array.length >= maxLength) {\r\n        return [element, ...array.slice(0, maxLength - 1)];\r\n    } else {\r\n        return [element, ...array];\r\n    }\r\n}\r\n\r\nexport type GetState = () => State;\r\n\r\nexport type $Values<T extends {[key: string]: unknown}> = T[keyof T];\r\n\r\nexport type ActionType<T extends {[id: string]: (...args: any[]) => any}> = ReturnType<$Values<T>>;\r\n\r\nexport type ActionCreateType<T extends {[key: string]: unknown}> = (...args: any[]) => {type: $Values<T>};\r\n\r\nexport type ThunkAction1<R, S> = (dispatch: Dispatch, getState: () => S) => R;\r\n\r\nexport type ThunkAction2<R> = (dispatch: Dispatch) => R;\r\n\r\nexport type ThunkAction<R, S> = ThunkAction1<R, S> | ThunkAction2<R>;\r\n\r\nexport interface Dispatch<A extends Action = AnyAction> {\r\n    <T extends A>(action: T): T;\r\n    <R>(asyncAction: ThunkAction<R, State>): R;\r\n}\r\n\r\nexport function createConstant<T>(p: T, prefix: string): T {\r\n    const res = prefix + \"/\" + (p as any);\r\n    return res as any;\r\n}\r\n\r\nexport function assertNever(t: never): never {\r\n    return t;\r\n}\r\n\r\nexport function isLocalStorageAvailable() {\r\n    const mod = \"test\";\r\n    try {\r\n        localStorage.setItem(mod, mod);\r\n        localStorage.removeItem(mod);\r\n        return true;\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function isSessionStorageAvailable() {\r\n    const mod = \"test\";\r\n    try {\r\n        sessionStorage.setItem(mod, mod);\r\n        sessionStorage.removeItem(mod);\r\n        return true;\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function truncate(str: string, n: number) {\r\n    if (n < 3) {\r\n        throw new Error(\"n needs to be at least 3\");\r\n    }\r\n\r\n    return str.length > n ? str.substr(0, n - 3) + \"...\" : str;\r\n}\r\n","import {createConstant} from \"../util/util\";\r\n\r\nfunction c<T>(p: T): T {\r\n    return createConstant(p, \"app\");\r\n}\r\n\r\nexport const CHANGE_NOTIFICATION = c(\"CHANGE_NOTIFICATION\");\r\nexport const TOGGLE_THEME = c(\"TOGGLE_THEME\");\r\n","import * as types from \"../../../app/constants\";\r\nimport {ActionCreateType} from \"../../../util/util\";\r\n\r\nconst ca = <T extends ActionCreateType<typeof types>>(a: T) => a;\r\n\r\nexport const showErrorMessage = ca((message: string) => {\r\n    const notification = {message, type: \"error\"};\r\n    return {type: types.CHANGE_NOTIFICATION, notification};\r\n});\r\n\r\nexport const showSuccessMessage = ca((message: string) => {\r\n    const notification = {message, type: \"success\"};\r\n    return {type: types.CHANGE_NOTIFICATION, notification};\r\n});\r\n\r\nexport const showInfoMessage = ca((message: string) => {\r\n    const notification = {message, type: \"info\"};\r\n    return {type: types.CHANGE_NOTIFICATION, notification};\r\n});\r\n\r\nexport const toggleTheme = ca((nightMode: boolean) => {\r\n    return {type: types.TOGGLE_THEME, nightMode};\r\n});\r\n","import * as Sentry from \"@sentry/browser\";\r\nimport {Dispatch} from \"../../../util/util\";\r\nimport {showErrorMessage} from \"./actions\";\r\n\r\nfunction extractFirstLine(str: string) {\r\n    const idx = str.indexOf(\"\\n\");\r\n    return idx !== -1 ? str.substr(0, idx) : str;\r\n}\r\n\r\nexport function catchError(error: any, dispatch: Dispatch) {\r\n    // sentry expects an error object\r\n    if (error instanceof Error) {\r\n        Sentry.withScope((scope) => {\r\n            scope.setExtra(\"error_object\", error);\r\n            Sentry.captureException(error);\r\n        });\r\n    } else {\r\n        Sentry.withScope((scope) => {\r\n            scope.setExtra(\"error_object\", error);\r\n            const sentryError = new Error(error.message);\r\n            Sentry.captureException(sentryError);\r\n        });\r\n    }\r\n\r\n    const response = error.response;\r\n    const data = response ? response.data : null;\r\n    const statusText = response ? response.statusText : null;\r\n    const message = data && data.error ? data.error.message : statusText || error.message || false;\r\n\r\n    if (message && message.length !== 0) {\r\n        let messageToShow = message;\r\n\r\n        // do not completely show very long messages\r\n        if (messageToShow.length > 100) {\r\n            messageToShow = extractFirstLine(message);\r\n        }\r\n        dispatch(showErrorMessage(messageToShow));\r\n    }\r\n}\r\n","import {createConstant} from \"../../../util/util\";\r\n\r\nfunction c<T>(p: T): T {\r\n    return createConstant(p, \"games\");\r\n}\r\n\r\nexport const CHANGE_BETS = c(\"CHANGE_BETS\");\r\nexport const ADD_BET = c(\"ADD_BET\");\r\nexport const CHANGE_MY_BETS = c(\"CHANGE_MY_BETS\");\r\nexport const ADD_MY_BET = c(\"ADD_MY_BET\");\r\n","import * as types from \"./constants\";\r\n\r\nimport {ActionCreateType} from \"../../../util/util\";\r\nimport {Bet} from \"./types\";\r\n\r\nconst ca = <T extends ActionCreateType<typeof types>>(a: T) => a;\r\n\r\nexport const changeBets = ca((bets: Bet[]) => {\r\n    return {type: types.CHANGE_BETS, bets};\r\n});\r\n\r\nexport const addBet = ca((bet: Bet) => {\r\n    return {type: types.ADD_BET, bet};\r\n});\r\n\r\nexport const changeMyBets = ca((myBets: Bet[]) => {\r\n    return {type: types.CHANGE_MY_BETS, myBets};\r\n});\r\n\r\nexport const addMyBet = ca((myBet: Bet) => {\r\n    return {type: types.ADD_MY_BET, myBet};\r\n});\r\n","import axios from \"axios\";\r\n\r\nimport {Dispatch, GetState} from \"../../../util/util\";\r\nimport {getUser} from \"../account/selectors\";\r\nimport {catchError} from \"../utilities/asyncActions\";\r\nimport {addBet, addMyBet, changeBets, changeMyBets} from \"./actions\";\r\nimport {Bet} from \"./types\";\r\n\r\nexport function loadBets() {\r\n    return (dispatch: Dispatch) => {\r\n        axios\r\n            .get(\"/bets/lastBets\")\r\n            .then((response) => {\r\n                const bets = response.data.bets;\r\n                return dispatch(changeBets(bets));\r\n            })\r\n            .catch((error) => {\r\n                catchError(error, dispatch);\r\n            });\r\n    };\r\n}\r\n\r\nexport function loadMyBets(_address: string) {\r\n    return (dispatch: Dispatch) => {\r\n        axios\r\n            .get(`/bets/myLastBets`)\r\n            .then((response) => {\r\n                const myBets = response.data.bets;\r\n                return dispatch(changeMyBets(myBets));\r\n            })\r\n            .catch((error) => {\r\n                catchError(error, dispatch);\r\n            });\r\n    };\r\n}\r\n\r\nexport function addNewBet(bet: Bet) {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        const state = getState();\r\n        const user = getUser(getState());\r\n        const bets = state.bets.allBets;\r\n\r\n        if (bets.length > 0 && bet.id !== bets[0].id + 1) {\r\n            // we missed some bets => reload bets\r\n            dispatch(loadBets());\r\n        } else {\r\n            dispatch(addBet(bet));\r\n        }\r\n\r\n        if (user !== null && user.address === bet.user.address) {\r\n            dispatch(addMyBet(bet));\r\n        }\r\n    };\r\n}\r\n","import {createConstant} from \"../../../util/util\";\r\n\r\nfunction c<T>(p: T): T {\r\n    return createConstant(p, \"chat/friends\");\r\n}\r\n\r\nexport const TOGGLE_CHAT = c(\"TOGGLE_CHAT\");\r\nexport const CHANGE_MESSAGES = c(\"CHANGE_MESSAGES\");\r\nexport const ADD_MESSAGE = c(\"ADD_MESSAGE\");\r\nexport const DELETE_MESSAGE = c(\"DELETE_MESSAGE\");\r\nexport const CHANGE_USERS_ONLINE = c(\"CHANGE_USERS_ONLINE\");\r\n","import {ActionCreateType} from \"../../../util/util\";\r\nimport * as types from \"./constants\";\r\nimport {Message} from \"./types\";\r\n\r\nconst ca = <T extends ActionCreateType<typeof types>>(a: T) => a;\r\n\r\nexport const toggleChat = ca((show: boolean) => {\r\n    return {type: types.TOGGLE_CHAT, show};\r\n});\r\n\r\nexport const changeMessages = ca((messages: Message[]) => {\r\n    return {type: types.CHANGE_MESSAGES, messages};\r\n});\r\n\r\nexport const addMessage = ca((message: Message) => {\r\n    return {type: types.ADD_MESSAGE, message};\r\n});\r\n\r\nexport const deleteMessage = ca((messageId: number) => {\r\n    return {type: types.DELETE_MESSAGE, messageId};\r\n});\r\n\r\nexport const changeUsersOnline = ca((numUsers: number) => {\r\n    return {type: types.CHANGE_USERS_ONLINE, numUsers};\r\n});\r\n","import {createConstant} from \"../../../util/util\";\r\n\r\nfunction c<T>(p: T): T {\r\n    return createConstant(p, \"chat/friends\");\r\n}\r\n\r\nexport const CHANGE_FRIENDS = c(\"CHANGE_FRIENDS\");\r\nexport const ADD_FRIEND = c(\"ADD_FRIEND\");\r\nexport const CHANGE_RECEIVED_FRIEND_REQUESTS = c(\"CHANGE_RECEIVED_FRIEND_REQUESTS\");\r\nexport const ADD_RECEIVED_FRIEND_REQUEST = c(\"ADD_RECEIVED_FRIEND_REQUEST\");\r\nexport const REMOVE_RECEIVED_FRIEND_REQUEST = c(\"REMOVE_RECEIVED_FRIEND_REQUEST\");\r\nexport const CHANGE_SENT_FRIEND_REQUESTS = c(\"CHANGE_SENT_FRIEND_REQUESTS\");\r\nexport const ADD_SENT_FRIEND_REQUEST = c(\"ADD_SENT_FRIEND_REQUEST\");\r\nexport const REMOVE_SENT_FRIEND_REQUEST = c(\"REMOVE_SENT_FRIEND_REQUEST\");\r\nexport const TOGGLE_FRIEND_ONLINE = c(\"TOGGLE_FRIEND_ONLINE\");\r\n","import * as types from \"./constants\";\r\n\r\nimport {ActionCreateType} from \"../../../util/util\";\r\nimport {Friend, FriendRequest} from \"./types\";\r\n\r\nconst ca = <T extends ActionCreateType<typeof types>>(a: T) => a;\r\n\r\nexport const changeFriends = ca((friends: Friend[]) => {\r\n    return {type: types.CHANGE_FRIENDS, friends};\r\n});\r\n\r\nexport const addFriendS = ca((friend: Friend) => {\r\n    return {type: types.ADD_FRIEND, friend};\r\n});\r\n\r\nexport const changeReceivedFriendRequests = ca((receivedFriendRequests: FriendRequest[]) => {\r\n    return {type: types.CHANGE_RECEIVED_FRIEND_REQUESTS, receivedFriendRequests};\r\n});\r\n\r\nexport const addReceivedFriendRequest = ca((receivedFriendRequest: FriendRequest) => {\r\n    return {type: types.ADD_RECEIVED_FRIEND_REQUEST, receivedFriendRequest};\r\n});\r\n\r\nexport const changeSentFriendRequests = ca((sentFriendRequests: FriendRequest[]) => {\r\n    return {type: types.CHANGE_SENT_FRIEND_REQUESTS, sentFriendRequests};\r\n});\r\n\r\nexport const addSentFriendRequest = ca((sentFriendRequest: FriendRequest) => {\r\n    return {type: types.ADD_SENT_FRIEND_REQUEST, sentFriendRequest};\r\n});\r\n\r\nexport const removeReceivedFriendRequest = ca((address: string) => {\r\n    return {type: types.REMOVE_RECEIVED_FRIEND_REQUEST, address};\r\n});\r\n\r\nexport const removeSentFriendRequest = ca((address: string) => {\r\n    return {type: types.REMOVE_SENT_FRIEND_REQUEST, address};\r\n});\r\n\r\nexport const toggleFriendOnline = ca((address: string, online: boolean) => {\r\n    return {type: types.TOGGLE_FRIEND_ONLINE, status: {address, online}};\r\n});\r\n","import {hide, show} from \"redux-modal\";\r\n\r\nimport {Dispatch, GetState} from \"../../../util/util\";\r\nimport {User} from \"../account/types\";\r\nimport {Bet} from \"../bets/types\";\r\n\r\nexport function showMissingWalletModal() {\r\n    return show(\"missingWallet\");\r\n}\r\n\r\nexport function hideMissingWalletModal() {\r\n    return hide(\"missingWallet\");\r\n}\r\n\r\nfunction showRegisterModalInternal() {\r\n    return show(\"register\");\r\n}\r\n\r\nexport function hideRegisterModal() {\r\n    return hide(\"register\");\r\n}\r\n\r\nexport function showBetModal({bet, betId}: {bet?: Bet; betId?: number}) {\r\n    return show(\"bet\", {bet, betId});\r\n}\r\n\r\nexport function hideBetModal() {\r\n    return hide(\"bet\");\r\n}\r\n\r\nexport function showUserModal({user, userName}: {user?: User; userName?: string}) {\r\n    return show(\"user\", {user, userName});\r\n}\r\n\r\nexport function hideUserModal() {\r\n    return hide(\"user\");\r\n}\r\n\r\nexport function showRegisterModal() {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        if (!getState().web3.web3) {\r\n            dispatch(showMissingWalletModal());\r\n        } else {\r\n            dispatch(showRegisterModalInternal());\r\n        }\r\n    };\r\n}\r\n","import {createConstant} from \"../../../util/util\";\r\n\r\nfunction c<T>(p: T): T {\r\n    return createConstant(p, \"web3\");\r\n}\r\n\r\nexport const CHANGE_WEB3 = c(\"CHANGE_WEB3\");\r\nexport const CHANGE_ACCOUNT = c(\"CHANGE_ACCOUNT\");\r\nexport const CHANGE_NETWORK = c(\"CHANGE_NETWORK\");\r\nexport const CHANGE_CONTRACT = c(\"CHANGE_CONTRACT\");\r\nexport const CHANGE_BALANCE = c(\"CHANGE_BALANCE\");\r\n","import Web3 from \"web3\";\r\n\r\nimport {ActionCreateType} from \"../../../util/util\";\r\nimport * as types from \"./constants\";\r\n\r\nconst ca = <T extends ActionCreateType<typeof types>>(a: T) => a;\r\n\r\nexport const changeWeb3 = ca((web3: Web3 | null) => {\r\n    return {type: types.CHANGE_WEB3, web3};\r\n});\r\n\r\nexport const changeAccount = ca((account: string | null) => {\r\n    return {type: types.CHANGE_ACCOUNT, account};\r\n});\r\n\r\nexport const changeChainId = ca((chainId: number | null) => {\r\n    return {type: types.CHANGE_NETWORK, chainId};\r\n});\r\n\r\nexport const changeContract = ca((contract: any | null) => {\r\n    return {type: types.CHANGE_CONTRACT, contract};\r\n});\r\n\r\nexport const changeBalance = ca((balance: number | null) => {\r\n    return {type: types.CHANGE_BALANCE, balance};\r\n});\r\n","import {recoverTypedData} from \"@dicether/eip712\";\r\nimport * as Sentry from \"@sentry/browser\";\r\nimport BN from \"bn.js\";\r\nimport {toChecksumAddress} from \"ethereumjs-util\";\r\nimport Web3 from \"web3\";\r\nimport {AbstractProvider, TransactionReceipt} from \"web3-core\";\r\n\r\nimport {CONTRACT_ADDRESS, FROM_WEI_TO_BASE} from \"../../../config/config\";\r\nimport {Dispatch, GetState} from \"../../../util/util\";\r\nimport {changeAccount, changeBalance, changeContract, changeChainId, changeWeb3} from \"./actions\";\r\n\r\nconst stateChannelContractAbi = require(\"assets/json/GameChannelContract.json\");\r\n\r\nexport function fetchChainId() {\r\n    return async (dispatch: Dispatch, getState: GetState) => {\r\n        const chainId = getState().web3.chainId;\r\n        if (window.ethereum !== null) {\r\n            try {\r\n                const newChainId = parseInt(await window.ethereum.request({method: \"eth_chainId\", params: []}));\r\n                if (newChainId !== chainId) {\r\n                    dispatch(changeChainId(newChainId));\r\n                }\r\n            } catch (ex) {\r\n                console.log(\"Chain id fetching failed: \" + ex);\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nexport function fetchWeb3() {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        const web3Data = getState().web3;\r\n        if (window.ethereum && web3Data.web3 === null) {\r\n            const web3 = new Web3(window.ethereum);\r\n            const contract = new web3.eth.Contract(stateChannelContractAbi, CONTRACT_ADDRESS);\r\n            dispatch(changeWeb3(web3));\r\n            dispatch(changeContract(contract));\r\n        } else if (window.ethereum === undefined) {\r\n            dispatch(changeWeb3(null));\r\n        }\r\n    };\r\n}\r\n\r\nexport function fetchAccount() {\r\n    console.log(\"platform-------\");\r\n    return async (dispatch: Dispatch, getState: GetState) => {\r\n        const web3 = getState().web3.web3;\r\n        const curAccount = getState().web3.account;\r\n        if (web3 !== null) {\r\n            return web3.eth\r\n                .getAccounts()\r\n                .then((accounts) => {\r\n                    if (accounts.length === 0) {\r\n                        if (curAccount !== null) {\r\n                            dispatch(changeAccount(null));\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    const account = toChecksumAddress(accounts[0]);\r\n                    if (account !== curAccount) {\r\n                        dispatch(changeAccount(account));\r\n                    }\r\n                })\r\n                .catch((error) => console.log(\"Account fetching failed: \" + error));\r\n        } else if (curAccount !== null) {\r\n            dispatch(changeAccount(null));\r\n        }\r\n    };\r\n}\r\n\r\nexport function fetchAccountBalance() {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        const web3State = getState().web3;\r\n        const account = web3State.account;\r\n        const web3 = web3State.web3;\r\n\r\n        if (web3 !== null && account !== null) {\r\n            web3.eth\r\n                .getBalance(account)\r\n                .then((result) => {\r\n                    const balance = new BN(result).div(new BN(FROM_WEI_TO_BASE)).toNumber();\r\n                    if (balance !== web3State.balance) {\r\n                        dispatch(changeBalance(balance));\r\n                    }\r\n                })\r\n                .catch((error) => console.log(\"Balance fetching failed: \" + error));\r\n        } else if (web3State.balance !== null) {\r\n            dispatch(changeBalance(null));\r\n        }\r\n    };\r\n}\r\n\r\nexport function registerAccountChainIdListener() {\r\n    return (dispatch: Dispatch) => {\r\n        if (window.ethereum === undefined) return;\r\n\r\n        window.ethereum.on(\"accountsChanged\", (accounts: string[]) => {\r\n            if (accounts.length === 0) {\r\n                dispatch(changeAccount(null));\r\n            } else {\r\n                const account = toChecksumAddress(accounts[0]);\r\n                dispatch(changeAccount(account));\r\n            }\r\n        });\r\n\r\n        window.ethereum.on(\"chainChanged\", (chainId: string) => {\r\n            dispatch(changeChainId(parseInt(chainId)));\r\n        });\r\n    };\r\n}\r\n\r\nexport function unregisterAccounChainIdListener() {\r\n    window.ethereum.removeListener(\"accountsChanged\");\r\n    window.ethereum.removeListener(\"chainChanged\");\r\n}\r\n\r\nexport function fetchAllWeb3() {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(fetchWeb3());\r\n        dispatch(fetchAccount());\r\n        dispatch(fetchChainId());\r\n        dispatch(fetchAccountBalance());\r\n    };\r\n}\r\n\r\nexport function getTransactionReceipt(web3: Web3, transactionHash: string): Promise<TransactionReceipt | null> {\r\n    return web3.eth.getTransactionReceipt(transactionHash);\r\n}\r\n\r\nexport async function requestAccounts(dispatch: Dispatch) {\r\n    try {\r\n        await (window as any).ethereum.enable();\r\n        await dispatch(fetchAccount());\r\n    } catch (error: any) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport async function signTypedData(web3: Web3, from: string, typedData: any): Promise<string> {\r\n    const provider: AbstractProvider = web3.currentProvider as AbstractProvider;\r\n\r\n    // Use v4 for MetaMask as Ledger Nano used with MataMask supports only version 4\r\n    const isMetaMask = (provider as any).isMetaMask !== undefined;\r\n    const method = `eth_signTypedData_v${isMetaMask ? 4 : 3}`;\r\n    const params = [from, JSON.stringify(typedData)];\r\n\r\n    if (!provider.request) return Promise.reject(\"provider.request undefined!\");\r\n\r\n    const sig = await provider.request({\r\n        method,\r\n        params,\r\n    });\r\n\r\n    const recoveredAddress = recoverTypedData(typedData, sig);\r\n    if (recoveredAddress !== from) {\r\n        Sentry.captureMessage(\r\n            `Invalid sig ${sig} of data ${JSON.stringify(typedData)} recovered ${recoveredAddress} instead of ${from}.`\r\n        );\r\n    }\r\n    return sig;\r\n}\r\n","import {createConstant} from \"../../../util/util\";\r\n\r\nfunction c<T>(p: T): T {\r\n    return createConstant(p, \"account\");\r\n}\r\n\r\nexport const CHANGE_FIRST_VISITED = c(\"CHANGE_FIRST_VISITED\");\r\nexport const CHANGE_JWT = c(\"CHANGE_JWT\");\r\nexport const CHANGE_USER_STATS = c(\"CHANGE_USER_STATS\");\r\nexport const CHANGE_USER_BETS = c(\"CHANGE_USER_BETS\");\r\nexport const CHANGE_GAME_SESSIONS = c(\"CHANGE_GAME_SESSIONS\");\r\n","import {ActionCreateType} from \"../../../util/util\";\r\nimport * as types from \"./constants\";\r\nimport {GameSession, Stats} from \"./types\";\r\n\r\nconst ca = <T extends ActionCreateType<typeof types>>(a: T) => a;\r\n\r\nexport const changeFirstVisitedS = ca((firstVisited: boolean) => {\r\n    return {type: types.CHANGE_FIRST_VISITED, firstVisited};\r\n});\r\n\r\nexport const changeJWTS = ca((jwt: string | null) => {\r\n    return {type: types.CHANGE_JWT, jwt};\r\n});\r\n\r\nexport const changeMyStats = ca((stats: Stats) => {\r\n    return {type: types.CHANGE_USER_STATS, stats};\r\n});\r\n\r\nexport const changeMyGameSessions = ca((gameSessions: GameSession[]) => {\r\n    return {type: types.CHANGE_GAME_SESSIONS, gameSessions};\r\n});\r\n","import * as Sentry from \"@sentry/browser\";\r\nimport axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nimport {changeAxiosAuthToken} from \"../../../config/apiEndpoints\";\r\nimport {REALM} from \"../../../config/config\";\r\nimport {Dispatch, GetState, isLocalStorageAvailable} from \"../../../util/util\";\r\nimport {loadBets, loadMyBets} from \"../bets/asyncActions\";\r\nimport {loadMessages} from \"../chat/asyncActions\";\r\nimport {loadFriendRequests, loadFriends} from \"../friends/asyncActions\";\r\nimport {hideRegisterModal, showMissingWalletModal} from \"../modals/actions\";\r\nimport {showErrorMessage} from \"../utilities/actions\";\r\nimport {catchError} from \"../utilities/asyncActions\";\r\nimport {requestAccounts, signTypedData} from \"../web3/asyncActions\";\r\nimport {changeFirstVisitedS, changeJWTS, changeMyGameSessions, changeMyStats} from \"./actions\";\r\nimport {User} from \"./types\";\r\n\r\nconst authenticateTypes = {\r\n    EIP712Domain: [{name: \"name\", type: \"string\"}],\r\n    Authenticate: [\r\n        {name: \"address\", type: \"address\"},\r\n        {name: \"nonce\", type: \"uint64\"},\r\n    ],\r\n};\r\n\r\nconst registerTypes = {\r\n    EIP712Domain: [{name: \"name\", type: \"string\"}],\r\n    Register: [\r\n        {name: \"address\", type: \"address\"},\r\n        {name: \"username\", type: \"string\"},\r\n    ],\r\n};\r\n\r\nexport function changeFirstVisited(firstVisited: boolean) {\r\n    return (dispatch: Dispatch) => {\r\n        if (isLocalStorageAvailable()) {\r\n            localStorage.setItem(\"visited\", String(firstVisited));\r\n        }\r\n        dispatch(changeFirstVisitedS(firstVisited));\r\n    };\r\n}\r\n\r\nexport function changeJWT(jwt: string | null) {\r\n    return (dispatch: Dispatch) => {\r\n        changeAxiosAuthToken(jwt);\r\n        if (jwt === null) {\r\n            sessionStorage.removeItem(\"jwt\");\r\n        } else {\r\n            sessionStorage.setItem(\"jwt\", jwt);\r\n        }\r\n        dispatch(changeJWTS(jwt));\r\n    };\r\n}\r\n\r\nexport function authenticate() {\r\n    return async (dispatch: Dispatch, getState: GetState) => {\r\n        // requestAccounts\r\n        // const web3Account = getState().web3.account;\r\n        // if (web3Account === null) {\r\n        //     dispatch(showErrorMessage(\"Error: You need to log in to your web3 wallet!!\"));\r\n        //     return;\r\n        // }\r\n        // return;\r\n    };\r\n}\r\n\r\nexport function register(username: string) {\r\n    return async (dispatch: Dispatch, getState: GetState) => {\r\n        const web3State = getState().web3;\r\n        const web3 = web3State.web3;\r\n\r\n        if (web3 === null) {\r\n            dispatch(showMissingWalletModal());\r\n            return undefined;\r\n        }\r\n\r\n        if (web3State.account === null) {\r\n            await requestAccounts(dispatch);\r\n        }\r\n        const web3Account = getState().web3.account;\r\n        if (web3Account === null) {\r\n            dispatch(showErrorMessage(\"Error: You need to log in to your web3 wallet!!\"));\r\n            return;\r\n        }\r\n\r\n        const typedData = {\r\n            types: registerTypes,\r\n            primaryType: \"Register\",\r\n            domain: {name: REALM},\r\n            message: {address: web3Account, username},\r\n        };\r\n\r\n        const referredBy = localStorage.getItem(\"referral\");\r\n\r\n        return signTypedData(web3, web3Account, typedData)\r\n            .then((result) => {\r\n                return axios.post(\"/auth/register\", {\r\n                    realm: REALM,\r\n                    address: web3Account,\r\n                    username,\r\n                    signature: result,\r\n                    referredBy: referredBy ? referredBy : undefined,\r\n                });\r\n            })\r\n            .then((response) => {\r\n                dispatch(hideRegisterModal());\r\n                initUser(dispatch, response.data.jwt);\r\n            })\r\n            .catch((error) => catchError(error, dispatch));\r\n    };\r\n}\r\n\r\nexport function deauthenticate() {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        if (getState().account.jwt !== null) {\r\n            dispatch(changeJWT(null));\r\n            dispatch({type: \"USER_LOGOUT\"});\r\n            loadDefaultData(dispatch);\r\n            Sentry.configureScope((scope) => scope.setUser({}));\r\n        }\r\n    };\r\n}\r\n\r\nexport function loadStats(address: string) {\r\n    return (dispatch: Dispatch) => {\r\n        return axios\r\n            .get(`/stats/user/${address}`)\r\n            .then((result) => dispatch(changeMyStats(result.data)))\r\n            .catch((error) => catchError(error, dispatch));\r\n    };\r\n}\r\n\r\nexport function loadGameSessions(address: string) {\r\n    return (dispatch: Dispatch) => {\r\n        return axios\r\n            .get(`/gameSessions/${address}`)\r\n            .then((result) => dispatch(changeMyGameSessions(result.data)))\r\n            .catch((error) => catchError(error, dispatch));\r\n    };\r\n}\r\n\r\nexport function initUser(dispatch: Dispatch, jwt: string) {\r\n    const {address, username} = jwtDecode<User>(jwt);\r\n    dispatch(changeJWT(jwt));\r\n    dispatch(loadStats(address)).catch(console.log);\r\n    dispatch(loadGameSessions(address)).catch(console.log);\r\n    dispatch(loadMyBets(address));\r\n    dispatch(loadFriends(address)).catch(console.log);\r\n    dispatch(loadFriendRequests(address)).catch(console.log);\r\n    Sentry.configureScope((scope) =>\r\n        scope.setUser({\r\n            username,\r\n            address,\r\n        })\r\n    );\r\n}\r\n\r\nexport function loadDefaultData(dispatch: Dispatch) {\r\n    dispatch(loadBets());\r\n    dispatch(loadMessages());\r\n}\r\n","import axios from \"axios\";\r\nimport {Dispatch} from \"../../../util/util\";\r\nimport {catchError} from \"../utilities/asyncActions\";\r\nimport {\r\n    addFriendS,\r\n    addSentFriendRequest,\r\n    changeFriends,\r\n    changeReceivedFriendRequests,\r\n    changeSentFriendRequests,\r\n    removeReceivedFriendRequest,\r\n    removeSentFriendRequest,\r\n} from \"./actions\";\r\nimport {Friend} from \"./types\";\r\n\r\nexport function sendFriendRequest(address: string) {\r\n    return (dispatch: Dispatch) => {\r\n        return axios\r\n            .post(\"/chat/sendFriendRequest\", {\r\n                address,\r\n            })\r\n            .then((response) => dispatch(addSentFriendRequest(response.data)))\r\n            .catch((error) => catchError(error, dispatch));\r\n    };\r\n}\r\n\r\nexport function declineFriendRequest(address: string) {\r\n    return (dispatch: Dispatch) => {\r\n        return axios\r\n            .post(\"/chat/declineFriendRequest\", {\r\n                address,\r\n            })\r\n            .then(() => dispatch(removeReceivedFriendRequest(address)))\r\n            .catch((error) => catchError(error, dispatch));\r\n    };\r\n}\r\n\r\nexport function addFriend(friend: Friend) {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(removeReceivedFriendRequest(friend.user.address));\r\n        dispatch(removeSentFriendRequest(friend.user.address));\r\n        dispatch(addFriendS(friend));\r\n    };\r\n}\r\n\r\nexport function declinedFriendRequest(address: string) {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(removeSentFriendRequest(address));\r\n    };\r\n}\r\n\r\nexport function cancelFriendRequest(address: string) {\r\n    return (dispatch: Dispatch) => {\r\n        return axios\r\n            .post(\"/chat/cancelFriendRequest\", {\r\n                address,\r\n            })\r\n            .then(() => dispatch(removeSentFriendRequest(address)))\r\n            .catch((error) => catchError(error, dispatch));\r\n    };\r\n}\r\n\r\nexport function acceptFriendRequest(address: string) {\r\n    return (dispatch: Dispatch) => {\r\n        return axios\r\n            .post(\"/chat/acceptFriendRequest\", {\r\n                address,\r\n            })\r\n            .then((response) => {\r\n                dispatch(addFriend(response.data));\r\n                dispatch(removeReceivedFriendRequest(address));\r\n            })\r\n            .catch((error) => catchError(error, dispatch));\r\n    };\r\n}\r\n\r\nexport function loadFriendRequests(_address: string) {\r\n    return (dispatch: Dispatch) => {\r\n        return axios\r\n            .get(\"/chat/friendRequests\")\r\n            .then((response) => {\r\n                const data = response.data;\r\n                dispatch(changeSentFriendRequests(data.sentFriendRequests));\r\n                dispatch(changeReceivedFriendRequests(data.receivedFriendRequests));\r\n            })\r\n            .catch((error) => catchError(error, dispatch));\r\n    };\r\n}\r\n\r\nexport function loadFriends(_address: string) {\r\n    return (dispatch: Dispatch) => {\r\n        return axios\r\n            .get(\"/chat/friends\")\r\n            .then((response) => dispatch(changeFriends(response.data)))\r\n            .catch((error) => catchError(error, dispatch));\r\n    };\r\n}\r\n","import axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport {Dispatch, GetState} from \"../../../util/util\";\r\nimport {User} from \"../account/types\";\r\nimport {showInfoMessage, showSuccessMessage} from \"../utilities/actions\";\r\nimport {catchError} from \"../utilities/asyncActions\";\r\nimport {addMessage, changeMessages} from \"./actions\";\r\nimport {executeCommands} from \"./commands\";\r\nimport {Message} from \"./types\";\r\n\r\nexport function loadMessages() {\r\n    return (dispatch: Dispatch) => {\r\n        axios\r\n            .get(\"/chat/messages\")\r\n            .then((response) => {\r\n                const messages = response.data;\r\n                dispatch(changeMessages(messages));\r\n            })\r\n            .catch((error) => catchError(error, dispatch));\r\n    };\r\n}\r\n\r\nexport function sendMessage(message: string) {\r\n    return (dispatch: Dispatch) => {\r\n        // check if special message\r\n        if (executeCommands(dispatch, message)) {\r\n            return;\r\n        }\r\n\r\n        axios\r\n            .post(\"/chat/sendMessage\", {\r\n                message,\r\n            })\r\n            .catch((error) => catchError(error, dispatch));\r\n    };\r\n}\r\n\r\nexport function mute(address: string) {\r\n    return (dispatch: Dispatch) => {\r\n        axios\r\n            .post(\"/chat/muteUser\", {\r\n                address,\r\n            })\r\n            .then(() => {\r\n                dispatch(showSuccessMessage(\"Muted player!\"));\r\n            })\r\n            .catch((error) => catchError(error, dispatch));\r\n    };\r\n}\r\n\r\nexport function deleteMessage(messageId: number) {\r\n    return (dispatch: Dispatch) => {\r\n        axios\r\n            .post(\"/chat/deleteMessage\", {\r\n                messageId,\r\n            })\r\n            .catch((error) => catchError(error, dispatch));\r\n    };\r\n}\r\n\r\nexport function addNewMessage(message: Message) {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        const messages = getState().chat.messages;\r\n        if (messages.length > 0 && messages[messages.length - 1].id + 1 !== message.id) {\r\n            return dispatch(loadMessages());\r\n        }\r\n\r\n        const jwt = getState().account.jwt;\r\n        const userName = jwt ? jwtDecode<User>(jwt).username : undefined;\r\n        const msg = message.message;\r\n\r\n        if (\r\n            message.user.username !== userName &&\r\n            (msg.includes(\"@everybody\") || (userName && msg.includes(`@${userName}`)))\r\n        ) {\r\n            dispatch(showInfoMessage(`You were mentioned by ${message.user.username} in the chat!`));\r\n        }\r\n\r\n        dispatch(addMessage(message));\r\n    };\r\n}\r\n","import * as types from \"./constants\";\r\n\r\nimport {ActionType, assertNever, fixedLengthAddElementFront} from \"../../../util/util\";\r\nimport * as actions from \"./actions\";\r\nimport {Bet} from \"./types\";\r\n\r\nexport type Actions = ActionType<typeof actions>;\r\n\r\nexport type State = {\r\n    allBets: Bet[];\r\n    myBets: Bet[];\r\n};\r\n\r\nconst initialState = {\r\n    allBets: [],\r\n    myBets: [],\r\n};\r\n\r\nexport default function games(state: State = initialState, action: Actions): State {\r\n    switch (action.type) {\r\n        case types.CHANGE_BETS:\r\n            return {...state, allBets: action.bets};\r\n        case types.ADD_BET:\r\n            return {...state, allBets: fixedLengthAddElementFront(state.allBets, action.bet, 20)};\r\n        case types.CHANGE_MY_BETS:\r\n            return {...state, myBets: action.myBets};\r\n        case types.ADD_MY_BET:\r\n            return {...state, myBets: fixedLengthAddElementFront(state.myBets, action.myBet, 20)};\r\n        default:\r\n            assertNever(action);\r\n            return state;\r\n    }\r\n}\r\n","import {ActionType, assertNever, fixedLengthAddElement} from \"../../../util/util\";\r\nimport * as types from \"./constants\";\r\n\r\nimport * as actions from \"./actions\";\r\nimport {Message} from \"./types\";\r\n\r\nexport type Actions = ActionType<typeof actions>;\r\n\r\nexport type State = {\r\n    readonly show: boolean;\r\n    readonly messages: Message[];\r\n    readonly numUsers: number;\r\n};\r\n\r\nconst initialState: State = {\r\n    show: window.innerWidth >= 992,\r\n    messages: [],\r\n    numUsers: 0,\r\n};\r\n\r\nconst MAX_MESSAGES = 50;\r\n\r\nexport default function chat(state: State = initialState, action: Actions): State {\r\n    switch (action.type) {\r\n        case types.TOGGLE_CHAT:\r\n            return {...state, show: action.show};\r\n        case types.CHANGE_MESSAGES:\r\n            return {...state, messages: action.messages};\r\n        case types.ADD_MESSAGE:\r\n            return {...state, messages: fixedLengthAddElement(state.messages, action.message, MAX_MESSAGES)};\r\n        case types.CHANGE_USERS_ONLINE:\r\n            return {...state, numUsers: action.numUsers};\r\n        case types.DELETE_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: state.messages.map((m) => (m.id === action.messageId ? {...m, deleted: true} : m)),\r\n            };\r\n        default:\r\n            assertNever(action);\r\n            return state;\r\n    }\r\n}\r\n","import * as types from \"./constants\";\r\n\r\nimport {ActionType, assertNever} from \"../../../util/util\";\r\nimport * as actions from \"./actions\";\r\nimport {Friend, FriendRequest} from \"./types\";\r\n\r\nexport type Actions = ActionType<typeof actions>;\r\n\r\nexport type State = {\r\n    readonly friends: Friend[];\r\n    readonly sentFriendRequests: FriendRequest[];\r\n    readonly receivedFriendRequests: FriendRequest[];\r\n};\r\n\r\nexport const initialState: State = {\r\n    friends: [],\r\n    sentFriendRequests: [],\r\n    receivedFriendRequests: [],\r\n};\r\n\r\nfunction updateFriendStatus(friend: Friend, online: boolean) {\r\n    return {...friend, online};\r\n}\r\n\r\nexport default function (state: State = initialState, action: Actions) {\r\n    switch (action.type) {\r\n        case types.CHANGE_FRIENDS:\r\n            return {...state, friends: action.friends};\r\n        case types.ADD_FRIEND:\r\n            return {...state, friends: [...state.friends, action.friend]};\r\n        case types.CHANGE_RECEIVED_FRIEND_REQUESTS:\r\n            return {...state, receivedFriendRequests: action.receivedFriendRequests};\r\n        case types.ADD_RECEIVED_FRIEND_REQUEST:\r\n            return {\r\n                ...state,\r\n                receivedFriendRequests: [...state.receivedFriendRequests, action.receivedFriendRequest],\r\n            };\r\n        case types.REMOVE_RECEIVED_FRIEND_REQUEST: {\r\n            const address = action.address;\r\n            return {\r\n                ...state,\r\n                receivedFriendRequests: state.receivedFriendRequests.filter(\r\n                    (friendReq) => friendReq.from.address !== address\r\n                ),\r\n            };\r\n        }\r\n        case types.CHANGE_SENT_FRIEND_REQUESTS:\r\n            return {...state, sentFriendRequests: action.sentFriendRequests};\r\n        case types.ADD_SENT_FRIEND_REQUEST:\r\n            return {...state, sentFriendRequests: [...state.sentFriendRequests, action.sentFriendRequest]};\r\n        case types.REMOVE_SENT_FRIEND_REQUEST: {\r\n            const address = action.address;\r\n            return {\r\n                ...state,\r\n                sentFriendRequests: state.sentFriendRequests.filter((friendReq) => friendReq.to.address !== address),\r\n            };\r\n        }\r\n        case types.TOGGLE_FRIEND_ONLINE: {\r\n            const status = action.status;\r\n            return {\r\n                ...state,\r\n                friends: state.friends.map((friend) =>\r\n                    status.address === friend.user.address ? updateFriendStatus(friend, status.online) : friend\r\n                ),\r\n            };\r\n        }\r\n        default:\r\n            assertNever(action);\r\n            return state;\r\n    }\r\n}\r\n","import {createConstant} from \"../../../util/util\";\r\n\r\nfunction c<T>(p: T): T {\r\n    return createConstant(p, \"games/plinko\");\r\n}\r\n\r\nexport const CHANGE_VALUE = c(\"CHANGE_VALUE\");\r\nexport const CHANGE_NUM = c(\"CHANGE_NUM\");\r\n","import * as types from \"./constants\";\r\n\r\nimport {GameType, maxBet} from \"@dicether/state-channel\";\r\nimport {KELLY_FACTOR, MIN_BANKROLL, MIN_BET_VALUE} from \"../../../config/config\";\r\nimport {ActionType, assertNever} from \"../../../util/util\";\r\nimport * as actions from \"./actions\";\r\n\r\nexport type Actions = ActionType<typeof actions>;\r\n\r\nexport type State = {\r\n    num: number;\r\n    value: number;\r\n};\r\n\r\nconst initialState = {\r\n    num: 212,\r\n    value: MIN_BET_VALUE,\r\n};\r\n\r\nfunction updateNum(state: State, num: number) {\r\n    const maxBetValue = maxBet(GameType.PLINKO, num, MIN_BANKROLL, KELLY_FACTOR);\r\n    const value = Math.min(maxBetValue, state.value);\r\n\r\n    return {...state, value, num};\r\n}\r\n\r\nexport default function plinko(state: State = initialState, action: Actions): State {\r\n    switch (action.type) {\r\n        case types.CHANGE_NUM:\r\n            return updateNum(state, action.num);\r\n        case types.CHANGE_VALUE:\r\n            return {...state, value: action.value};\r\n        default:\r\n            assertNever(action);\r\n            return state;\r\n    }\r\n}\r\n","import {createConstant} from \"../../../../util/util\";\r\n\r\nfunction c<T>(p: T): T {\r\n    return createConstant(p, \"games\");\r\n}\r\n\r\nexport const CHANGE_BETS = c(\"CHANGE_BETS\");\r\nexport const ADD_BET = c(\"ADD_BET\");\r\nexport const CHANGE_MY_BETS = c(\"CHANGE_MY_BETS\");\r\nexport const ADD_MY_BET = c(\"ADD_MY_BET\");\r\nexport const TOGGLE_EXPERT_VIEW = c(\"TOGGLE_EXPERT_VIEW\");\r\nexport const TOGGLE_HELP = c(\"TOGGLE_HELP\");\r\nexport const TOGGLE_SOUND = c(\"TOGGLE_SOUND\");\r\n","import * as types from \"./constants\";\r\n\r\nimport {ActionType, assertNever} from \"../../../../util/util\";\r\nimport * as actions from \"./actions\";\r\n\r\nexport type Actions = ActionType<typeof actions>;\r\n\r\nexport type State = {\r\n    showHelp: boolean;\r\n    showExpertView: boolean;\r\n    sound: boolean;\r\n};\r\n\r\nconst initialState = {\r\n    showHelp: false,\r\n    showExpertView: false,\r\n    sound: true,\r\n};\r\n\r\nexport default function games(state: State = initialState, action: Actions): State {\r\n    switch (action.type) {\r\n        case types.TOGGLE_HELP:\r\n            return {...state, showHelp: action.show};\r\n        case types.TOGGLE_EXPERT_VIEW:\r\n            return {...state, showExpertView: action.show};\r\n        case types.TOGGLE_SOUND:\r\n            return {...state, sound: action.enabled};\r\n        default:\r\n            assertNever(action);\r\n            return state;\r\n    }\r\n}\r\n","import {createConstant} from \"../../../../util/util\";\r\n\r\nfunction c<T>(p: T): T {\r\n    return createConstant(p, \"games/state\");\r\n}\r\n\r\nexport const CREATING_GAME = c(\"CREATING_GAME\");\r\n\r\nexport const GAME_CREATED = c(\"GAME_CREATED\");\r\nexport const ENDED_GAME = c(\"ENDED_GAME\");\r\nexport const PLACE_BET = c(\"PLACE_BET\");\r\nexport const INVALID_SEED = c(\"INVALID_SEED\");\r\nexport const END_BET = c(\"END_BET\");\r\nexport const CHANGE_STATUS = c(\"CHANGE_STATUS\");\r\nexport const ENDED_WITH_REASON = c(\"ENDED_WITH_REASON\");\r\n\r\nexport const USER_INITIATE_CONFLICT_END = c(\"INITIATE_CONFLICT_END\");\r\nexport const USER_ABORT_CONFLICT_END = c(\"USER_ABORT_CONFLICT_END\");\r\nexport const USER_CONFLICT_END = c(\"USER_CONFLICT_END\");\r\nexport const USER_INITIATE_FORCE_END = c(\"USER_INITIATE_FORCE_END\");\r\nexport const USER_ABORT_FORCE_END = c(\"USER_ABORT_FORCE_END\");\r\nexport const SERVER_CONFLICT_END = c(\"SERVER_CONFLICT_END\");\r\n\r\nexport const RESTORE_STATE = c(\"RESTORE_STATE\");\r\nexport const CLEAR_STATE = c(\"CLEAR_STATE\");\r\n","import {Bet, keccak} from \"@dicether/state-channel\";\r\nimport * as Sentry from \"@sentry/browser\";\r\n\r\nimport {ActionType, assertNever} from \"../../../../util/util\";\r\nimport * as actions from \"./actions\";\r\nimport * as types from \"./constants\";\r\nimport {CHAIN_ID} from \"../../../../config/config\";\r\n\r\nexport type Actions = ActionType<typeof actions>;\r\n\r\nexport type Status =\r\n    | \"CREATING\"\r\n    | \"ACTIVE\"\r\n    | \"ENDED\"\r\n    | \"PLACED_BET\" // TODO: remove?\r\n    | \"SERVER_INITIATED_CONFLICT_END\"\r\n    | \"USER_INITIATED_CONFLICT_END\"\r\n    | \"SERVER_CONFLICT_ENDED\"\r\n    | \"USER_CONFLICT_ENDED\"\r\n    | \"USER_INITIATED_FORCE_END\";\r\n\r\nexport type ReasonEnded =\r\n    | \"REGULAR_ENDED\"\r\n    | \"END_FORCED_BY_SERVER\"\r\n    | \"END_FORCED_BY_USER\"\r\n    | \"REJECTED_BY_SERVER\"\r\n    | \"TRANSACTION_FAILURE\"\r\n    | \"CANCELLED_BY_USER\";\r\n\r\nexport type State = {\r\n    chainId: number;\r\n\r\n    status: Status;\r\n    reasonEnded?: ReasonEnded;\r\n\r\n    createTransactionHash?: string;\r\n    endTransactionHash?: string;\r\n    forceEndTransactionHash?: string;\r\n    conflictEndTransactionHash?: string;\r\n    conflictEndTime?: Date;\r\n    previousState?: Status; // for user conflict end, force end aborting\r\n\r\n    gameId?: number;\r\n\r\n    hashChain: string[];\r\n    stake: number;\r\n\r\n    roundId: number;\r\n    gameType: number;\r\n    num: number;\r\n    betValue?: number;\r\n    balance: number;\r\n    oldBalance: number;\r\n    serverHash?: string;\r\n    userHash?: string;\r\n    serverSig?: string;\r\n    userSig?: string;\r\n};\r\n\r\nconst initialState: State = {\r\n    chainId: CHAIN_ID,\r\n\r\n    status: \"ENDED\",\r\n\r\n    hashChain: [],\r\n    stake: 0,\r\n\r\n    roundId: 0,\r\n    gameType: 0,\r\n    num: 0,\r\n    betValue: 0,\r\n    balance: 0,\r\n    oldBalance: 0,\r\n};\r\n\r\nfunction placeBet(state: State, bet: Bet, serverSig: string, userSig: string): State {\r\n    if (state.status === \"ACTIVE\" && state.roundId + 1 === bet.roundId) {\r\n        return {\r\n            ...state,\r\n            status: \"PLACED_BET\",\r\n            roundId: bet.roundId,\r\n            gameType: bet.gameType,\r\n            num: bet.num,\r\n            betValue: bet.value,\r\n            balance: bet.balance,\r\n            serverHash: bet.serverHash,\r\n            userHash: bet.userHash,\r\n            serverSig,\r\n            userSig,\r\n        };\r\n    } else {\r\n        Sentry.captureMessage(\"Unexpected place bet in reducer!\");\r\n        return state;\r\n    }\r\n}\r\n\r\nfunction revealSeed(state: State, serverSeed: string, userSeed: string, balance: number): State {\r\n    if (state.status === \"PLACED_BET\" && state.userHash === keccak(userSeed)) {\r\n        return {\r\n            ...state,\r\n            status: \"ACTIVE\",\r\n            serverHash: serverSeed,\r\n            userHash: userSeed,\r\n            oldBalance: state.balance,\r\n            balance,\r\n        };\r\n    } else {\r\n        Sentry.captureMessage(\"Unexpected reveal seed in reducer!\");\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default function state(state: State = initialState, action: Actions): State {\r\n    switch (action.type) {\r\n        case types.CREATING_GAME:\r\n            return {\r\n                ...initialState /* sic! */,\r\n                status: \"CREATING\",\r\n                hashChain: action.hashChain,\r\n                stake: action.value,\r\n                userHash: action.hashChain[0],\r\n                serverHash: action.serverEndHash,\r\n                createTransactionHash: action.createTransactionHash,\r\n            };\r\n        case types.GAME_CREATED:\r\n            return {...state, status: \"ACTIVE\", gameId: action.gameId};\r\n        case types.ENDED_GAME:\r\n            return {\r\n                ...state,\r\n                status: \"ENDED\",\r\n                reasonEnded: \"REGULAR_ENDED\",\r\n                endTransactionHash: action.endTransactionHash,\r\n                roundId: action.roundId,\r\n                gameType: 0,\r\n                num: 0,\r\n                betValue: 0,\r\n                serverHash: action.serverHash,\r\n                userHash: action.userHash,\r\n                serverSig: action.serverSig,\r\n                userSig: action.userSig,\r\n            };\r\n        case types.PLACE_BET:\r\n            return placeBet(state, action.bet, action.serverSig, action.userSig);\r\n        case types.END_BET:\r\n            return revealSeed(state, action.serverSeed, action.userSeed, action.balance);\r\n        case types.ENDED_WITH_REASON:\r\n            return {...state, status: \"ENDED\", reasonEnded: action.reason};\r\n        case types.USER_INITIATE_CONFLICT_END:\r\n            return {\r\n                ...state,\r\n                status: \"USER_INITIATED_CONFLICT_END\",\r\n                conflictEndTransactionHash: action.transactionHash,\r\n                previousState: state.status,\r\n            };\r\n        case types.USER_ABORT_CONFLICT_END:\r\n        case types.USER_ABORT_FORCE_END:\r\n            return {\r\n                ...state,\r\n                status: state.previousState as Status,\r\n                previousState: undefined,\r\n            };\r\n        case types.USER_CONFLICT_END:\r\n            return {\r\n                ...state,\r\n                status: \"USER_CONFLICT_ENDED\",\r\n                conflictEndTime: action.time,\r\n            };\r\n        case types.USER_INITIATE_FORCE_END:\r\n            return {\r\n                ...state,\r\n                status: \"USER_INITIATED_FORCE_END\",\r\n                forceEndTransactionHash: action.transactionHash,\r\n                previousState: state.status,\r\n            };\r\n        case types.SERVER_CONFLICT_END:\r\n            return {\r\n                ...state,\r\n                status: \"SERVER_CONFLICT_ENDED\",\r\n            };\r\n        case types.RESTORE_STATE:\r\n            return {...action.state};\r\n        case types.CLEAR_STATE:\r\n            return initialState;\r\n        default:\r\n            assertNever(action);\r\n            return state;\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\r\n\r\nimport plinko, {State as PlinkoState} from \"../../../pages/games/plinko/reducer\";\r\nimport info, {State as InfoState} from \"./info/reducer\";\r\nimport gameState, {State as GameState} from \"./state/reducer\";\r\n\r\nexport type State = {\r\n    info: InfoState;\r\n    gameState: GameState;\r\n    plinko: PlinkoState;\r\n};\r\n\r\nconst reducers = combineReducers({\r\n    info,\r\n    gameState,\r\n    plinko,\r\n});\r\n\r\nexport default reducers;\r\n","import * as types from \"../../../app/constants\";\r\nimport {ActionType} from \"../../../util/util\";\r\nimport * as actions from \"./actions\";\r\n\r\nexport type Actions = ActionType<typeof actions>;\r\n\r\nexport type State = {\r\n    notification: {message: string; type: string} | null;\r\n    nightMode: boolean;\r\n};\r\n\r\nconst initialState: State = {\r\n    notification: null,\r\n    nightMode: localStorage.getItem(\"night\") === \"night\",\r\n};\r\n\r\nexport default function reducer(state = initialState, action: Actions): State {\r\n    switch (action.type) {\r\n        case types.CHANGE_NOTIFICATION:\r\n            return {...state, notification: action.notification};\r\n        case types.TOGGLE_THEME:\r\n            localStorage.setItem(\"night\", action.nightMode ? \"night\" : \"day\");\r\n            return {...state, nightMode: action.nightMode};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as types from \"./constants\";\r\n\r\nimport Web3 from \"web3\";\r\nimport {ActionType, assertNever} from \"../../../util/util\";\r\nimport * as actions from \"./actions\";\r\n\r\nexport type Actions = ActionType<typeof actions>;\r\n\r\nexport type State = {\r\n    web3: Web3 | null;\r\n    account: string | null;\r\n    chainId: number | null;\r\n    contract: any | null;\r\n    balance: number | null;\r\n};\r\n\r\nconst initialState = {\r\n    web3: null,\r\n    account: null,\r\n    chainId: null,\r\n    contract: null,\r\n    balance: null,\r\n};\r\n\r\nexport default function reducer(state: State = initialState, action: Actions): State {\r\n    switch (action.type) {\r\n        case types.CHANGE_WEB3:\r\n            return {...state, web3: action.web3};\r\n        case types.CHANGE_ACCOUNT:\r\n            return {...state, account: action.account};\r\n        case types.CHANGE_NETWORK:\r\n            return {...state, chainId: action.chainId};\r\n        case types.CHANGE_CONTRACT:\r\n            return {...state, contract: action.contract};\r\n        case types.CHANGE_BALANCE:\r\n            return {...state, balance: action.balance};\r\n        default:\r\n            assertNever(action);\r\n            return state;\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport {reducer as modal} from \"redux-modal\";\r\n\r\nimport account, {State as AccountState} from \"./platform/modules/account/reducer\";\r\nimport bets, {State as BetsState} from \"./platform/modules/bets/reducer\";\r\nimport chat, {State as ChatState} from \"./platform/modules/chat/reducer\";\r\nimport friend, {State as FriendState} from \"./platform/modules/friends/reducer\";\r\nimport games, {State as GamesState} from \"./platform/modules/games/reducer\";\r\nimport app, {State as AppState} from \"./platform/modules/utilities/reducer\";\r\nimport web3, {State as Web3State} from \"./platform/modules/web3/reducer\";\r\n\r\nexport type State = {\r\n    account: AccountState;\r\n    chat: ChatState;\r\n    friend: FriendState;\r\n    web3: Web3State;\r\n    app: AppState;\r\n    games: GamesState;\r\n    bets: BetsState;\r\n    modal: any;\r\n};\r\n\r\nconst appReducer = combineReducers<State, any>({\r\n    account,\r\n    chat,\r\n    friend,\r\n    web3,\r\n    app,\r\n    games,\r\n    bets,\r\n    modal,\r\n});\r\n\r\nfunction rootReducer(state: State | undefined, action: any): State {\r\n    if (action.type === \"USER_LOGOUT\") {\r\n        (state as any) = undefined;\r\n    }\r\n\r\n    return appReducer(state, action);\r\n}\r\n\r\nexport default rootReducer;\r\n","import {ActionType, assertNever, isLocalStorageAvailable, isSessionStorageAvailable} from \"../../../util/util\";\r\nimport * as actions from \"./actions\";\r\nimport * as types from \"./constants\";\r\nimport {GameSession, Stats} from \"./types\";\r\n\r\nexport type Actions = ActionType<typeof actions>;\r\n\r\nexport type State = {\r\n    firstVisited: boolean;\r\n    jwt: string | null;\r\n    stats: Stats;\r\n    gameSessions: GameSession[];\r\n};\r\n\r\nfunction initialState(): State {\r\n    // tslint:disable-line strict-type-predicates\r\n    const jwt = isSessionStorageAvailable() ? sessionStorage.getItem(\"jwt\") : null;\r\n    const firstVisited = isLocalStorageAvailable() ? localStorage.getItem(\"visited\") : null;\r\n    return {\r\n        firstVisited: firstVisited === null,\r\n        jwt: jwt === null ? null : jwt,\r\n        stats: {profit: 0, wagered: 0, numBets: 0},\r\n        gameSessions: [],\r\n    };\r\n}\r\n\r\nexport default function account(state = initialState(), action: Actions): State {\r\n    switch (action.type) {\r\n        case types.CHANGE_FIRST_VISITED:\r\n            return {...state, firstVisited: action.firstVisited};\r\n        case types.CHANGE_JWT:\r\n            return {...state, jwt: action.jwt};\r\n\r\n        case types.CHANGE_USER_STATS:\r\n            return {...state, stats: action.stats};\r\n        case types.CHANGE_GAME_SESSIONS:\r\n            return {...state, gameSessions: action.gameSessions};\r\n        default:\r\n            assertNever(action);\r\n            return state;\r\n    }\r\n}\r\n","import * as Sentry from \"@sentry/react\";\r\nimport {applyMiddleware, createStore, compose, Middleware} from \"redux\";\r\nimport {createLogger} from \"redux-logger\";\r\nimport createSentryMiddleware from \"redux-sentry-middleware\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {VERSION} from \"./config/config\";\r\nimport rootReducer, {State} from \"./rootReducer\";\r\nimport {truncate} from \"./util/util\";\r\n\r\nconst middlewares: Middleware[] = [thunkMiddleware];\r\n\r\nfunction filterState(state: State) {\r\n    // remove chat, bets, account from state\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const {chat, bets, account, web3, ...newState} = state;\r\n\r\n    // remove hashChain from state\r\n    return {\r\n        ...newState,\r\n        games: {...newState.games, gameState: {...newState.games.gameState, hashChain: undefined}},\r\n    };\r\n}\r\n\r\nfunction filterAction(action: any) {\r\n    // Remove data from action\r\n    const type = action?.type;\r\n    return {type};\r\n}\r\n\r\nif (process.env.SENTRY_LOGGING) {\r\n    Sentry.init({\r\n        dsn: \"https://551f6a44d9a54cfe9c18e976685f8234@o103499.ingest.sentry.io/227657\",\r\n        tunnel: \"/sentry\",\r\n        release: `dicether@${VERSION}`,\r\n        normalizeDepth: 10,\r\n        maxBreadcrumbs: 20,\r\n        beforeBreadcrumb(breadcrumb, hint) {\r\n            if (breadcrumb.category === \"xhr\") {\r\n                const response = hint?.xhr?.response;\r\n                const truncatedResponse = response !== undefined ? truncate(response, 100) : undefined;\r\n                breadcrumb.data = {...breadcrumb.data, response: truncatedResponse};\r\n            }\r\n            return breadcrumb;\r\n        },\r\n    });\r\n}\r\n\r\nconst sentryReduxEnhancer = Sentry.createReduxEnhancer({\r\n    // Optionally pass options listed below\r\n});\r\n\r\nexport const store = createStore(rootReducer, compose(applyMiddleware(...middlewares)));\r\n","import axios from \"axios\";\r\n\r\nimport {deauthenticate} from \"../platform/modules/account/asyncActions\";\r\nimport {store} from \"../store\";\r\n\r\naxios.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n        if (\r\n            typeof error === \"object\" &&\r\n            error !== null &&\r\n            typeof error.response === \"object\" &&\r\n            error.response !== null &&\r\n            error.response.status === 401\r\n        ) {\r\n            store.dispatch(deauthenticate());\r\n            return Promise.reject(new Error(\"Session timeout!\"));\r\n        } else {\r\n            return Promise.reject(error);\r\n        }\r\n    }\r\n);\r\n","import * as React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators, Dispatch} from \"redux\";\r\n\r\nimport {authenticate} from \"../platform/modules/account/asyncActions\";\r\nimport {toggleChat} from \"../platform/modules/chat/actions\";\r\nimport {showRegisterModal} from \"../platform/modules/modals/actions\";\r\nimport {toggleTheme} from \"../platform/modules/utilities/actions\";\r\nimport {State} from \"../rootReducer\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport logoImg from \"../assets/images/logo.png\";\r\n\r\nimport {useAccount, useConnect, useDisconnect, useNetwork, useSwitchNetwork} from \"wagmi\";\r\n\r\nimport {formatUnits, parseEther, parseUnits} from \"viem\";\r\nimport {type WalletClient, useWalletClient} from \"wagmi\";\r\nimport {useWeb3Modal} from \"@web3modal/react\";\r\n\r\nconst mapStateToProps = ({chat, account, app, web3}: State) => {\r\n    const show = chat.show;\r\n    const jwt = account.jwt;\r\n    return {\r\n        showChat: show,\r\n        authenticated: jwt !== null,\r\n        nightMode: app.nightMode,\r\n        connected: web3.account ? true : false,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) =>\r\n    bindActionCreators(\r\n        {\r\n            toggleChat,\r\n            authenticate,\r\n            toggleTheme,\r\n            showRegisterModal,\r\n        },\r\n        dispatch\r\n    );\r\n\r\ntype OtherProps = {\r\n    children: React.ReactNode;\r\n};\r\n\r\ntype ReduxProps = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\r\n\r\ntype Props = ReduxProps & OtherProps;\r\n\r\nconst chainId = 56;\r\n\r\nconst Layout = ({\r\n    children,\r\n    showChat,\r\n    authenticated,\r\n    nightMode,\r\n    connected,\r\n    toggleChat,\r\n    authenticate,\r\n    toggleTheme,\r\n    showRegisterModal,\r\n}: Props) => {\r\n    const className = showChat ? \"chat-open\" : \"\";\r\n\r\n    const {open} = useWeb3Modal();\r\n    const {isConnected} = useAccount();\r\n    const {chain} = useNetwork();\r\n    const {disconnect} = useDisconnect();\r\n    const {connect} = useConnect();\r\n    const {switchNetwork} = useSwitchNetwork();\r\n\r\n    return (\r\n        <div id=\"app\" className={className}>\r\n            <div className=\"main-container fixed inset-0 h-full w-full opacity-10 object-cover z-0\" />\r\n            <div className=\"connect-wallet-container d-flex z-3\">\r\n                <img src={logoImg} alt=\"logo\" className=\"logo\" loading=\"lazy\" />\r\n                <div className=\"d-flex align-items-center  gap-8\">\r\n                    {isConnected ? (\r\n                        chain?.id === Number(chainId) ? (\r\n                            <button className=\"connect-wallet font-weight-bold text-md\" onClick={() => disconnect()}>\r\n                                Disconnect\r\n                            </button>\r\n                        ) : (\r\n                            <button\r\n                                className=\"connect-wallet font-weight-bold text-md\"\r\n                                onClick={() => switchNetwork?.(Number(chainId))}\r\n                            >\r\n                                Switch network\r\n                            </button>\r\n                        )\r\n                    ) : (\r\n                        <button className=\"connect-wallet font-weight-bold text-md \" onClick={() => open()}>\r\n                            Connect Wallet\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            {/* <Header\r\n                showChat={showChat}\r\n                authenticated={authenticated}\r\n                nightMode={nightMode}\r\n                connected={connected}\r\n                toggleChat={() => toggleChat(true)}\r\n                authenticate={authenticate}\r\n                toggleTheme={toggleTheme}\r\n                showRegisterModal={showRegisterModal}\r\n            /> */}\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);\r\n","import {ActionCreateType} from \"../../../../util/util\";\r\nimport * as types from \"./constants\";\r\n\r\nconst ca = <T extends ActionCreateType<typeof types>>(a: T) => a;\r\n\r\nexport const toggleHelp = ca((show: boolean) => {\r\n    return {type: types.TOGGLE_HELP, show};\r\n});\r\n\r\nexport const toggleExpertView = ca((show: boolean) => {\r\n    return {type: types.TOGGLE_EXPERT_VIEW, show};\r\n});\r\n\r\nexport const toggleSound = ca((enabled: boolean) => {\r\n    return {type: types.TOGGLE_SOUND, enabled};\r\n});\r\n","import {Bet} from \"@dicether/state-channel\";\r\n\r\nimport {ActionCreateType} from \"../../../../util/util\";\r\nimport * as types from \"./constants\";\r\nimport {ReasonEnded, State} from \"./reducer\";\r\n\r\nconst ca = <T extends ActionCreateType<typeof types>>(a: T) => a;\r\n\r\nexport const creatingGame = ca(\r\n    (hashChain: string[], serverEndHash: string, value: number, transactionHash?: string) => {\r\n        return {type: types.CREATING_GAME, hashChain, value, serverEndHash, createTransactionHash: transactionHash};\r\n    }\r\n);\r\n\r\nexport const endedWithReason = ca((reason: ReasonEnded) => {\r\n    return {type: types.ENDED_WITH_REASON, reason};\r\n});\r\n\r\nexport const gameCreated = ca((gameId: number) => {\r\n    return {type: types.GAME_CREATED, gameId};\r\n});\r\n\r\nexport const addBet = ca((bet: Bet, serverSig: string, userSig: string) => {\r\n    return {type: types.PLACE_BET, bet, serverSig, userSig};\r\n});\r\n\r\nexport const revealSeed = ca((serverSeed: string, userSeed: string, balance: number) => {\r\n    return {type: types.END_BET, serverSeed, userSeed, balance};\r\n});\r\n\r\nexport const endedGame = ca(\r\n    (\r\n        roundId: number,\r\n        serverHash: string,\r\n        userHash: string,\r\n        serverSig: string,\r\n        userSig: string,\r\n        endTransactionHash: string\r\n    ) => {\r\n        return {type: types.ENDED_GAME, roundId, serverHash, userHash, serverSig, userSig, endTransactionHash};\r\n    }\r\n);\r\n\r\nexport const userInitiateConflictEnd = ca((transactionHash: string) => {\r\n    return {type: types.USER_INITIATE_CONFLICT_END, transactionHash};\r\n});\r\n\r\nexport const userAbortConflictEnd = ca(() => {\r\n    return {type: types.USER_ABORT_CONFLICT_END};\r\n});\r\n\r\nexport const userConflictEnd = ca((time: Date) => {\r\n    return {type: types.USER_CONFLICT_END, time};\r\n});\r\n\r\nexport const userInitiateForceEnd = ca((transactionHash: string) => {\r\n    return {type: types.USER_INITIATE_FORCE_END, transactionHash};\r\n});\r\n\r\nexport const userAbortForceEnd = ca(() => {\r\n    return {type: types.USER_ABORT_FORCE_END};\r\n});\r\n\r\nexport const serverConflictEnd = ca(() => {\r\n    return {type: types.SERVER_CONFLICT_END};\r\n});\r\n\r\nexport const restoreState = ca((state: State) => {\r\n    return {type: types.RESTORE_STATE, state};\r\n});\r\n\r\nexport const clearState = ca(() => {\r\n    return {type: types.CLEAR_STATE};\r\n});\r\n","import {\r\n    Bet,\r\n    calcResultNumber,\r\n    calcUserProfit,\r\n    createHashChain,\r\n    createTypedData,\r\n    fromGweiToWei,\r\n    GameStatus as ContractStatus,\r\n    keccak,\r\n    ReasonEnded as ContractReasonEnded,\r\n    verifySeed,\r\n    verifySignature,\r\n} from \"@dicether/state-channel\";\r\nimport * as Sentry from \"@sentry/browser\";\r\nimport retry from \"async-retry\";\r\nimport axios from \"axios\";\r\nimport Web3 from \"web3\";\r\n\r\nimport {TransactionReceipt} from \"web3-core\";\r\nimport {CHAIN_ID, CONTRACT_ADDRESS, NETWORK_NAME, SERVER_ADDRESS, SIGNATURE_VERSION} from \"../../../../config/config\";\r\nimport {getLogGameCreated, getReasonEnded} from \"../../../../contractUtils\";\r\nimport {Dispatch, GetState, isLocalStorageAvailable} from \"../../../../util/util\";\r\nimport {addNewBet} from \"../../bets/asyncActions\";\r\nimport {Bet as FinalBet} from \"../../bets/types\";\r\nimport {catchError} from \"../../utilities/asyncActions\";\r\nimport {getTransactionReceipt, signTypedData} from \"../../web3/asyncActions\";\r\nimport {\r\n    addBet,\r\n    creatingGame,\r\n    endedGame,\r\n    endedWithReason,\r\n    gameCreated,\r\n    restoreState,\r\n    revealSeed,\r\n    serverConflictEnd,\r\n    userAbortConflictEnd,\r\n    userAbortForceEnd,\r\n    userConflictEnd,\r\n    userInitiateConflictEnd,\r\n    userInitiateForceEnd,\r\n} from \"./actions\";\r\nimport {ReasonEnded, State, State as GameState} from \"./reducer\";\r\n\r\nconst STORAGE_VERSION = 2;\r\n\r\n\r\n//\r\n// Event handling\r\n//\r\nfunction canCreateGame(gameState: GameState) {\r\n    const status = gameState.status;\r\n    return status === \"ENDED\" || (status === \"CREATING\" && !gameState.createTransactionHash);\r\n}\r\n\r\nfunction createGameEvent(hashChain: string[], serverEndHash: string, value: number, transactionHash?: string) {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        if (canCreateGame(getState().games.gameState)) {\r\n            dispatch(creatingGame(hashChain, serverEndHash, value, transactionHash));\r\n        } else {\r\n            Sentry.captureMessage(\"Unexpected createGameEvent\");\r\n        }\r\n    };\r\n}\r\n\r\nfunction canEndGame(gameState: GameState) {\r\n    const status = gameState.status;\r\n    return status !== \"ENDED\";\r\n}\r\n\r\nfunction endGameEvent(reason: ReasonEnded) {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        if (canEndGame(getState().games.gameState)) {\r\n            dispatch(endedWithReason(reason));\r\n        } else {\r\n            Sentry.captureMessage(\"Unexpected endGameEvent\");\r\n        }\r\n    };\r\n}\r\n\r\nfunction canRegularEndGame(gameState: GameState) {\r\n    const status = gameState.status;\r\n    return status === \"ACTIVE\";\r\n}\r\n\r\nexport function canUserEndGame(gameState: GameState) {\r\n    const status = gameState.status;\r\n    const reasonEnded = gameState.reasonEnded;\r\n\r\n    return status == \"ENDED\" && reasonEnded == \"REGULAR_ENDED\";\r\n}\r\n\r\nfunction regularEndGameEvent(\r\n    roundId: number,\r\n    serverHash: string,\r\n    userHash: string,\r\n    serverSig: string,\r\n    userSig: string,\r\n    endTransactionHash: string\r\n) {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        if (canRegularEndGame(getState().games.gameState)) {\r\n            dispatch(endedGame(roundId, serverHash, userHash, serverSig, userSig, endTransactionHash));\r\n        } else {\r\n            Sentry.captureMessage(\"Unexpected regularEndGameEvent\");\r\n        }\r\n    };\r\n}\r\n\r\nfunction canActivateGame(gameState: GameState) {\r\n    const status = gameState.status;\r\n    return status === \"CREATING\";\r\n}\r\n\r\nfunction activateGameEvent(gameId: number, serverHash: string, userHash: string) {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        const gameState = getState().games.gameState;\r\n        if (canActivateGame(gameState)) {\r\n            if (serverHash !== gameState.serverHash) {\r\n                throw Error(`Unexpectd serverHash: ${serverHash}, expected ${gameState.serverHash}`);\r\n            }\r\n            if (userHash !== gameState.userHash) {\r\n                throw Error(`Unexpectd userHash: ${userHash}, expected ${gameState.userHash}`);\r\n            }\r\n\r\n            dispatch(gameCreated(gameId));\r\n        } else {\r\n            Sentry.captureMessage(\"Unexpected activateGameEvent\");\r\n        }\r\n    };\r\n}\r\n\r\nfunction canPlaceBet(gameState: GameState) {\r\n    const status = gameState.status;\r\n    return status === \"ACTIVE\";\r\n}\r\n\r\nfunction placeBetEvent(bet: Bet, serverSig: string, userSig: string) {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        if (canPlaceBet(getState().games.gameState)) {\r\n            dispatch(addBet(bet, serverSig, userSig));\r\n        } else {\r\n            Sentry.captureMessage(\"Unexpected placeBetEvent\");\r\n        }\r\n    };\r\n}\r\n\r\nfunction canRevealSeed(gameState: GameState) {\r\n    const status = gameState.status;\r\n    return status === \"PLACED_BET\";\r\n}\r\n\r\nfunction revealSeedEvent(serverSeed: string, userSeed: string, balance: number) {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        if (canRevealSeed(getState().games.gameState)) {\r\n            dispatch(revealSeed(serverSeed, userSeed, balance));\r\n        } else {\r\n            Sentry.captureMessage(\"Unexpected revealSeedEvent\");\r\n        }\r\n    };\r\n}\r\n\r\nexport function canUserInitiateConflictEnd(gameState: GameState) {\r\n    const status = gameState.status;\r\n    return status === \"ACTIVE\" || status === \"PLACED_BET\" || status === \"SERVER_CONFLICT_ENDED\";\r\n}\r\n\r\nfunction userInitiateConflictEndEvent(transactionHash: string) {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        if (canUserInitiateConflictEnd(getState().games.gameState)) {\r\n            dispatch(userInitiateConflictEnd(transactionHash));\r\n        } else {\r\n            Sentry.captureMessage(\"Unexpected userInitiateConflictEndEvent\");\r\n        }\r\n    };\r\n}\r\n\r\nfunction canUserConflictEnd(gameState: GameState) {\r\n    const status = gameState.status;\r\n    return status === \"USER_INITIATED_CONFLICT_END\";\r\n}\r\n\r\nfunction userConflictEndEvent(time: Date) {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        if (canUserConflictEnd(getState().games.gameState)) {\r\n            dispatch(userConflictEnd(time));\r\n        } else {\r\n            Sentry.captureMessage(\"Unexpected userConflictEndEvent\");\r\n        }\r\n    };\r\n}\r\n\r\nfunction canUserAbortConflictEnd(gameState: GameState) {\r\n    const status = gameState.status;\r\n    return status === \"USER_INITIATED_CONFLICT_END\";\r\n}\r\n\r\nfunction userAbortConflictEndEvent() {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        if (canUserAbortConflictEnd(getState().games.gameState)) {\r\n            dispatch(userAbortConflictEnd());\r\n        } else {\r\n            Sentry.captureMessage(\"Unexpected userAbortConflictEndEvent\");\r\n        }\r\n    };\r\n}\r\n\r\nfunction canUserInitiateForceEnd(gameState: GameState) {\r\n    const status = gameState.status;\r\n    return status === \"USER_CONFLICT_ENDED\";\r\n}\r\n\r\nfunction userInitiateForceEndEvent(transactionHash: string) {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        if (canUserInitiateForceEnd(getState().games.gameState)) {\r\n            dispatch(userInitiateForceEnd(transactionHash));\r\n        } else {\r\n            Sentry.captureMessage(\"Unexpected userInitiateForceEndEvent\");\r\n        }\r\n    };\r\n}\r\n\r\nfunction canUserForceEnd(gameState: GameState) {\r\n    const status = gameState.status;\r\n    return status === \"USER_INITIATED_FORCE_END\";\r\n}\r\n\r\nfunction userForceEndEvent() {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        if (canUserForceEnd(getState().games.gameState)) {\r\n            dispatch(endedWithReason(\"END_FORCED_BY_USER\"));\r\n        } else {\r\n            Sentry.captureMessage(\"Unexpected userForceEndEvent\");\r\n        }\r\n    };\r\n}\r\n\r\nfunction canUserAbortForceEnd(gameState: GameState) {\r\n    const status = gameState.status;\r\n    return status === \"USER_INITIATED_FORCE_END\";\r\n}\r\n\r\nfunction userAbortForceEndEvent() {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        if (canUserAbortForceEnd(getState().games.gameState)) {\r\n            dispatch(userAbortForceEnd());\r\n        } else {\r\n            Sentry.captureMessage(\"Unexpected userAbortForceEndEvent\");\r\n        }\r\n    };\r\n}\r\n\r\nfunction canServerConflictEnd(gameState: GameState) {\r\n    const status = gameState.status;\r\n    return (\r\n        status === \"CREATING\" ||\r\n        status === \"USER_CONFLICT_ENDED\" ||\r\n        status === \"USER_INITIATED_CONFLICT_END\" ||\r\n        status === \"USER_INITIATED_FORCE_END\" ||\r\n        status === \"ACTIVE\" ||\r\n        status === \"PLACED_BET\"\r\n    );\r\n}\r\n\r\nfunction serverConflictEndEvent() {\r\n    return (dispatch: Dispatch, getState: GetState) => {\r\n        if (canServerConflictEnd(getState().games.gameState)) {\r\n            dispatch(serverConflictEnd());\r\n        } else {\r\n            Sentry.captureMessage(\"Unexpected serverConflictEndEvent\");\r\n        }\r\n    };\r\n}\r\n\r\n//\r\n// util functions\r\n//\r\nfunction isTransactionFailed(receipt: TransactionReceipt) {\r\n    return !receipt.status;\r\n}\r\n\r\nexport const validChainId = (chainId: number | null) => {\r\n    return chainId === CHAIN_ID;\r\n};\r\n\r\nconst checkIfEndTransactionFinished = (web3: Web3, transactionHash?: string) => {\r\n    if (!transactionHash) {\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n    return getTransactionReceipt(web3, transactionHash).then((receipt) => receipt !== null);\r\n};\r\n\r\nexport function loadContractStateCreatedGame() {\r\n    return async (dispatch: Dispatch, getState: GetState) => {\r\n        const {web3: web3State, games} = getState();\r\n        const {contract} = web3State;\r\n        const {gameState} = games;\r\n        const {gameId} = gameState;\r\n        const {web3, account} = web3State;\r\n\r\n        if (!web3 || !account) {\r\n            throw new Error(\"You need a web3 enabled browser (Metamask)!\");\r\n        }\r\n\r\n        if (gameId === undefined) {\r\n            throw new Error(\"Invalid game state!\");\r\n        }\r\n\r\n        const result = await contract.methods.gameIdGame(gameId).call();\r\n        const status = Number.parseInt(result.status, 10);\r\n\r\n        if (status === ContractStatus.ENDED && canEndGame(gameState)) {\r\n            const reasonEnded = await getReasonEnded(web3, contract, gameId);\r\n            return dispatch(endGameEvent(ContractReasonEnded[reasonEnded] as ReasonEnded));\r\n        } else if (status === ContractStatus.USER_INITIATED_END && canUserConflictEnd(gameState)) {\r\n            return dispatch(userConflictEndEvent(new Date()));\r\n        } else if (status === ContractStatus.SERVER_INITIATED_END && canServerConflictEnd(gameState)) {\r\n            return dispatch(serverConflictEndEvent());\r\n        } else {\r\n            return;\r\n        }\r\n    };\r\n}\r\n\r\nexport function loadContractGameState() {\r\n    return async (dispatch: Dispatch, getState: GetState) => {\r\n        const {web3: web3State, games} = getState();\r\n        const {contract} = web3State;\r\n        const {gameState} = games;\r\n        const {web3, account, chainId} = web3State;\r\n\r\n        if (!account || !web3 || !contract || chainId === null) {\r\n            throw new Error(\"You need a web3 enabled browser (Metamask)!\");\r\n        }\r\n\r\n        if (!validChainId(chainId)) {\r\n            throw new Error(`Invalid network! You need to use ${NETWORK_NAME}!`);\r\n        }\r\n\r\n        if (gameState.status === \"CREATING\") {\r\n            // special case as we don't know gameId to read contract state!\r\n            if (!gameState.serverHash) {\r\n                throw new Error(\"Invalid game state!\");\r\n            }\r\n\r\n            const logCreated = await getLogGameCreated(web3, contract, gameState.serverHash);\r\n            if (logCreated) {\r\n                const gameId = logCreated.returnValues.gameId;\r\n                const serverHash = logCreated.returnValues.serverEndHash;\r\n                const userHash = logCreated.returnValues.userEndHash;\r\n\r\n                dispatch(activateGameEvent(gameId, serverHash, userHash));\r\n                return dispatch(loadContractStateCreatedGame());\r\n            }\r\n\r\n            if (gameState.createTransactionHash) {\r\n                const receipt = await getTransactionReceipt(web3, gameState.createTransactionHash);\r\n                if (!receipt) {\r\n                    // transaction isn't mined\r\n                    return;\r\n                }\r\n\r\n                if (isTransactionFailed(receipt)) {\r\n                    return dispatch(endGameEvent(\"TRANSACTION_FAILURE\"));\r\n                }\r\n            }\r\n        } else if (gameState.status !== \"ENDED\") {\r\n            return dispatch(loadContractStateCreatedGame());\r\n        }\r\n    };\r\n}\r\n\r\n// TODO: remove???\r\nexport function loadServerGameState() {\r\n    return async (dispatch: Dispatch, getState: GetState) => {\r\n        if (getState().games.gameState.status === \"ENDED\") {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const {data} = await axios.get(\"stateChannel/activeGameState\");\r\n            const status = data.status;\r\n            const gameId = data.gameId;\r\n            const userHash = data.userHash;\r\n\r\n            const gameState = getState().games.gameState;\r\n            if (gameState.status === \"CREATING\" && status === \"ACTIVE\" && gameState.userHash === userHash) {\r\n                dispatch(gameCreated(gameId));\r\n            }\r\n        } catch (error: any) {\r\n            if (!error.response || error.response.status !== 404) {\r\n                catchError(error, dispatch);\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nexport function loadLocalGameState(chainId: number, address: string) {\r\n    return (dispatch: Dispatch) => {\r\n        if (!isLocalStorageAvailable()) {\r\n            Sentry.captureMessage(\"No local storage support!\");\r\n            console.warn(\"No local storage support!\");\r\n        }\r\n\r\n        const storedState = localStorage.getItem(`gameState_${address}_${chainId}`);\r\n        if (storedState !== null) {\r\n            const state = JSON.parse(storedState);\r\n            dispatch(restoreState(state.gameState));\r\n        }\r\n    };\r\n}\r\n\r\nexport function storeGameState(address: string, gameState: State) {\r\n    if (!isLocalStorageAvailable()) {\r\n        Sentry.captureMessage(\"No local storage support!\");\r\n        console.warn(\"No local storage support! Can not store game state!\");\r\n        return;\r\n    }\r\n    localStorage.setItem(\r\n        `gameState_${address}_${gameState.chainId}`,\r\n        JSON.stringify({version: STORAGE_VERSION, gameState})\r\n    );\r\n}\r\n\r\nexport function syncGameState(chainId: number, address: string) {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            dispatch(loadLocalGameState(chainId, address));\r\n            await dispatch(loadContractGameState());\r\n            await dispatch(loadServerGameState());\r\n        } catch (error) {\r\n            catchError(error, dispatch);\r\n        }\r\n    };\r\n}\r\n\r\n// TODO: improve, check contract state???\r\nexport function serverActiveGame(gameId: number, serverHash: string, userHash: string) {\r\n    return (dispatch: Dispatch) => {\r\n        if (status === \"ACTIVE\") {\r\n            // already active => do nothing\r\n            return;\r\n        }\r\n\r\n        dispatch(activateGameEvent(gameId, serverHash, userHash));\r\n    };\r\n}\r\n\r\nexport function createGame(stake: number, userSeed: string) {\r\n    return async (dispatch: Dispatch, getState: GetState) => {\r\n        const web3State = getState().web3;\r\n        const contract = web3State.contract;\r\n        const account = web3State.account;\r\n        const gameState = getState().games.gameState;\r\n        const status = gameState.status;\r\n\r\n        if (!isLocalStorageAvailable()) {\r\n            throw new Error(\r\n                \"You browser doesn't support sessionStorage/localStorage! Without playing is not possible!\"\r\n            );\r\n        }\r\n\r\n        if (!validChainId(web3State.chainId)) {\r\n            throw new Error(`Invalid chain! You need to use ${NETWORK_NAME}!`);\r\n        }\r\n\r\n        if (!account || !contract || !web3State.web3) {\r\n            throw new Error(\"You need a web3 enabled browser (Metamask)!\");\r\n        }\r\n\r\n        if (!canCreateGame(gameState)) {\r\n            throw new Error(`Invalid game status: ${status}! Can not create game!`);\r\n        }\r\n\r\n        const createGame = contract.methods.createGame;\r\n        const hashChain = createHashChain(userSeed);\r\n\r\n        const finished = await checkIfEndTransactionFinished(web3State.web3, gameState.endTransactionHash);\r\n        if (!finished) {\r\n            throw new Error(\"You need to wait until transaction ending game session is mined!\");\r\n        }\r\n\r\n        const response = await axios.post(\"stateChannel/createGame\");\r\n        const data = response.data;\r\n        const serverEndHash = data.serverEndHash;\r\n        const previousGameId = data.previousGameId;\r\n        const createBefore = data.createBefore;\r\n        const signature = data.signature;\r\n\r\n        dispatch(createGameEvent(hashChain, serverEndHash, stake));\r\n\r\n        await new Promise<void>((resolve, reject) => {\r\n            createGame(hashChain[0], previousGameId, createBefore, serverEndHash, signature)\r\n                .send({\r\n                    from: account,\r\n                    value: fromGweiToWei(stake).toString(),\r\n                    gas: 150000,\r\n                })\r\n                .on(\"error\", (error: Error) => {\r\n                    reject(error);\r\n                })\r\n                .on(\"transactionHash\", (transactionHash: string) => {\r\n                    dispatch(createGameEvent(hashChain, serverEndHash, stake, transactionHash));\r\n                })\r\n                .on(\"receipt\", (receipt: TransactionReceipt) => {\r\n                    if (isTransactionFailed(receipt)) {\r\n                        dispatch(endGameEvent(\"TRANSACTION_FAILURE\"));\r\n                        reject(new Error(\"Create game transaction failed!\"));\r\n                    }\r\n                })\r\n                .on(\"confirmation\", (num: number, receipt: TransactionReceipt) => {\r\n                    // wait for 3 confirmations\r\n                    if (num === 3) {\r\n                        const event = receipt.events ? receipt.events.LogGameCreated : null;\r\n                        if (isTransactionFailed(receipt) || !event) {\r\n                            dispatch(endGameEvent(\"TRANSACTION_FAILURE\"));\r\n                            reject(new Error(\"Create game transaction failed!\"));\r\n                        } else {\r\n                            const gameId = (event.returnValues as any).gameId;\r\n                            const serverHash = (event.returnValues as any).serverEndHash;\r\n                            const userHash = (event.returnValues as any).userEndHash;\r\n                            if (getState().games.gameState.status !== \"ACTIVE\") {\r\n                                dispatch(activateGameEvent(gameId, serverHash, userHash));\r\n                            }\r\n                            resolve();\r\n                        }\r\n                    }\r\n                })\r\n                .catch((error: Error) => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    };\r\n}\r\n\r\n\r\nexport function endGame() {\r\n    return async (dispatch: Dispatch, getState: GetState) => {\r\n        const state = getState();\r\n        const gameState = state.games.gameState;\r\n        const account = state.web3.account;\r\n        const web3 = state.web3.web3;\r\n        const chainId = state.web3.chainId;\r\n\r\n        // use previous seeds as new hashes seeds (hash chain)\r\n        const serverHash = gameState.serverHash;\r\n        const userHash = gameState.userHash;\r\n\r\n        const userAddress = account;\r\n        const gameId = gameState.gameId;\r\n        const roundId = gameState.roundId + 1;\r\n        const balance = gameState.balance;\r\n\r\n        if (!getState().account.jwt) {\r\n            throw new Error(\"You need to login before ending game session!\");\r\n        }\r\n\r\n        if (!account || !web3) {\r\n            throw new Error(\"You need a web3 enabled browser (Metamask)!\");\r\n        }\r\n\r\n        if (!validChainId(chainId)) {\r\n            throw new Error(`Invalid network! You need to use ${NETWORK_NAME}!`);\r\n        }\r\n\r\n        if (!canRegularEndGame(gameState)) {\r\n            throw new Error(`Invalid game status ${gameState.status}! Can not end game!`);\r\n        }\r\n\r\n        if (!userHash || !serverHash || !userAddress || !gameId) {\r\n            throw new Error(\"Invalid state!\");\r\n        }\r\n\r\n        const bet = {\r\n            roundId: gameState.roundId + 1,\r\n            gameType: 0,\r\n            num: 0,\r\n            value: 0,\r\n            balance,\r\n            serverHash,\r\n            userHash,\r\n            gameId,\r\n        };\r\n\r\n        const typedData = createTypedData(bet, CHAIN_ID, CONTRACT_ADDRESS, SIGNATURE_VERSION);\r\n        const userSig = await signTypedData(web3, account, typedData);\r\n\r\n        const {data} = await axios.post(\"stateChannel/endGame\", {bet, contractAddress: CONTRACT_ADDRESS, userSig});\r\n        const {serverSig, transactionHash: endTransactionHash} = data;\r\n\r\n        if (!verifySignature(bet, CHAIN_ID, CONTRACT_ADDRESS, serverSig, SERVER_ADDRESS, SIGNATURE_VERSION)) {\r\n            throw new Error(\"Invalid server signature!\");\r\n        }\r\n\r\n        dispatch(regularEndGameEvent(roundId, serverHash, userHash, serverSig, userSig, endTransactionHash));\r\n    };\r\n}\r\n\r\nexport function userEndGame() {\r\n    return async (dispatch: Dispatch, getState: GetState) => {\r\n        const state = getState();\r\n        const gameState = state.games.gameState;\r\n        const account = state.web3.account;\r\n        const web3 = state.web3.web3;\r\n        const contract = state.web3.contract;\r\n        const chainId = state.web3.chainId;\r\n\r\n        if (!web3 || !account || !contract) {\r\n            throw new Error(\"You need a web3 enabled browser (Metamask)!\");\r\n        }\r\n\r\n        if (!validChainId(chainId)) {\r\n            throw new Error(`Invalid network! You need to use ${NETWORK_NAME}!`);\r\n        }\r\n\r\n        if (!canUserEndGame(gameState)) {\r\n            throw new Error(\r\n                `Invalid game status ${gameState.status}, ${gameState.reasonEnded}! Can not resend end transaction!`\r\n            );\r\n        }\r\n\r\n        const roundId = gameState.roundId;\r\n        const balance = gameState.balance;\r\n        const serverHash = gameState.serverHash as string;\r\n        const userHash = gameState.userHash as string;\r\n        const gameId = gameState.gameId as number;\r\n        const serverSig = gameState.serverSig as string;\r\n\r\n        const userEndGame = contract.methods.userEndGame;\r\n        await new Promise((resolve, reject) =>\r\n            userEndGame(\r\n                roundId,\r\n                fromGweiToWei(balance).toString(),\r\n                serverHash,\r\n                userHash,\r\n                gameId,\r\n                CONTRACT_ADDRESS,\r\n                serverSig\r\n            )\r\n                .send({from: account, value: 0, gas: 120000})\r\n                .on(\"transactionHash\", (_transactionHash: string) => {\r\n                    // nothing to do\r\n                })\r\n                .on(\"error\", (error: Error) => {\r\n                    reject(error);\r\n                })\r\n                .then((_receipt: TransactionReceipt) => {\r\n                    // nothing to do\r\n                })\r\n                .catch((error: Error) => {\r\n                    reject(error);\r\n                })\r\n        );\r\n    };\r\n}\r\n\r\nexport function conflictEnd() {\r\n    return async (dispatch: Dispatch, getState: GetState) => {\r\n        const state = getState();\r\n        const gameState = state.games.gameState;\r\n        const account = state.web3.account;\r\n        const web3 = state.web3.web3;\r\n        const contract = state.web3.contract;\r\n        const chainId = state.web3.chainId;\r\n\r\n        const gameId = gameState.gameId;\r\n        const roundId = gameState.roundId;\r\n        const gameType = gameState.gameType;\r\n        const num = gameState.num;\r\n        const oldBalance = gameState.oldBalance;\r\n        const serverSig = gameState.serverSig;\r\n        const contractAddress = contract.options.address;\r\n\r\n        if (!web3 || !account || !contract) {\r\n            throw new Error(\"You need a web3 enabled browser (Metamask)!\");\r\n        }\r\n\r\n        if (!validChainId(chainId)) {\r\n            throw new Error(`Invalid network! You need to use ${NETWORK_NAME}!`);\r\n        }\r\n\r\n        if (!canUserInitiateConflictEnd(gameState)) {\r\n            throw new Error(`Invalid game status ${gameState.status}! Can not conflict end!`);\r\n        }\r\n\r\n        if (!gameState.serverHash || !gameState.userHash || gameId === undefined) {\r\n            throw new Error(\"Invalid state!\");\r\n        }\r\n\r\n        if (roundId === 0) {\r\n            const cancelActiveGame = contract.methods.userCancelActiveGame;\r\n            await new Promise((resolve, reject) =>\r\n                cancelActiveGame(gameId)\r\n                    .send({from: account, value: 0, gas: 120000})\r\n                    .on(\"transactionHash\", (transactionHash: string) => {\r\n                        dispatch(userInitiateConflictEndEvent(transactionHash));\r\n                    })\r\n                    .on(\"error\", (error: Error) => {\r\n                        reject(error);\r\n                    })\r\n                    .then((receipt: TransactionReceipt) => {\r\n                        if (isTransactionFailed(receipt)) {\r\n                            dispatch(userAbortConflictEndEvent());\r\n                        } else {\r\n                            dispatch(userConflictEndEvent(new Date()));\r\n                        }\r\n                    })\r\n                    .catch((error: Error) => {\r\n                        reject(error);\r\n                    })\r\n            );\r\n        } else {\r\n            let serverHash = keccak(gameState.serverHash);\r\n            let userHash = keccak(gameState.userHash);\r\n            const value = fromGweiToWei(gameState.betValue as number).toString();\r\n            let balance = fromGweiToWei(oldBalance).toString();\r\n            let userSeed = gameState.userHash;\r\n\r\n            if (gameState.status === \"PLACED_BET\") {\r\n                serverHash = gameState.serverHash;\r\n                userHash = gameState.userHash;\r\n                balance = fromGweiToWei(gameState.balance).toString();\r\n                userSeed = gameState.hashChain[roundId];\r\n            }\r\n\r\n            const userEndGameConflict = contract.methods.userEndGameConflict;\r\n            await new Promise((resolve, reject) =>\r\n                userEndGameConflict(\r\n                    roundId,\r\n                    gameType,\r\n                    num,\r\n                    value,\r\n                    balance,\r\n                    serverHash,\r\n                    userHash,\r\n                    gameId,\r\n                    serverSig,\r\n                    userSeed\r\n                )\r\n                    .send({from: account, gas: 250000})\r\n                    .on(\"transactionHash\", (transactionHash: string) => {\r\n                        dispatch(userInitiateConflictEndEvent(transactionHash));\r\n                    })\r\n                    .on(\"error\", (error: Error) => {\r\n                        reject(error);\r\n                    })\r\n                    .then((receipt: TransactionReceipt) => {\r\n                        if (isTransactionFailed(receipt)) {\r\n                            dispatch(userAbortConflictEnd());\r\n                        } else {\r\n                            dispatch(userConflictEndEvent(new Date()));\r\n                        }\r\n                    })\r\n                    .catch((error: Error) => {\r\n                        reject(error);\r\n                    })\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nexport function forceEnd() {\r\n    return async (dispatch: Dispatch, getState: GetState) => {\r\n        const state = getState();\r\n        const gameState = state.games.gameState;\r\n        const account = state.web3.account;\r\n        const contract = state.web3.contract;\r\n        const chainId = state.web3.chainId;\r\n\r\n        const gameId = gameState.gameId;\r\n\r\n        if (!account || !contract) {\r\n            throw new Error(\"You need a web3 enabled browser (Metamask)!\");\r\n        }\r\n\r\n        if (!validChainId(chainId)) {\r\n            throw new Error(`Invalid network! You need to use ${NETWORK_NAME}!`);\r\n        }\r\n\r\n        if (!canUserInitiateForceEnd(gameState)) {\r\n            throw new Error(`Invalid game status ${gameState.status}! Can not force end!`);\r\n        }\r\n\r\n        const userForceGameEnd = contract.methods.userForceGameEnd;\r\n        await new Promise((resolve, reject) =>\r\n            userForceGameEnd(gameId)\r\n                .send({from: account, value: 0, gas: 120000})\r\n                .on(\"transactionHash\", (transactionHash: string) => {\r\n                    dispatch(userInitiateForceEndEvent(transactionHash));\r\n                })\r\n                .on(\"error\", (error: Error) => {\r\n                    return Promise.reject(error);\r\n                })\r\n                .then((receipt: TransactionReceipt) => {\r\n                    if (isTransactionFailed(receipt)) {\r\n                        dispatch(userAbortForceEndEvent());\r\n                    } else {\r\n                        dispatch(userForceEndEvent());\r\n                    }\r\n                })\r\n                .catch((error: Error) => {\r\n                    reject(error);\r\n                })\r\n        );\r\n    };\r\n}\r\n\r\nasync function revealSeedRequest(gameId: number, roundId: number, userSeed: string) {\r\n    return retry(\r\n        () => {\r\n            return axios.post(\"stateChannel/revealSeed\", {\r\n                gameId,\r\n                roundId,\r\n                userSeed,\r\n            });\r\n        },\r\n        {retries: 1, minTimeout: 500}\r\n    );\r\n}\r\n\r\nexport function requestSeed() {\r\n    return async (dispatch: Dispatch, getState: GetState) => {\r\n        const gameState = getState().games.gameState;\r\n        const serverHash = gameState.serverHash;\r\n\r\n        if (!getState().account.jwt) {\r\n            throw new Error(\"You need to login before playing!\");\r\n        }\r\n\r\n        if (!canRevealSeed(gameState)) {\r\n            throw new Error(`Invalid game status: ${gameState.status}! Can not reveal seed!`);\r\n        }\r\n\r\n        const betValue = gameState.betValue;\r\n        const userSeed = gameState.hashChain[gameState.roundId];\r\n        const num = gameState.num;\r\n        const gameType = gameState.gameType;\r\n        const balance = gameState.balance;\r\n\r\n        if (betValue === undefined || gameState.gameId === undefined || !serverHash) {\r\n            throw new Error(\"Invalid game state!\");\r\n        }\r\n\r\n        const {data} = await revealSeedRequest(gameState.gameId, gameState.roundId, userSeed);\r\n        const {serverSeed, balance: newServerBalance, bet} = data;\r\n\r\n        if (!verifySeed(serverSeed, serverHash)) {\r\n            throw new Error(\"Invalid server seed!\");\r\n        }\r\n\r\n        const resNum = calcResultNumber(gameType, serverSeed, userSeed, num);\r\n        const userProfit = calcUserProfit(gameType, num, betValue, resNum);\r\n        const newUserBalance = balance + userProfit;\r\n\r\n        if (newServerBalance !== newUserBalance) {\r\n            throw new Error(`Invalid server balance! Expected ${newUserBalance} got ${newServerBalance}`);\r\n        }\r\n\r\n        dispatch(revealSeedEvent(serverSeed, userSeed, newServerBalance));\r\n\r\n        return {\r\n            betNum: bet.num,\r\n            num: resNum,\r\n            won: userProfit > 0,\r\n            userProfit,\r\n            bet,\r\n        };\r\n    };\r\n}\r\n\r\nexport function manualRequestSeed() {\r\n    return async (dispatch: Dispatch) => {\r\n        const result = await dispatch(requestSeed());\r\n        dispatch(addNewBet(result.bet));\r\n        return result;\r\n    };\r\n}\r\n\r\nexport function placeBet(num: number, betValue: number, gameType: number) {\r\n    return async (\r\n        dispatch: Dispatch,\r\n        getState: GetState\r\n    ): Promise<{betNum: number; num: number; won: boolean; userProfit: number; bet: FinalBet}> => {\r\n        const gameState = getState().games.gameState;\r\n        const web3State = getState().web3;\r\n        const {account, web3} = web3State;\r\n\r\n        // use previous seeds as new hashes seeds (hash chain)\r\n        const serverHash = gameState.serverHash;\r\n        const userHash = gameState.userHash;\r\n\r\n        const roundId = gameState.roundId + 1;\r\n        const gameId = gameState.gameId;\r\n        const balance = gameState.balance;\r\n        const stake = gameState.stake;\r\n\r\n        if (!getState().account.jwt) {\r\n            throw new Error(\"You need to login before playing!\");\r\n        }\r\n\r\n        if (!web3 || !account) {\r\n            throw new Error(\"You need a web3 enabled browser (Metamask)!\");\r\n        }\r\n\r\n        if (!validChainId(web3State.chainId)) {\r\n            throw new Error(`Invalid network! You need to use ${NETWORK_NAME}!`);\r\n        }\r\n\r\n        if (!canPlaceBet(gameState)) {\r\n            throw new Error(`Invalid game status: ${gameState.status}! Can not place bet!`);\r\n        }\r\n\r\n        if (!serverHash || !userHash || gameId === undefined) {\r\n            throw new Error(\"Invalid game state!\");\r\n        }\r\n\r\n        if (betValue > stake + balance) {\r\n            throw new Error(\"Invalid bet value: Funds to low!\");\r\n        }\r\n\r\n        const bet = {\r\n            roundId,\r\n            gameType,\r\n            num,\r\n            value: betValue,\r\n            balance,\r\n            serverHash,\r\n            userHash,\r\n            gameId,\r\n        };\r\n\r\n        const typedData = createTypedData(bet, CHAIN_ID, CONTRACT_ADDRESS, SIGNATURE_VERSION);\r\n        const userSig = await signTypedData(web3, account, typedData);\r\n\r\n        const {data: dataPlaceBet} = await axios.post(\"stateChannel/placeBet\", {\r\n            bet,\r\n            contractAddress: CONTRACT_ADDRESS,\r\n            userSig,\r\n        });\r\n        const serverSig = dataPlaceBet.serverSig;\r\n\r\n        if (!verifySignature(bet, CHAIN_ID, CONTRACT_ADDRESS, serverSig, SERVER_ADDRESS, SIGNATURE_VERSION)) {\r\n            throw new Error(\"Error placing bet: Invalid server signature!\");\r\n        }\r\n\r\n        dispatch(placeBetEvent(bet, serverSig, userSig));\r\n\r\n        return dispatch(requestSeed());\r\n    };\r\n}\r\n","import Web3 from \"web3\";\r\n\r\nexport function getLastGameId(\r\n    web3: Web3,\r\n    contract: any,\r\n    serverEndHash: string,\r\n    transactionHash: string\r\n): Promise<number> {\r\n    if (contract == null) {\r\n        return Promise.reject(\"Error invalid web3 state!\");\r\n    }\r\n\r\n    return web3.eth\r\n        .getBlockNumber()\r\n        .then((blockNum) => {\r\n            return contract.getPastEvents(\"LogGameCreated\", {\r\n                filter: {serverEndHash},\r\n                fromBlock: Math.max(blockNum - 30 * 24 * 4 * 60, 0),\r\n                toBlock: \"latest\",\r\n            });\r\n        })\r\n        .then((events) => {\r\n            const len = events.length;\r\n            if (len === 0 || events[len - 1].transactionHash !== transactionHash) {\r\n                return Promise.reject(new Error(\"Could not find event!\"));\r\n            }\r\n\r\n            return events[len - 1].returnValues.gameId;\r\n        });\r\n}\r\n\r\nexport async function getLogGameCreated(web3: Web3, contract: any, serverEndHash: string) {\r\n    const blockNum = await web3.eth.getBlockNumber();\r\n    const events = await contract.getPastEvents(\"LogGameCreated\", {\r\n        filter: {serverEndHash},\r\n        fromBlock: Math.max(blockNum - 30 * 24 * 4 * 60, 0),\r\n        toBlock: \"latest\",\r\n    });\r\n\r\n    if (events.length !== 1) {\r\n        return undefined;\r\n    }\r\n\r\n    return events[0];\r\n}\r\n\r\nexport function getReasonEnded(web3: Web3, contract: any, gameId: number) {\r\n    return web3.eth\r\n        .getBlockNumber()\r\n        .then((blockNum) => {\r\n            return contract.getPastEvents(\"LogGameEnded\", {\r\n                filter: {gameId},\r\n                fromBlock: Math.max(blockNum - 30 * 24 * 4 * 60, 0),\r\n                toBlock: \"latest\",\r\n            });\r\n        })\r\n        .then((events) => {\r\n            const len = events.length;\r\n            if (len !== 1) {\r\n                return Promise.reject(new Error(\"Could not find event!\"));\r\n            }\r\n\r\n            return events[0].returnValues.reasonEnded;\r\n        });\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {};","import ClassNames from \"classnames\";\r\nimport * as React from \"react\";\r\n\r\nimport Style from \"./Section.scss\";\r\n\r\ntype Props = {\r\n    children: React.ReactNode;\r\n    className?: string;\r\n    gray?: boolean;\r\n};\r\n\r\nconst Section = ({gray = false, className = \"\", ...rest}: Props) => {\r\n    const allClassNames = ClassNames(className, {\r\n        [Style.gray]: gray,\r\n    });\r\n\r\n    return <section {...rest} className={allClassNames} />;\r\n};\r\n\r\nexport default Section;\r\n","import * as React from \"react\";\r\nimport {Container as BootstrapContainer} from \"reactstrap\";\r\n\r\ntype Props = {\r\n    children: React.ReactNode;\r\n};\r\n\r\nconst Container = ({...rest}: Props) => <BootstrapContainer {...rest} />;\r\n\r\nexport default Container;\r\n","import {MIN_BET_VALUE, NETWORK_NAME} from \"../../config/config\";\r\nimport {State as GameState} from \"../../platform/modules/games/state/reducer\";\r\n\r\nfunction returnError(errorMessage: string) {\r\n    return {canPlaceBet: false, errorMessage};\r\n}\r\n\r\nexport function canPlaceBet(\r\n    gameType: number,\r\n    num: number,\r\n    betValue: number,\r\n    loggedIn: boolean,\r\n    web3Available: boolean,\r\n    gameState: GameState\r\n) {\r\n    if (!loggedIn) {\r\n        return returnError(\"You need to login before playing!\");\r\n    }\r\n\r\n    if (!web3Available) {\r\n        return returnError(\r\n            \"You need to have a web3 enabled browser (e.g. install Metamask, use Trust Wallet or Coinbase Wallet)\" +\r\n                `for playing and select network: ${NETWORK_NAME}!`\r\n        );\r\n    }\r\n\r\n    if (gameState.status === \"ENDED\") {\r\n        return returnError(\"You need to create a game session before playing!\");\r\n    }\r\n\r\n    if (gameState.status === \"PLACED_BET\") {\r\n        return returnError(\r\n            \"Your seed isn't revealed! Should normally work without your interaction.\" +\r\n                ' To manually reveal it You can click \"request seed\"!'\r\n        );\r\n    }\r\n\r\n    if (gameState.status !== \"ACTIVE\") {\r\n        return returnError(\"Can not place bet! You game session must be active to create bets!\");\r\n    }\r\n\r\n    if (gameState.stake + gameState.balance < MIN_BET_VALUE) {\r\n        return returnError(\"You funds are to low! You need to end the game session and start a new one!\");\r\n    }\r\n\r\n    return {canPlaceBet: true, errorMessage: \"\"};\r\n}\r\n","import * as React from \"react\";\r\nimport {Row as BootstrapRow} from \"reactstrap\";\r\n\r\nimport {BaseType} from \"./BaseType\";\r\n\r\nexport interface Props extends BaseType {\r\n    children: React.ReactNode;\r\n    noGutters?: boolean;\r\n}\r\n\r\nconst Row = ({...rest}: Props) => <BootstrapRow {...rest} />;\r\n\r\nexport default Row;\r\n","import * as React from \"react\";\r\nimport {Col as BootstrapCol} from \"reactstrap\";\r\nimport {ColumnProps} from \"reactstrap/types/lib/Col\";\r\n\r\nimport {BaseType} from \"./BaseType\";\r\n\r\nexport interface Props extends BaseType {\r\n    children: React.ReactNode;\r\n    order?: string | number;\r\n    xs?: ColumnProps;\r\n    sm?: ColumnProps;\r\n    md?: ColumnProps;\r\n    lg?: ColumnProps;\r\n    xl?: ColumnProps;\r\n}\r\n\r\nconst Col = ({...rest}: Props) => <BootstrapCol {...rest} />;\r\n\r\nexport default Col;\r\n","import * as React from \"react\";\r\nimport {FormGroup as BootstrapFormGroup} from \"reactstrap\";\r\n\r\nimport {BaseType} from \"./BaseType\";\r\n\r\nexport interface Props extends BaseType {\r\n    children: React.ReactNode;\r\n    className?: string;\r\n    row?: boolean;\r\n}\r\n\r\nconst FormGroup = ({children, className, ...rest}: Props) => (\r\n    <BootstrapFormGroup className={className} {...rest}>\r\n        {children}\r\n    </BootstrapFormGroup>\r\n);\r\n\r\nexport default FormGroup;\r\n","import * as React from \"react\";\r\nimport {Label as BootstrapLabel} from \"reactstrap\";\r\n\r\nimport {ColumnProps} from \"reactstrap/types/lib/Col\";\r\nimport {BaseType} from \"./BaseType\";\r\n\r\nexport interface Props extends BaseType {\r\n    for?: string;\r\n    children: React.ReactNode;\r\n    xs?: ColumnProps;\r\n    sm?: ColumnProps;\r\n    md?: ColumnProps;\r\n    lg?: ColumnProps;\r\n    xl?: ColumnProps;\r\n}\r\n\r\nconst Label = ({for: htmlFor, ...rest}: Props) => <BootstrapLabel for={htmlFor} {...rest} />;\r\n\r\nexport default Label;\r\n","import * as React from \"react\";\r\nimport {Button as BootstrapButton} from \"reactstrap\";\r\n\r\nimport {BaseType} from \"./BaseType\";\r\n\r\nimport \"./Button.scss\";\r\n\r\nexport interface Props extends BaseType {\r\n    children: React.ReactNode;\r\n    size?: \"lg\" | \"sm\";\r\n    color?: string;\r\n    outline?: boolean;\r\n    active?: boolean;\r\n    disabled?: boolean;\r\n    onClick?: React.MouseEventHandler<any>;\r\n    block?: boolean;\r\n    variant?: string;\r\n    type?: \"button\" | \"reset\" | \"submit\";\r\n    tag?: React.ElementType;\r\n    to?: string;\r\n}\r\n\r\nconst Button = ({\r\n    block,\r\n    children,\r\n    size,\r\n    color = \"secondary\",\r\n    outline = false,\r\n    active,\r\n    disabled = false,\r\n    onClick,\r\n    variant,\r\n    ...rest\r\n}: Props) => (\r\n    <BootstrapButton\r\n        className={variant === \"dropdown\" ? \"dropdown-item\" : \"\"}\r\n        block={block}\r\n        size={size}\r\n        color={color}\r\n        outline={outline}\r\n        active={active}\r\n        disabled={disabled}\r\n        onClick={onClick}\r\n        {...rest}\r\n    >\r\n        {children}\r\n    </BootstrapButton>\r\n);\r\n\r\nexport default Button;\r\n","export function round(x: number, n: number): number {\r\n    return Math.round(x * Math.pow(10, n)) / Math.pow(10, n);\r\n}\r\n\r\nexport function filterFloat(value: string): number {\r\n    if (/^([-+])?([0-9]+(\\.[0-9]+)?|Infinity)$/.test(value)) {\r\n        return Number(value);\r\n    }\r\n\r\n    return NaN;\r\n}\r\n\r\n/**\r\n * @param min min value inclusive\r\n * @param max max value exclusive\r\n */\r\nexport function getRandomInt(min: number, max: number) {\r\n    min = Math.floor(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nexport function shuffle<T>(array: T[]) {\r\n    let counter = array.length;\r\n\r\n    // While there are elements left\r\n    while (counter > 0) {\r\n        // Pick a random index\r\n        const index = Math.floor(Math.random() * counter);\r\n\r\n        // Decrease counter by 1\r\n        counter--;\r\n\r\n        // And swap the last element with it\r\n        const temp = array[counter];\r\n        array[counter] = array[index];\r\n        array[index] = temp;\r\n    }\r\n}\r\n\r\n// see  https://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetParallel\r\nexport function popCnt(num: number) {\r\n    // tslint:disable:no-bitwise\r\n    num = num - ((num >> 1) & 0x55555555); // reuse input as temporary\r\n    num = (num & 0x33333333) + ((num >> 2) & 0x33333333); // temp\r\n    return (((num + (num >> 4)) & 0xf0f0f0f) * 0x1010101) >> 24; // count\r\n    // tslint:enable:no-bitwise\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input-group\":\"eCrZ-__input-group\",\"input\":\"eCrZ-__input\",\"input__suffix\":\"eCrZ-__input__suffix\"};","import ClassNames from \"classnames\";\r\nimport * as React from \"react\";\r\n\r\nimport Style from \"./Input.scss\";\r\nimport {BaseType} from \"./BaseType\";\r\n\r\nexport interface Props extends BaseType {\r\n    value: string;\r\n    suffix?: React.ReactNode;\r\n    disabled?: boolean;\r\n    readOnly?: boolean;\r\n    placeholder?: string;\r\n    showValidation?: boolean;\r\n    isValid?: boolean;\r\n\r\n    validate?(value: string): {valid: boolean; message?: string};\r\n    onValue?(value: string): void;\r\n}\r\n\r\nexport type State = {\r\n    inputValue: string;\r\n    isValid?: boolean;\r\n};\r\n\r\nexport default class Input extends React.Component<Props, State> {\r\n    static defaultProps = {\r\n        disabled: false,\r\n        showValidation: false,\r\n    };\r\n\r\n    isFocus: boolean;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        if (props.isValid !== undefined && props.validate !== undefined) {\r\n            console.error(\"isValid and validate cant't be used at the same time!\");\r\n        }\r\n\r\n        this.isFocus = false;\r\n\r\n        this.state = {\r\n            inputValue: this.props.value,\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Props) {\r\n        const {value} = this.props;\r\n        if (!this.isFocus && value !== nextProps.value) {\r\n            this.setState({inputValue: nextProps.value});\r\n        }\r\n    }\r\n\r\n    onBlur = () => {\r\n        const {value} = this.props;\r\n\r\n        this.isFocus = false;\r\n        this.setState({inputValue: value});\r\n    };\r\n\r\n    onFocus = () => {\r\n        this.isFocus = true;\r\n    };\r\n\r\n    onChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n        const val = (event.target as HTMLInputElement).value;\r\n        const {onValue, validate} = this.props;\r\n\r\n        const valid = validate !== undefined ? validate(val).valid : undefined;\r\n        this.setState({inputValue: val, isValid: valid});\r\n        if (onValue && valid !== false) {\r\n            onValue(val);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {inputValue, isValid: isValidState} = this.state;\r\n        const {suffix, disabled, readOnly, placeholder, showValidation, isValid: isValidProp} = this.props;\r\n\r\n        let isValid;\r\n        if (isValidProp !== undefined) {\r\n            isValid = isValidProp;\r\n        } else if (isValidState !== undefined) {\r\n            isValid = isValidState;\r\n        }\r\n\r\n        const className = ClassNames(\r\n            \"form-control\",\r\n            Style.input__input,\r\n            {\"is-valid\": isValid === true && showValidation},\r\n            {\"is-invalid\": isValid === false && showValidation}\r\n        );\r\n\r\n        const classNameSuffix = ClassNames(\"form-control\", Style.input__suffix);\r\n\r\n        return (\r\n            <div className=\"input\" style={{flex: '1 1 0%'}}>\r\n                <input\r\n                    placeholder={placeholder}\r\n                    className={className}\r\n                    disabled={disabled}\r\n                    readOnly={readOnly}\r\n                    value={inputValue}\r\n                    onBlur={this.onBlur}\r\n                    onChange={this.onChange}\r\n                    onFocus={this.onFocus}\r\n                    \r\n                />\r\n                {suffix && (\r\n                    <div className={classNameSuffix}>\r\n                        <span style={{color: \"transparent\"}}>{inputValue}</span>\r\n                        {suffix}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport {filterFloat} from \"../util/math\";\r\nimport {BaseType} from \"./BaseType\";\r\nimport Input from \"./Input\";\r\n\r\nexport interface Props extends BaseType {\r\n    number: number;\r\n    min: number;\r\n    max: number;\r\n    step?: number;\r\n    precision?: number;\r\n    suffix?: React.ReactNode;\r\n\r\n    onNumber(n: number): void;\r\n}\r\n\r\nexport default class NumericInput extends React.Component<Props> {\r\n    static defaultProps = {\r\n        min: Number.MIN_VALUE,\r\n        max: Number.MAX_VALUE,\r\n    };\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    validate = (value: string) => {\r\n        const {min, max} = this.props;\r\n\r\n        const num = filterFloat(value);\r\n        if (Number.isNaN(num)) {\r\n            return {valid: false, message: \"Not a number!\"};\r\n        } else if (num < min) {\r\n            return {valid: false, message: \"To low!\"};\r\n        } else if (num > max) {\r\n            return {valid: false, message: \"To high!\"};\r\n        } else {\r\n            return {valid: true};\r\n        }\r\n    };\r\n\r\n    onValue = (value: string) => {\r\n        const {step, onNumber} = this.props;\r\n\r\n        let num = filterFloat(value);\r\n        if (step !== undefined) {\r\n            num = Math.round(num / step) * step;\r\n        }\r\n\r\n        onNumber(num);\r\n    };\r\n\r\n    render() {\r\n        const {number, precision, suffix} = this.props; // tslint:disable-line variable-name\r\n        const value = precision !== undefined ? number.toFixed(precision) : number.toString();\r\n\r\n                    \r\n                    return <Input suffix={suffix} value={value} validate={this.validate} onValue={this.onValue}  />;\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {InputGroup} from \"reactstrap\";\r\nimport {BaseType} from \"./BaseType\";\r\nimport Button from \"./Button\";\r\nimport NumericInput from \"./NumericInput\";\r\n\r\nexport interface Props extends BaseType {\r\n    value: number;\r\n    min: number;\r\n    max: number;\r\n    step?: number;\r\n    onChange(value: number): void;\r\n}\r\n\r\nconst ETHER_DIV = 1e9;\r\n\r\nexport default class ValueInput extends React.PureComponent<Props> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    onValueChange = (value: number) => {\r\n        const {onChange, min, max, step} = this.props;\r\n        let newVal = Math.round(value * ETHER_DIV);\r\n        if (newVal < min) {\r\n            newVal = min;\r\n        } else if (newVal > max) {\r\n            newVal = max;\r\n        }\r\n\r\n        if (step !== undefined) {\r\n            newVal = Math.round(newVal / step) * step;\r\n        }\r\n\r\n        onChange(newVal);\r\n    };\r\n\r\n    onValueDouble = (value: number) => {\r\n        const {max, onChange, step} = this.props;\r\n\r\n        let newVal = value * 2;\r\n\r\n        if (step !== undefined) {\r\n            newVal = Math.round(newVal / step) * step;\r\n        }\r\n        if (newVal > max) {\r\n            newVal = max;\r\n        }\r\n        onChange(newVal);\r\n    };\r\n\r\n    onValueHalf = (value: number) => {\r\n        const {min, onChange, step} = this.props;\r\n\r\n        let newVal = value / 2;\r\n        if (step !== undefined) {\r\n            newVal = Math.round(newVal / step) * step;\r\n        }\r\n        if (newVal < min) {\r\n            newVal = min;\r\n        }\r\n        onChange(newVal);\r\n    };\r\n\r\n    render() {\r\n        const {value, min, max} = this.props;\r\n        return (\r\n            <InputGroup className=\"form-container\" >\r\n                <NumericInput\r\n                    className={\"form-control\"}\r\n                    step={min / ETHER_DIV}\r\n                    min={min / ETHER_DIV}\r\n                    max={max / ETHER_DIV}\r\n                    number={value / ETHER_DIV}\r\n                    onNumber={this.onValueChange}\r\n                />\r\n                <Button color=\"primary\" onClick={() => this.onValueHalf(value)}>\r\n                    1/2\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => this.onValueDouble(value)}>\r\n                    2X\r\n                </Button>\r\n            </InputGroup>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {Input} from \"reactstrap\";\r\n\r\nimport {BaseType} from \"./BaseType\";\r\n\r\ninterface Props extends BaseType {\r\n    children: React.ReactNode;\r\n    value: string;\r\n    disabled?: boolean;\r\n    onValue(value: string): void;\r\n}\r\n\r\nclass Select extends React.Component<Props> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    private handleChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n        const {onValue} = this.props;\r\n        const target = event.target as HTMLInputElement;\r\n        const val = target.value;\r\n        target.blur();\r\n        onValue(val);\r\n    };\r\n\r\n    public render() {\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const {value, onValue, ...rest} = this.props;\r\n\r\n        return <Input value={value} type=\"select\" onChange={this.handleChange} {...rest} />;\r\n    }\r\n}\r\n\r\nexport default Select;\r\n","import * as React from \"react\";\r\nimport {Modal as BootstrapModal, ModalBody} from \"reactstrap\";\r\n\r\nimport {BaseType} from \"./BaseType\";\r\n\r\nimport Style from \"./Modal.scss\";\r\n\r\nexport interface Props extends BaseType {\r\n    isOpen: boolean;\r\n    children: React.ReactNode;\r\n    fade?: boolean;\r\n\r\n    toggle?(): void;\r\n}\r\n\r\nconst Modal = ({isOpen, toggle, children, ...rest}: Props) => (\r\n    <BootstrapModal isOpen={isOpen} toggle={toggle} {...rest}>\r\n        <ModalBody>\r\n            <button type=\"button\" className={\"btn-close \" + Style.close} aria-label=\"Close\" onClick={toggle} />\r\n            <div className={Style.modalWrapper}>{children}</div>\r\n        </ModalBody>\r\n    </BootstrapModal>\r\n);\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"-fz0F__modal\",\"modal-dialog\":\"-fz0F__modal-dialog\",\"fade\":\"-fz0F__fade\",\"show\":\"-fz0F__show\",\"modal-static\":\"-fz0F__modal-static\",\"modal-dialog-scrollable\":\"-fz0F__modal-dialog-scrollable\",\"modal-content\":\"-fz0F__modal-content\",\"modal-body\":\"-fz0F__modal-body\",\"modal-dialog-centered\":\"-fz0F__modal-dialog-centered\",\"modal-backdrop\":\"-fz0F__modal-backdrop\",\"modal-header\":\"-fz0F__modal-header\",\"btn-close\":\"-fz0F__btn-close\",\"modal-title\":\"-fz0F__modal-title\",\"modal-footer\":\"-fz0F__modal-footer\",\"modal-sm\":\"-fz0F__modal-sm\",\"modal-lg\":\"-fz0F__modal-lg\",\"modal-xl\":\"-fz0F__modal-xl\",\"modal-fullscreen\":\"-fz0F__modal-fullscreen\",\"modal-fullscreen-sm-down\":\"-fz0F__modal-fullscreen-sm-down\",\"modal-fullscreen-md-down\":\"-fz0F__modal-fullscreen-md-down\",\"modal-fullscreen-lg-down\":\"-fz0F__modal-fullscreen-lg-down\",\"modal-fullscreen-xl-down\":\"-fz0F__modal-fullscreen-xl-down\",\"modal-fullscreen-xxl-down\":\"-fz0F__modal-fullscreen-xxl-down\",\"modalWrapper\":\"-fz0F__modalWrapper\",\"close\":\"-fz0F__close\"};","import ClassNames from \"classnames\";\r\nimport * as React from \"react\";\r\n\r\nimport Style from \"./Ether.scss\";\r\n\r\nexport function formatEth(gwei: number, precision = 9) {\r\n    return (gwei / 1e9).toFixed(precision);\r\n}\r\n\r\nexport type Props = {\r\n    gwei: number;\r\n    showCurrencySymbol?: boolean;\r\n    colored?: boolean;\r\n    precision?: number;\r\n};\r\n\r\nconst Ether = ({gwei, precision = 9, showCurrencySymbol = false, colored = false}: Props) => {\r\n    const ether = formatEth(gwei, precision);\r\n    const classNames = ClassNames(\r\n        Style.ether,\r\n        {[Style.ether_positiv]: colored && gwei > 0},\r\n        {[Style.ether_negativ]: colored && gwei < 0}\r\n    );\r\n\r\n    return <span className={classNames}></span>;\r\n};\r\n\r\nexport default Ether;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"ether\":\"_7Ob2N__ether\",\"ether_positiv\":\"_7Ob2N__ether_positiv\",\"ether_negativ\":\"_7Ob2N__ether_negativ\",\"icon\":\"_7Ob2N__icon\"};","import * as React from \"react\";\r\n\r\nimport {MAX_GAME_SESSION_VALUE, MIN_GAME_SESSION_VALUE} from \"../../../config/config\";\r\nimport {Ether} from \"../../../reusable\";\r\n\r\nimport Style from \"./HowToPlayBase.scss\";\r\n\r\nexport type Props = {\r\n    children: React.ReactNode;\r\n};\r\n\r\nconst HowToPlayBase = ({children}: Props) => (\r\n    <div className={Style.howToPlay}>\r\n        <h3 className=\"text-center\">How to play?</h3>\r\n        <h5>Start game session</h5>\r\n        <p>\r\n            Press <em>Start Game Session</em> and deposit your desired amount of Ether (between{\" \"}\r\n            <Ether gwei={MIN_GAME_SESSION_VALUE} precision={2} /> and{\" \"}\r\n            <Ether gwei={MAX_GAME_SESSION_VALUE} precision={2} /> ETH).\r\n        </p>\r\n        {children}\r\n        <h5>End game session</h5>\r\n        <p>\r\n            Click <em>End Game Session</em> to receive your profit.\r\n        </p>\r\n    </div>\r\n);\r\n\r\nexport default HowToPlayBase;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"howToPlay\":\"su9GN__howToPlay\"};","import * as React from \"react\";\r\nimport {Ether} from \"../../../../reusable/index\";\r\n\r\nimport {MAX_BET_VALUE, MIN_BET_VALUE} from \"../../../../config/config\";\r\nimport HowToPlayBase from \"../../reusable/HowToPlayBase\";\r\n\r\nconst HowToPlay = () => (\r\n    <HowToPlayBase>\r\n        <h5>Plinko</h5>\r\n        <h6>Step1</h6>\r\n        <p>\r\n            Choose your bet amount (between <Ether gwei={MIN_BET_VALUE} precision={5} /> and{\" \"}\r\n            <Ether gwei={MAX_BET_VALUE} precision={5} /> ETH).\r\n        </p>\r\n        <h6>Step2</h6>\r\n        <p>Select the number of rows and the risk.</p>\r\n        <h6>Step 3</h6>\r\n        <p>Drop the ball!</p>\r\n    </HowToPlayBase>\r\n);\r\n\r\nexport default HowToPlay;\r\n","import * as React from \"react\";\r\n\r\ntype Props = {\r\n    contextRef(context: CanvasRenderingContext2D | null): void;\r\n    width: number;\r\n    height: number;\r\n};\r\n\r\nexport default class PureCanvas extends React.Component<Props> {\r\n    shouldComponentUpdate(nextProps: Props) {\r\n        return nextProps.height !== this.props.height || nextProps.width !== this.props.height;\r\n    }\r\n\r\n    render() {\r\n        const {width, height} = this.props;\r\n\r\n        return (\r\n            <canvas\r\n                style={{width: \"100%\"}}\r\n                width={width}\r\n                height={height}\r\n                ref={(node) => (node ? this.props.contextRef(node.getContext(\"2d\")) : null)}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import Vector2 from \"./Vector2\";\r\n\r\nexport abstract class Drawable {\r\n    position: Vector2;\r\n\r\n    protected constructor(position: Vector2) {\r\n        this.position = position;\r\n    }\r\n\r\n    public abstract draw(ctx: CanvasRenderingContext2D): void;\r\n}\r\n","export default class Vector2 {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    public constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    public multiply(t: number): Vector2 {\r\n        return new Vector2(this.x * t, this.y * t);\r\n    }\r\n\r\n    public add(v: Vector2): Vector2 {\r\n        return new Vector2(this.x + v.x, this.y + v.y);\r\n    }\r\n\r\n    public subtract(v: Vector2): Vector2 {\r\n        return new Vector2(this.x - v.x, this.y - v.y);\r\n    }\r\n\r\n    public sqrMagnitude(): number {\r\n        return this.x * this.x + this.y * this.y;\r\n    }\r\n\r\n    public magnitude(): number {\r\n        return Math.sqrt(this.sqrMagnitude());\r\n    }\r\n\r\n    public negate(): Vector2 {\r\n        return new Vector2(-this.x, -this.y);\r\n    }\r\n\r\n    public dot(v: Vector2): number {\r\n        return this.x * v.x + this.y * v.y;\r\n    }\r\n\r\n    public normalize(): Vector2 {\r\n        const magnitude = this.magnitude();\r\n        return new Vector2(this.x / magnitude, this.y / magnitude);\r\n    }\r\n}\r\n","import {Drawable} from \"./Drawable\";\r\nimport Vector2 from \"./Vector2\";\r\n\r\nclass Ball extends Drawable {\r\n    private readonly color: string;\r\n\r\n    public radius: number;\r\n    public v = new Vector2(0, 0.1);\r\n    public oldPos = new Vector2(0, 0);\r\n\r\n    constructor(position: Vector2, radius: number, color: string) {\r\n        super(position);\r\n        this.radius = radius;\r\n        this.color = color;\r\n    }\r\n\r\n    public draw(ctx: CanvasRenderingContext2D): void {\r\n        ctx.beginPath();\r\n        ctx.arc(this.position.x, this.position.y, this.radius, 0, Math.PI * 2);\r\n        ctx.fillStyle = this.color;\r\n        ctx.fill();\r\n    }\r\n}\r\n\r\nexport default Ball;\r\n","// prettier-ignore\r\nexport const startPositions: {[key: number]: {[key: number]: number[]}} = {\r\n    8: {\r\n        0: [\r\n            0.0806,\r\n            0.0861,\r\n            0.0254,\r\n            0.0189,\r\n            0.0736,\r\n            0.1606,\r\n            0.1071,\r\n            0.0884,\r\n            0.0341,\r\n            0.0962,\r\n            0.0806,\r\n            0.0793,\r\n            0.0618,\r\n            0.1046,\r\n            0.0021,\r\n            0.1178,\r\n        ],\r\n        1: [\r\n            0.031,\r\n            0.0381,\r\n            0.162,\r\n            0.0808,\r\n            0.0008,\r\n            0.1434,\r\n            0.0384,\r\n            0.091,\r\n            0.0382,\r\n            0.1079,\r\n            0.1648,\r\n            0.0248,\r\n            0.0139,\r\n            0.0906,\r\n            0.0014,\r\n            0.0169,\r\n        ],\r\n        2: [\r\n            0.0963,\r\n            0.0724,\r\n            0.1784,\r\n            0.0503,\r\n            0.1177,\r\n            0.176,\r\n            0.101,\r\n            0.1528,\r\n            0.1722,\r\n            0.0176,\r\n            0.1429,\r\n            0.0323,\r\n            0.1528,\r\n            0.0067,\r\n            0.0422,\r\n            0.0908,\r\n        ],\r\n        3: [\r\n            0.1147,\r\n            0.0153,\r\n            0.1152,\r\n            0.0363,\r\n            0.1556,\r\n            0.1546,\r\n            0.1899,\r\n            0.0334,\r\n            0.194,\r\n            0.0107,\r\n            0.0291,\r\n            0.1084,\r\n            0.1473,\r\n            0.0664,\r\n            0.0877,\r\n            0.0505,\r\n        ],\r\n        4: [\r\n            0.0552,\r\n            0.1542,\r\n            0.0025,\r\n            0.122,\r\n            0.0174,\r\n            0.0979,\r\n            0.022,\r\n            0.1776,\r\n            0.1531,\r\n            0.021,\r\n            0.0493,\r\n            0.055,\r\n            0.1752,\r\n            0.0119,\r\n            0.1609,\r\n            0.0671,\r\n        ],\r\n        5: [\r\n            0.1792,\r\n            0.0994,\r\n            0.1167,\r\n            0.1477,\r\n            0.1206,\r\n            0.004,\r\n            0.1935,\r\n            0.0383,\r\n            0.0043,\r\n            0.1977,\r\n            0.0826,\r\n            0.1125,\r\n            0.1547,\r\n            0.0462,\r\n            0.0231,\r\n            0.0492,\r\n        ],\r\n        6: [\r\n            0.0196,\r\n            0.1852,\r\n            0.174,\r\n            0.1719,\r\n            0.0243,\r\n            0.0259,\r\n            0.0215,\r\n            0.1716,\r\n            0.0578,\r\n            0.1926,\r\n            0.068,\r\n            0.1729,\r\n            0.1704,\r\n            0.042,\r\n            0.187,\r\n            0.0682,\r\n        ],\r\n        7: [\r\n            0.0111,\r\n            0.1235,\r\n            0.0223,\r\n            0.041,\r\n            0.1731,\r\n            0.1592,\r\n            0.0652,\r\n            0.1949,\r\n            0.0135,\r\n            0.044,\r\n            0.058,\r\n            0.059,\r\n            0.1809,\r\n            0.043,\r\n            0.052,\r\n            0.1875,\r\n        ],\r\n        8: [\r\n            0.0747,\r\n            0.0748,\r\n            0.1136,\r\n            0.0296,\r\n            0.0236,\r\n            0.0703,\r\n            0.0047,\r\n            0.1958,\r\n            0.1,\r\n            0.0691,\r\n            0.1425,\r\n            0.0282,\r\n            0.1914,\r\n            0.1414,\r\n            0.0236,\r\n            0.1793,\r\n        ],\r\n    },\r\n    12: {\r\n        0: [\r\n            0.057,\r\n            0.057,\r\n            0.0789,\r\n            0.0828,\r\n            0.057,\r\n            0.0327,\r\n            0.0738,\r\n            0.057,\r\n            0.0735,\r\n            0.0698,\r\n            0.1144,\r\n            0.0617,\r\n            0.0477,\r\n            0.0827,\r\n            0.057,\r\n            0.1302,\r\n        ],\r\n        1: [\r\n            0.0176,\r\n            0.0176,\r\n            0.0176,\r\n            0.0465,\r\n            0.1163,\r\n            0.1078,\r\n            0.1997,\r\n            0.0042,\r\n            0.0239,\r\n            0.017,\r\n            0.063,\r\n            0.1228,\r\n            0.1557,\r\n            0.0321,\r\n            0.0221,\r\n            0.0832,\r\n        ],\r\n        2: [\r\n            0.1442,\r\n            0.0381,\r\n            0.1473,\r\n            0.0619,\r\n            0.0588,\r\n            0.0644,\r\n            0.0393,\r\n            0.0311,\r\n            0.0575,\r\n            0.1442,\r\n            0.0142,\r\n            0.038,\r\n            0.047,\r\n            0.1055,\r\n            0.1465,\r\n            0.0636,\r\n        ],\r\n        3: [\r\n            0.0552,\r\n            0.0196,\r\n            0.0363,\r\n            0.1422,\r\n            0.1136,\r\n            0.0578,\r\n            0.0008,\r\n            0.0509,\r\n            0.1434,\r\n            0.0384,\r\n            0.1359,\r\n            0.0156,\r\n            0.0364,\r\n            0.0591,\r\n            0.0589,\r\n            0.1447,\r\n        ],\r\n        4: [\r\n            0.0025,\r\n            0.1167,\r\n            0.1206,\r\n            0.0664,\r\n            0.1382,\r\n            0.0047,\r\n            0.1404,\r\n            0.1059,\r\n            0.1051,\r\n            0.052,\r\n            0.1048,\r\n            0.005,\r\n            0.1059,\r\n            0.1406,\r\n            0.1318,\r\n            0.052,\r\n        ],\r\n        5: [\r\n            0.0865,\r\n            0.0747,\r\n            0.0153,\r\n            0.1177,\r\n            0.1477,\r\n            0.0806,\r\n            0.0154,\r\n            0.0493,\r\n            0.0323,\r\n            0.0334,\r\n            0.055,\r\n            0.0012,\r\n            0.0164,\r\n            0.091,\r\n            0.0154,\r\n            0.1421,\r\n        ],\r\n        6: [\r\n            0.031,\r\n            0.1235,\r\n            0.0243,\r\n            0.0383,\r\n            0.0259,\r\n            0.0155,\r\n            0.1084,\r\n            0.0682,\r\n            0.0492,\r\n            0.0135,\r\n            0.1233,\r\n            0.1232,\r\n            0.0659,\r\n            0.043,\r\n            0.0507,\r\n            0.1217,\r\n        ],\r\n        7: [\r\n            0.0724,\r\n            0.1379,\r\n            0.1152,\r\n            0.0748,\r\n            0.1401,\r\n            0.0223,\r\n            0.0808,\r\n            0.0826,\r\n            0.1609,\r\n            0.0671,\r\n            0.0039,\r\n            0.1268,\r\n            0.0092,\r\n            0.0405,\r\n            0.0236,\r\n            0.1445,\r\n        ],\r\n        8: [\r\n            0.1307,\r\n            0.021,\r\n            0.041,\r\n            0.1125,\r\n            0.0462,\r\n            0.0863,\r\n            0.0652,\r\n            0.0374,\r\n            0.1606,\r\n            0.0046,\r\n            0.1461,\r\n            0.1307,\r\n            0.0125,\r\n            0.0275,\r\n            0.1178,\r\n            0.1041,\r\n        ],\r\n        9: [\r\n            0.0503,\r\n            0.1719,\r\n            0.101,\r\n            0.022,\r\n            0.1294,\r\n            0.0043,\r\n            0.0861,\r\n            0.0107,\r\n            0.0505,\r\n            0.0106,\r\n            0.0742,\r\n            0.1994,\r\n            0.0076,\r\n            0.0513,\r\n            0.1363,\r\n            0.1392,\r\n        ],\r\n        10: [\r\n            0.1542,\r\n            0.1977,\r\n            0.1291,\r\n            0.0291,\r\n            0.0231,\r\n            0.1419,\r\n            0.0034,\r\n            0.0703,\r\n            0.0427,\r\n            0.1993,\r\n            0.0231,\r\n            0.0014,\r\n            0.1306,\r\n            0.0305,\r\n            0.0322,\r\n            0.1199,\r\n        ],\r\n        11: [\r\n            0.1343,\r\n            0.1429,\r\n            0.0215,\r\n            0.1343,\r\n            0.1427,\r\n            0.1189,\r\n            0.1771,\r\n            0.0265,\r\n            0.1771,\r\n            0.077,\r\n            0.1295,\r\n            0.0265,\r\n            0.1016,\r\n            0.0787,\r\n            0.0397,\r\n            0.197,\r\n        ],\r\n        12: [\r\n            0.0079,\r\n            0.0711,\r\n            0.1853,\r\n            0.1175,\r\n            0.108,\r\n            0.1192,\r\n            0.1018,\r\n            0.0792,\r\n            0.168,\r\n            0.108,\r\n            0.1247,\r\n            0.168,\r\n            0.0444,\r\n            0.1309,\r\n            0.1192,\r\n            0.0792,\r\n        ],\r\n    },\r\n    16: {\r\n        0: [0.0447, 0.1576, 0.0447, 0.1053, 0.1053, 0.1053, 0.1576, 0.1576, 0.0447],\r\n        1: [\r\n            0.0503,\r\n            0.1712,\r\n            0.0477,\r\n            0.1712,\r\n            0.0489,\r\n            0.0489,\r\n            0.0846,\r\n            0.0207,\r\n            0.0846,\r\n            0.0225,\r\n            0.1066,\r\n            0.0489,\r\n            0.1712,\r\n            0.0477,\r\n            0.1066,\r\n            0.0463,\r\n        ],\r\n        2: [\r\n            0.0529,\r\n            0.0529,\r\n            0.0291,\r\n            0.0614,\r\n            0.1574,\r\n            0.0238,\r\n            0.1703,\r\n            0.1641,\r\n            0.0797,\r\n            0.1054,\r\n            0.0053,\r\n            0.0529,\r\n            0.1574,\r\n            0.0439,\r\n            0.1054,\r\n            0.079,\r\n        ],\r\n        3: [\r\n            0.0865,\r\n            0.041,\r\n            0.0505,\r\n            0.1658,\r\n            0.1102,\r\n            0.0293,\r\n            0.1581,\r\n            0.0322,\r\n            0.1151,\r\n            0.0042,\r\n            0.0467,\r\n            0.0208,\r\n            0.0564,\r\n            0.0526,\r\n            0.0526,\r\n            0.0802,\r\n        ],\r\n        4: [\r\n            0.0223,\r\n            0.0383,\r\n            0.0259,\r\n            0.1606,\r\n            0.0572,\r\n            0.0118,\r\n            0.1135,\r\n            0.0758,\r\n            0.038,\r\n            0.0205,\r\n            0.0217,\r\n            0.016,\r\n            0.1687,\r\n            0.0221,\r\n            0.0035,\r\n            0.0259,\r\n        ],\r\n        5: [\r\n            0.1147,\r\n            0.0025,\r\n            0.1152,\r\n            0.0174,\r\n            0.022,\r\n            0.1731,\r\n            0.0119,\r\n            0.0092,\r\n            0.0492,\r\n            0.1622,\r\n            0.0427,\r\n            0.0588,\r\n            0.0132,\r\n            0.0644,\r\n            0.0906,\r\n            0.0659,\r\n        ],\r\n        6: [\r\n            0.1556,\r\n            0.1294,\r\n            0.0243,\r\n            0.004,\r\n            0.1136,\r\n            0.0215,\r\n            0.055,\r\n            0.1729,\r\n            0.1609,\r\n            0.1084,\r\n            0.0682,\r\n            0.0039,\r\n            0.0405,\r\n            0.0034,\r\n            0.1729,\r\n            0.0623,\r\n        ],\r\n        7: [\r\n            0.0994,\r\n            0.031,\r\n            0.0381,\r\n            0.0868,\r\n            0.0154,\r\n            0.162,\r\n            0.0528,\r\n            0.021,\r\n            0.0826,\r\n            0.0012,\r\n            0.0236,\r\n            0.0135,\r\n            0.0154,\r\n            0.0534,\r\n            0.1603,\r\n            0.0374,\r\n        ],\r\n        8: [\r\n            0.0552,\r\n            0.0806,\r\n            0.0861,\r\n            0.0808,\r\n            0.0155,\r\n            0.0462,\r\n            0.0671,\r\n            0.091,\r\n            0.1259,\r\n            0.1578,\r\n            0.0047,\r\n            0.0465,\r\n            0.1071,\r\n            0.1048,\r\n            0.0301,\r\n            0.0567,\r\n        ],\r\n        9: [\r\n            0.0123,\r\n            0.1167,\r\n            0.0493,\r\n            0.0254,\r\n            0.0296,\r\n            0.068,\r\n            0.057,\r\n            0.1125,\r\n            0.1704,\r\n            0.0565,\r\n            0.0067,\r\n            0.0164,\r\n            0.0384,\r\n            0.0997,\r\n            0.0382,\r\n            0.0549,\r\n        ],\r\n        10: [\r\n            0.0153,\r\n            0.176,\r\n            0.0176,\r\n            0.1716,\r\n            0.0578,\r\n            0.0895,\r\n            0.0106,\r\n            0.1677,\r\n            0.0176,\r\n            0.1707,\r\n            0.1079,\r\n            0.0933,\r\n            0.0176,\r\n            0.1059,\r\n            0.0076,\r\n            0.0925,\r\n        ],\r\n        11: [\r\n            0.1592,\r\n            0.0863,\r\n            0.0908,\r\n            0.1597,\r\n            0.0079,\r\n            0.0911,\r\n            0.0364,\r\n            0.0905,\r\n            0.059,\r\n            0.0311,\r\n            0.1171,\r\n            0.0691,\r\n            0.1597,\r\n            0.1663,\r\n            0.1663,\r\n            0.1023,\r\n        ],\r\n        12: [\r\n            0.0323,\r\n            0.0334,\r\n            0.0231,\r\n            0.0261,\r\n            0.0231,\r\n            0.0014,\r\n            0.0931,\r\n            0.0931,\r\n            0.0684,\r\n            0.077,\r\n            0.1112,\r\n            0.0379,\r\n            0.0646,\r\n            0.0919,\r\n            0.0359,\r\n            0.0323,\r\n        ],\r\n        13: [\r\n            0.0363,\r\n            0.0008,\r\n            0.0509,\r\n            0.0234,\r\n            0.0893,\r\n            0.1654,\r\n            0.0762,\r\n            0.0008,\r\n            0.1041,\r\n            0.1645,\r\n            0.0604,\r\n            0.1039,\r\n            0.0509,\r\n            0.0516,\r\n            0.1646,\r\n            0.0105,\r\n        ],\r\n        14: [\r\n            0.1719,\r\n            0.0107,\r\n            0.0652,\r\n            0.0431,\r\n            0.0021,\r\n            0.053,\r\n            0.0113,\r\n            0.0233,\r\n            0.0445,\r\n            0.1122,\r\n            0.0113,\r\n            0.1122,\r\n            0.0445,\r\n            0.0817,\r\n            0.0652,\r\n            0.1121,\r\n        ],\r\n        15: [\r\n            0.1722,\r\n            0.0043,\r\n            0.0664,\r\n            0.1722,\r\n            0.1722,\r\n            0.0513,\r\n            0.0393,\r\n            0.0761,\r\n            0.1175,\r\n            0.0897,\r\n            0.1733,\r\n            0.0319,\r\n            0.0043,\r\n            0.0513,\r\n            0.0513,\r\n            0.0672,\r\n        ],\r\n        16: [\r\n            0.1628,\r\n            0.0306,\r\n            0.0306,\r\n            0.0306,\r\n            0.1158,\r\n            0.0306,\r\n            0.0245,\r\n            0.0245,\r\n            0.0245,\r\n            0.1628,\r\n            0.0306,\r\n            0.0306,\r\n            0.1628,\r\n            0.1628,\r\n            0.0306,\r\n        ],\r\n    },\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"payoutTable\":\"xTFXS__payoutTable\",\"resultEntry\":\"xTFXS__resultEntry\",\"multiplier\":\"xTFXS__multiplier\",\"colorStrip\":\"xTFXS__colorStrip\",\"resultEntry_show\":\"xTFXS__resultEntry_show\",\"resultAnimation\":\"xTFXS__resultAnimation\",\"colorStrip_show\":\"xTFXS__colorStrip_show\",\"colorStrip-16-0\":\"xTFXS__colorStrip-16-0\",\"colorStrip-16-1\":\"xTFXS__colorStrip-16-1\",\"colorStrip-16-2\":\"xTFXS__colorStrip-16-2\",\"colorStrip-16-3\":\"xTFXS__colorStrip-16-3\",\"colorStrip-16-4\":\"xTFXS__colorStrip-16-4\",\"colorStrip-16-5\":\"xTFXS__colorStrip-16-5\",\"colorStrip-16-6\":\"xTFXS__colorStrip-16-6\",\"colorStrip-16-7\":\"xTFXS__colorStrip-16-7\",\"colorStrip-16-8\":\"xTFXS__colorStrip-16-8\",\"colorStrip-12-0\":\"xTFXS__colorStrip-12-0\",\"colorStrip-12-1\":\"xTFXS__colorStrip-12-1\",\"colorStrip-12-2\":\"xTFXS__colorStrip-12-2\",\"colorStrip-12-3\":\"xTFXS__colorStrip-12-3\",\"colorStrip-12-4\":\"xTFXS__colorStrip-12-4\",\"colorStrip-12-5\":\"xTFXS__colorStrip-12-5\",\"colorStrip-12-6\":\"xTFXS__colorStrip-12-6\",\"colorStrip-8-0\":\"xTFXS__colorStrip-8-0\",\"colorStrip-8-1\":\"xTFXS__colorStrip-8-1\",\"colorStrip-8-2\":\"xTFXS__colorStrip-8-2\",\"colorStrip-8-3\":\"xTFXS__colorStrip-8-3\",\"colorStrip-8-4\":\"xTFXS__colorStrip-8-4\"};","import {PLINKO_PAYOUT_DIVIDER} from \"@dicether/state-channel\";\r\nimport ClassNames from \"classnames\";\r\nimport * as React from \"react\";\r\n\r\nimport Style from \"./PayoutTable.scss\";\r\n\r\nexport type Props = {\r\n    payout: number[];\r\n    showResult: boolean;\r\n    resultColumn: number;\r\n};\r\n\r\ntype PayoutInfoProps = {\r\n    showResult: boolean;\r\n    colorClass: string;\r\n    multiplier: number;\r\n};\r\n\r\nconst PayoutInfo = ({showResult, colorClass, multiplier}: PayoutInfoProps) => {\r\n    const classNamesColorStrip = ClassNames(Style.colorStrip, colorClass, {[Style.colorStrip_show]: showResult});\r\n\r\n    const classNamesEntry = ClassNames(Style.resultEntry, {[Style.resultEntry_show]: showResult});\r\n\r\n    return (\r\n        <div className={classNamesEntry}>\r\n            <div className={classNamesColorStrip} />\r\n            <span className={Style.multiplier}>{`${multiplier}x`}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst PayoutTable = ({payout, showResult, resultColumn}: Props) => {\r\n    const len = payout.length;\r\n    const totalPayout = [...payout.slice(1).reverse(), ...payout];\r\n    const color = [...Array(len).keys()].map((x) => Style[`colorStrip-${(len - 1) * 2}-${x}`]);\r\n    const totalColor = [...color.slice(1).reverse(), ...color];\r\n\r\n    return (\r\n        <div className={Style.payoutTable}>\r\n            {totalPayout.map((value, index) => (\r\n                <PayoutInfo\r\n                    key={`${len}-${index}`}\r\n                    showResult={showResult && resultColumn === index}\r\n                    multiplier={value / PLINKO_PAYOUT_DIVIDER}\r\n                    colorClass={totalColor[index]}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PayoutTable;\r\n","import {Drawable} from \"./Drawable\";\r\nimport Vector2 from \"./Vector2\";\r\n\r\nclass Pin extends Drawable {\r\n    public readonly radius: number;\r\n    private readonly color: string;\r\n\r\n    constructor(position: Vector2, radius: number, color: string) {\r\n        super(position);\r\n        this.radius = radius;\r\n        this.color = color;\r\n    }\r\n\r\n    public draw(ctx: CanvasRenderingContext2D): void {\r\n        ctx.beginPath();\r\n        ctx.arc(this.position.x, this.position.y, this.radius, 0, Math.PI * 2);\r\n        ctx.fillStyle = this.color;\r\n        ctx.fill();\r\n    }\r\n}\r\n\r\nexport default Pin;\r\n","import {Drawable} from \"./Drawable\";\r\nimport Pin from \"./Pin\";\r\nimport Vector2 from \"./Vector2\";\r\n\r\nclass Pins extends Drawable {\r\n    private readonly rows: number;\r\n    private readonly pinRadius = 0.02;\r\n    private readonly pins: Pin[] = [];\r\n\r\n    constructor(rows: number, color: string) {\r\n        super(new Vector2(0, 0));\r\n        this.rows = rows;\r\n\r\n        // Create pins\r\n        const distance = (2 - 2 * this.pinRadius) / (this.rows + 1);\r\n        const rowDistance = Math.sqrt(1.25 * distance * distance);\r\n        const topOffset = 2 - rowDistance * (rows - 1) - this.pinRadius;\r\n        for (let i = 2; i < this.rows + 2; i++) {\r\n            const startPosX = (-distance * i) / 2;\r\n            const posY = (i - 2) * rowDistance - 1 + topOffset;\r\n\r\n            for (let j = 0; j < i + 1; j++) {\r\n                const posX = startPosX + j * distance;\r\n                this.pins.push(new Pin(new Vector2(posX, posY), this.pinRadius, color));\r\n            }\r\n        }\r\n    }\r\n\r\n    public getCollisionPin(\r\n        start: Vector2,\r\n        end: Vector2,\r\n        radius: number\r\n    ): {collisionPoint: Vector2; normal: Vector2} | undefined {\r\n        // TODO: simple not optimized implementation;\r\n        const maxDistanceSqr = (this.pinRadius + radius) * (this.pinRadius + radius);\r\n        const direction = end.subtract(start);\r\n        const magnitudeSqr = direction.sqrMagnitude();\r\n\r\n        for (const pin of this.pins) {\r\n            // calculate nearest point\r\n            const t = Math.max(0, direction.dot(pin.position.subtract(start)) / magnitudeSqr);\r\n            const nearestPoint = start.add(direction.multiply(Math.min(1, t)));\r\n            const projection = start.add(direction.multiply(t));\r\n\r\n            const distanceSqr = nearestPoint.subtract(pin.position).sqrMagnitude();\r\n            // calculate distance on nearest point\r\n            const distanceNearestPointSqr = projection.subtract(pin.position).sqrMagnitude();\r\n\r\n            if (distanceSqr > maxDistanceSqr) {\r\n                continue;\r\n            }\r\n\r\n            // calculate collision point\r\n            const distFromNearestToCollisionPoint = Math.sqrt(maxDistanceSqr - distanceNearestPointSqr);\r\n            const collisionPointDist = start.subtract(projection).magnitude() - distFromNearestToCollisionPoint;\r\n            const collisionPoint = start.add(direction.normalize().multiply(collisionPointDist));\r\n\r\n            // calculate collision normal\r\n            const normal = collisionPoint.subtract(pin.position).normalize();\r\n\r\n            // const rrr = collisionPoint.subtract(pin.position).magnitude();\r\n            // const www = start.subtract(pin.position).magnitude();\r\n            // const vvv = start.subtract(pin.position).magnitude();\r\n            // //if (Math.abs(rrr - radius - this.pinRadius) < 0.000000000001) {\r\n            //     console.error(\"Error collision calc!\", Math.abs(rrr - radius - this.pinRadius), Math.abs(www - radius - this.pinRadius), Math.abs(vvv - radius - this.pinRadius));\r\n            // //}\r\n\r\n            return {collisionPoint, normal};\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    public draw(ctx: CanvasRenderingContext2D): void {\r\n        for (const pin of this.pins) {\r\n            pin.draw(ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Pins;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pinColor\":\"#1A2B38\",\"ballColor\":\"#6f42c1\"};","// extracted by mini-css-extract-plugin\nexport default {\"pinColor\":\"#f7f7fa\",\"ballColor\":\"#693db9\"};","import Rand from \"rand-seed\";\r\nimport * as React from \"react\";\r\nimport ReactResizeDetector from \"react-resize-detector\";\r\n\r\nimport {PLINKO_PAYOUT} from \"@dicether/state-channel\";\r\nimport PureCanvas from \"../../reusable/PureCanvas\";\r\nimport Ball from \"./Ball\";\r\nimport {startPositions} from \"./lookupTables\";\r\nimport PayoutTable from \"./PayoutTable\";\r\nimport Pins from \"./Pins\";\r\nimport Vector2 from \"./Vector2\";\r\n\r\nimport Style from \"./Plinko.scss\";\r\nimport DayColors from \"./PlinkoDayColors.scss\";\r\nimport NightColors from \"./PlinkoNightColors.scss\";\r\n\r\ntype Props = {\r\n    rows: number;\r\n    risk: number;\r\n    nightMode: boolean;\r\n    showResult: boolean;\r\n    resultColumn: number;\r\n};\r\n\r\ntype State = {\r\n    size: number;\r\n};\r\n\r\nclass Plinko extends React.Component<Props, State> {\r\n    private ctx: CanvasRenderingContext2D | null = null;\r\n    private parent = React.createRef<HTMLDivElement>();\r\n    private pins: Pins;\r\n    private activeBalls: Array<{ball: Ball; targetPos: number; finishedCallBack: () => void}> = [];\r\n    private animationActive = false;\r\n    private ballAcceleration = new Vector2(0, 9.81);\r\n    private currentTime = 0;\r\n    private accumulator = 0;\r\n    private ballRadius: number;\r\n    private k = 0.5;\r\n    private stepsPerSecond = 120;\r\n    private speed = 0.75;\r\n\r\n    public constructor(props: Props) {\r\n        super(props);\r\n        const {rows, nightMode} = this.props;\r\n\r\n        this.pins = new Pins(rows, nightMode ? NightColors.pinColor : DayColors.pinColor);\r\n        console.log(\"This-----------\", this.pins, nightMode);\r\n        this.ballRadius = (0.02 * 16) / rows;\r\n\r\n        this.state = {\r\n            size: 500,\r\n        };\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this.renderToCanvas();\r\n    }\r\n\r\n    public componentDidUpdate() {\r\n        const {rows, nightMode} = this.props;\r\n\r\n        this.pins = new Pins(rows, nightMode ? NightColors.pinColor : DayColors.pinColor);\r\n        this.ballRadius = (0.02 * 16) / rows;\r\n        this.renderToCanvas();\r\n    }\r\n\r\n    public addBall = (targetPos: number, resultNum: number): Promise<void> => {\r\n        const startPos = startPositions[this.props.rows][targetPos][resultNum % 16];\r\n        const promise = new Promise<void>((resolve) => {\r\n            this.activeBalls.push({\r\n                ball: new Ball(new Vector2(startPos, -1.1), this.ballRadius, DayColors.ballColor),\r\n                targetPos,\r\n                finishedCallBack: resolve,\r\n            });\r\n        });\r\n        if (!this.animationActive) {\r\n            this.animationActive = true;\r\n            this.accumulator = 0;\r\n            this.currentTime = Date.now();\r\n            requestAnimationFrame(this.animation);\r\n        }\r\n\r\n        return promise;\r\n    };\r\n\r\n    private renderToCanvas = () => {\r\n        const ctx = this.ctx;\r\n\r\n        if (ctx === null) {\r\n            return;\r\n        }\r\n\r\n        const width = ctx.canvas.width;\r\n        const height = ctx.canvas.height;\r\n\r\n        ctx.clearRect(0, 0, width, height);\r\n        ctx.save();\r\n        ctx.scale(width / 2, height / 2);\r\n        ctx.translate(1.0, 1.0);\r\n        this.pins.draw(ctx);\r\n        this.activeBalls.forEach((x) => x.ball.draw(ctx));\r\n        ctx.restore();\r\n    };\r\n\r\n    public simulate = () => {\r\n        const from = -0.1;\r\n        const to = 0.1;\r\n\r\n        const steps = 5000;\r\n        const range = to - from;\r\n\r\n        const results: number[][] = [...Array(this.props.rows + 1)].map((_) => []);\r\n\r\n        const rand = new Rand(\"123456789\");\r\n        for (let i = 0; i < steps; i++) {\r\n            const pos = Math.round(from + Math.round(rand.next() * range * 10000)) / 10000;\r\n            const yPos = this.simulateBall(pos);\r\n\r\n            if (yPos <= -1 || yPos >= 1) {\r\n                continue;\r\n            }\r\n\r\n            const resultPos = Math.floor(((yPos + 1) / 2) * (this.props.rows + 1));\r\n\r\n            const resArray = results[resultPos];\r\n            if (resArray.length >= 16) {\r\n                continue;\r\n            }\r\n\r\n            resArray.push(pos);\r\n        }\r\n\r\n        let resString = \"\";\r\n        for (let pos = 0; pos < results.length; pos++) {\r\n            resString += `${pos}: [${results[pos].join(\", \")}],\\n`;\r\n        }\r\n    };\r\n\r\n    public simulateBall = (startPos: number) => {\r\n        const ball = new Ball(new Vector2(startPos, -1.1), this.ballRadius, \"white\");\r\n\r\n        const maxSteps = 100000;\r\n        let steps = 0;\r\n        while (ball.position.y < 1 && steps++ < maxSteps) {\r\n            this.animateBall(ball, 1 / this.stepsPerSecond);\r\n        }\r\n\r\n        if (steps >= maxSteps) {\r\n            return -1; // invalid\r\n        }\r\n\r\n        return ball.position.x;\r\n    };\r\n\r\n    private animateBall = (ball: Ball, dt: number) => {\r\n        const initialPos = ball.position;\r\n        const initialV = ball.v;\r\n        const newV = initialV.add(this.ballAcceleration.multiply(dt));\r\n        const newPos = initialPos.add(newV.multiply(dt));\r\n        const collisionInfo = this.pins.getCollisionPin(initialPos, newPos, ball.radius);\r\n        if (collisionInfo === undefined) {\r\n            ball.position = newPos;\r\n            ball.v = newV;\r\n            return;\r\n        }\r\n\r\n        const {collisionPoint, normal} = collisionInfo;\r\n\r\n        const aM = this.ballAcceleration.magnitude();\r\n        const vM = initialV.magnitude();\r\n        const sM = collisionPoint.subtract(initialPos).magnitude();\r\n        const collisionTime = (-vM + Math.sqrt(initialV.sqrMagnitude() + 4 * aM * sM)) / (2 * aM);\r\n        const tLeft = dt - collisionTime;\r\n\r\n        const vCollision = ball.v.add(this.ballAcceleration.multiply(collisionTime));\r\n\r\n        // check collision\r\n        // const colP = initialPos.add(vCollision.multiply(collisionTime));\r\n        // const diff = colP.subtract(collisionPoint).magnitude();\r\n        // if (diff > 0.00001) {\r\n        //     console.warn(\"To high diff\", diff);\r\n        // }\r\n\r\n        // calculate new v\r\n        const tmp = normal.multiply(vCollision.dot(normal) * 2);\r\n        const reflectedV = vCollision.subtract(tmp);\r\n        const finalV = reflectedV.multiply(this.k);\r\n\r\n        ball.v = finalV.add(this.ballAcceleration.multiply(tLeft));\r\n        ball.position = collisionPoint.add(ball.v.multiply(tLeft));\r\n    };\r\n\r\n    private animation = () => {\r\n        const newTime = Date.now();\r\n        const frameTime = newTime - this.currentTime;\r\n        this.currentTime = newTime;\r\n        this.accumulator += frameTime * this.speed;\r\n        const dt = 1000 / this.stepsPerSecond;\r\n\r\n        while (this.accumulator >= dt) {\r\n            for (const {ball} of this.activeBalls) {\r\n                this.animateBall(ball, 1 / this.stepsPerSecond);\r\n            }\r\n            this.accumulator -= dt;\r\n        }\r\n\r\n        const finishedBalls = this.activeBalls.filter((ballData) => ballData.ball.position.y >= 1);\r\n        this.activeBalls = this.activeBalls.filter((ballData) => ballData.ball.position.y < 1);\r\n        this.renderToCanvas();\r\n\r\n        if (this.activeBalls.length > 0) {\r\n            requestAnimationFrame(this.animation);\r\n        }\r\n\r\n        for (const ballData of finishedBalls) {\r\n            ballData.finishedCallBack();\r\n        }\r\n\r\n        if (this.activeBalls.length === 0) {\r\n            this.animationActive = false;\r\n        }\r\n    };\r\n\r\n    private saveContext = (ctx: CanvasRenderingContext2D) => {\r\n        this.ctx = ctx;\r\n    };\r\n\r\n    private onResize = (width?: number) => {\r\n        if (width === undefined) return;\r\n\r\n        this.setState({\r\n            size: width,\r\n        });\r\n        this.renderToCanvas();\r\n    };\r\n\r\n    public render() {\r\n        const {size} = this.state;\r\n        const {rows, resultColumn, risk, showResult} = this.props;\r\n        const payout = PLINKO_PAYOUT[2][rows];\r\n\r\n        // TODO: Split in plinko and grid !!!\r\n        return (\r\n            <div className={Style.wrapper}>\r\n                <div className={Style.plinkoGrid}>\r\n                    <div ref={this.parent} className={Style.plinko}>\r\n                        <ReactResizeDetector handleWidth handleHeight onResize={this.onResize} />\r\n                        <PureCanvas width={size} height={size} contextRef={this.saveContext} />\r\n                        <PayoutTable payout={payout} showResult={showResult} resultColumn={resultColumn} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Plinko;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"font\":\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen-Sans, Ubuntu, Cantarell, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\",\"wrapper\":\"G77Df__wrapper\",\"plinkoGrid\":\"G77Df__plinkoGrid\",\"plinko\":\"G77Df__plinko\"};","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"X3oTi__menu\"};","import * as React from \"react\";\r\nimport {WithTranslation, withTranslation} from \"react-i18next\";\r\n\r\nimport {MIN_BET_VALUE} from \"../../../../config/config\";\r\nimport {Button, Col, FormGroup, Label, Modal, Row, Select, ValueInput} from \"../../../../reusable\";\r\nimport {popCnt} from \"../../../../util/math\";\r\nimport HowToPlay from \"./HowToPlay\";\r\nimport Plinko from \"./Plinko\";\r\n\r\nimport Style from \"./Ui.scss\";\r\nimport {Input} from \"reactstrap\";\r\n\r\nexport interface Props extends WithTranslation {\r\n    disableRiskRowUpdate: boolean;\r\n    ref: any;\r\n    rows: number;\r\n    risk: number;\r\n    value: number;\r\n    maxBetValue: number;\r\n    result: {betNum: number; num: number; won: boolean; userProfit: number};\r\n    showResult: boolean;\r\n    showHelp: boolean;\r\n    nightMode: boolean;\r\n    withdrawValue: string;\r\n    onRiskChange(risk: number): void;\r\n    onRowsChange(rows: number): void;\r\n    onToggleHelp(): void;\r\n    onValueChange(value: number): void;\r\n    onPlaceBet(): void;\r\n    onWithdraw(): void;\r\n}\r\n\r\nexport type State = {\r\n    angle: number;\r\n};\r\n\r\nclass Ui extends React.PureComponent<Props, State> {\r\n    public plinko = React.createRef<Plinko>();\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            angle: 0,\r\n        };\r\n    }\r\n\r\n    /* tslint:disable:no-unused-variable */\r\n    private onSimulate = () => {\r\n        this.plinko.current?.simulate();\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            disableRiskRowUpdate,\r\n            value,\r\n            rows,\r\n            risk,\r\n            maxBetValue,\r\n            result,\r\n            showResult,\r\n            showHelp,\r\n            nightMode,\r\n            withdrawValue,\r\n            onToggleHelp,\r\n            onValueChange,\r\n            onRiskChange,\r\n            onRowsChange,\r\n            onPlaceBet,\r\n            onWithdraw,\r\n            t,\r\n        } = this.props;\r\n\r\n        const resultCol = popCnt(result.num); // TODO: Move up to plinko?\r\n\r\n        return (\r\n            <div>\r\n                <Row noGutters>\r\n                    <Col className={Style.plinko} lg={{size: 7, order: 2}} xl={{size: 8, order: 2}}>\r\n                        <Plinko\r\n                            ref={this.plinko}\r\n                            rows={rows}\r\n                            risk={risk}\r\n                            nightMode={true}\r\n                            showResult={showResult}\r\n                            resultColumn={resultCol}\r\n                        />\r\n                    </Col>\r\n                    <Col lg={5} xl={4}>\r\n                        <div className={Style.menu}>\r\n                            <FormGroup className=\"games__form-group\">\r\n                                <Label>{t(\"betAmountEth\")}</Label>\r\n                                <ValueInput\r\n                                    value={value}\r\n                                    min={MIN_BET_VALUE}\r\n                                    step={MIN_BET_VALUE}\r\n                                    max={maxBetValue}\r\n                                    onChange={onValueChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <Row noGutters>\r\n                                <Col xs={{size: 8}} sm={{size: 12}}>\r\n                                    <FormGroup>\r\n                                        <Label>{t(\"risk\")}</Label>\r\n                                        <Select\r\n                                            disabled={disableRiskRowUpdate}\r\n                                            value={risk.toString()}\r\n                                            onValue={(val) => onRiskChange(Number.parseInt(val, 10))}\r\n                                        >\r\n                                            <option value={1}>{t(\"lowRisk\")}</option>\r\n                                            <option value={2}>{t(\"mediumRisk\")}</option>\r\n                                            <option value={3}>{t(\"highRisk\")}</option>\r\n                                        </Select>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col xs={{size: 4}} sm={{size: 12}}>\r\n                                    <FormGroup>\r\n                                        <Label>{t(\"rows\")}</Label>\r\n                                        <Select\r\n                                            disabled={disableRiskRowUpdate}\r\n                                            value={rows.toString()}\r\n                                            onValue={(val) => onRowsChange(Number.parseInt(val, 10))}\r\n                                        >\r\n                                            <option value={8}>8</option>\r\n                                            <option value={12}>12</option>\r\n                                            <option value={16}>16</option>\r\n                                        </Select>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            <Button className=\"betButton mb-3\" block color=\"success\" onClick={onPlaceBet}>\r\n                                {t(\"bet\")}\r\n                            </Button>\r\n                            <Input className=\"mb-3\" value={withdrawValue} disabled />\r\n                            <Button className=\"betButton\" block color=\"warning\" onClick={onWithdraw}>\r\n                                {t(\"Withdraw\")}\r\n                            </Button>\r\n                            {/* <Button className=\"betButton\" block color=\"warning\" onClick={this.onSimulate}>\r\n                               {t(\"simulate\")}\r\n                            </Button> */}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Modal isOpen={showHelp} toggle={onToggleHelp}>\r\n                    <HowToPlay />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation(\"translation\", {withRef: true})(Ui);\r\n","import {GameType, maxBet} from \"@dicether/state-channel\";\r\nimport * as React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {TransactionReceipt} from \"web3-core\";\r\nimport {KELLY_FACTOR, MIN_BANKROLL, MIN_BET_VALUE} from \"../../../config/config\";\r\nimport {addNewBet} from \"../../../platform/modules/bets/asyncActions\";\r\nimport {Bet} from \"../../../platform/modules/bets/types\";\r\nimport {toggleHelp} from \"../../../platform/modules/games/info/actions\";\r\nimport {placeBet, validChainId} from \"../../../platform/modules/games/state/asyncActions\";\r\nimport {showErrorMessage} from \"../../../platform/modules/utilities/actions\";\r\nimport {catchError} from \"../../../platform/modules/utilities/asyncActions\";\r\nimport {State} from \"../../../rootReducer\";\r\nimport {popCnt} from \"../../../util/math\";\r\nimport {sleep} from \"../../../util/time\";\r\nimport sounds from \"../sound\";\r\nimport {canPlaceBet} from \"../utilities\";\r\nimport {changeNum, changeValue} from \"./actions\";\r\nimport Ui from \"./components/Ui\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport {playFromBegin} from \"../../../util/audio\";\r\nimport {Dispatch, GetState} from \"../../../util/util\";\r\nimport {CONTRACT_ADDRESS, TOKEN_ADDRESS} from \"../../../config/config\";\r\nimport Web3 from \"web3\";\r\nimport Style from \"./pinko.scss\";\r\n\r\nconst plinkoAbi = require(\"assets/json/Plinko.json\");\r\nconst tokenAbi = require(\"assets/json/Token.json\");\r\nconst chainId = 56;\r\n\r\nconst mapStateToProps = ({games, account, web3, app}: State) => {\r\n    const {info, gameState, plinko} = games;\r\n    const web3Available = web3.account && web3.contract && web3.web3 && validChainId(web3.chainId);\r\n    return {\r\n        web3Available: web3Available === true,\r\n        info,\r\n        gameState,\r\n        loggedIn: account.jwt !== null,\r\n        plinko,\r\n        nightMode: app.nightMode,\r\n        web3,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    placeBet: (num: number, value: number, gameType: number) => dispatch(placeBet(num, value, gameType)),\r\n    addNewBet: (bet: Bet) => dispatch(addNewBet(bet)),\r\n    changeNum: (num: number) => dispatch(changeNum(num)),\r\n    changeValue: (value: number) => dispatch(changeValue(value)),\r\n    toggleHelp: (t: boolean) => dispatch(toggleHelp(t)),\r\n    showErrorMessage: (message: string) => dispatch(showErrorMessage(message)),\r\n    catchError: (error: unknown) => catchError(error, dispatch),\r\n});\r\n\r\nexport type Props = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\r\n\r\nexport type PlinkoState = {\r\n    showResult: boolean;\r\n    ballsFalling: number;\r\n    result: {betNum: number; num: number; won: boolean; userProfit: number};\r\n    reward: string;\r\n    loading: boolean;\r\n};\r\n\r\nclass Plinko extends React.PureComponent<Props, PlinkoState> {\r\n    private loadedSounds = false;\r\n    public ui = React.createRef<any>();\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            showResult: false,\r\n            ballsFalling: 0,\r\n            result: {betNum: 0, num: 0, won: false, userProfit: 0},\r\n            reward: \"0\",\r\n            loading: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            try {\r\n                this.calcReward().then((rewardAmount: any) => {\r\n                    if (rewardAmount) {\r\n                        this.setState({\r\n                            reward: Web3.utils.fromWei(rewardAmount, \"ether\"),\r\n                        });\r\n                    }\r\n                });\r\n            } catch (error) {}\r\n        }, 1000); // Set up the interval\r\n    }\r\n\r\n    private calcReward = async () => {\r\n        const account = this.props.web3.account;\r\n        const web3 = this.props.web3.web3;\r\n        if (web3 && this.props.web3.chainId != chainId) return;\r\n        if (!(web3 && account)) return;\r\n        const contract = new web3.eth.Contract(plinkoAbi, CONTRACT_ADDRESS);\r\n        console.log(\"stress contract\", contract);\r\n        const tx = contract.methods.playerWinnings(account).call({from: account});\r\n        return tx;\r\n    };\r\n\r\n    private playPlinko = async () => {\r\n        const account = this.props.web3.account;\r\n        const web3 = this.props.web3.web3;\r\n        if (!web3) return;\r\n        const contract = new web3.eth.Contract(plinkoAbi, CONTRACT_ADDRESS);\r\n        console.log(\"stress contract\", contract);\r\n        const pliko_play = contract.methods.pliko_play;\r\n        console.log(this.props.plinko.num - 200);\r\n        let tx = pliko_play(this.props.plinko.num - 200).send({\r\n            from: account,\r\n            value: this.props.plinko.value * 10 ** 9,\r\n            gas: 120000,\r\n        });\r\n        return tx;\r\n    };\r\n\r\n    private playTokenPlinko = async () => {\r\n        const account = this.props.web3.account;\r\n        const web3 = this.props.web3.web3;\r\n        if (!web3) return;\r\n        const tokenContract = new web3.eth.Contract(tokenAbi, TOKEN_ADDRESS);\r\n        const allowance = tokenContract.methods.allowance;\r\n        const allowanceValue = await allowance(account, CONTRACT_ADDRESS).call({from: account});\r\n        let amount = this.props.plinko.value.toString();\r\n        if (parseFloat(amount) > parseFloat(Web3.utils.fromWei(allowanceValue, \"ether\"))) {\r\n            const approve = tokenContract.methods.approve;\r\n\r\n            await approve(CONTRACT_ADDRESS, Web3.utils.toWei(amount, \"gwei\")).send({\r\n                from: account,\r\n            });\r\n        }\r\n        console.log(\"allowance value======>\", parseFloat(Web3.utils.fromWei(allowanceValue, \"ether\")));\r\n\r\n        const contract = new web3.eth.Contract(plinkoAbi, CONTRACT_ADDRESS);\r\n        const pliko_token_play = contract.methods.pliko_token_play;\r\n        let tx = pliko_token_play(this.props.plinko.num - 200, Web3.utils.toWei(amount, \"gwei\")).send({\r\n            from: account,\r\n        });\r\n        return tx;\r\n    };\r\n\r\n    private onWithdraw = async () => {\r\n        const account = this.props.web3.account;\r\n        const web3 = this.props.web3.web3;\r\n        if (!web3) return;\r\n        const contract = new web3.eth.Contract(plinkoAbi, CONTRACT_ADDRESS);\r\n        const withdrawUserWinnings = contract.methods.withdrawUserWinnings;\r\n        await withdrawUserWinnings().send({\r\n            from: account,\r\n        });\r\n    };\r\n\r\n    private getResult = async () => {\r\n        const account = this.props.web3.account;\r\n        const web3 = this.props.web3.web3;\r\n        if (!web3) return;\r\n        const contract = new web3.eth.Contract(plinkoAbi, CONTRACT_ADDRESS);\r\n        console.log(\"--------contract--------------\", contract);\r\n        const get_result = contract.methods.getResult;\r\n        let tx = get_result().call({from: account, gas: 120000});\r\n        return tx;\r\n    };\r\n\r\n    private onToggleHelp = () => {\r\n        const {toggleHelp, info} = this.props;\r\n        toggleHelp(!info.showHelp);\r\n    };\r\n\r\n    private onPlaceBet = async () => {\r\n        this.setState({loading: true});\r\n        const {plinko, addNewBet, placeBet, catchError, showErrorMessage, web3Available, gameState, loggedIn} =\r\n            this.props;\r\n        console.log(\"number -------------------\", plinko.num);\r\n        const safeBetValue = Math.round(plinko.value);\r\n        const num = plinko.num;\r\n        const gameType = GameType.PLINKO;\r\n\r\n        const canBet = canPlaceBet(gameType, num, safeBetValue, loggedIn, web3Available, gameState);\r\n        if (!canBet) return;\r\n        // --------------------------- update here -----------------------------\r\n        console.log(\"start game\");\r\n        try {\r\n            await this.playTokenPlinko();\r\n            console.log(\"-------------------------------------finished------------------------\");\r\n            let numBitsSet = await this.getResult();\r\n            console.log(\"result-------\", numBitsSet);\r\n            let resultNum: number = 1500;\r\n            // const numBitsSet = popCnt(resultNum);\r\n            console.log(\"numBitsSet------\", numBitsSet);\r\n            this.setState({\r\n                ballsFalling: this.state.ballsFalling + 1,\r\n            });\r\n            await this.ui.current?.plinko.current?.addBall(numBitsSet, resultNum);\r\n            console.log(\"finshed--------------------------\");\r\n        } catch (error) {\r\n            catchError(error);\r\n            this.setState({loading: false});\r\n        }\r\n        this.setState({loading: false});\r\n    };\r\n\r\n    private onValueChange = (value: number) => {\r\n        const {changeValue} = this.props;\r\n        changeValue(value);\r\n    };\r\n\r\n    private onRiskChange = (risk: number) => {\r\n        // TODO: as action\r\n        const {plinko, changeNum} = this.props;\r\n        const {num} = plinko;\r\n        const newNum = risk * 100 + (num % 100);\r\n        changeNum(newNum);\r\n    };\r\n\r\n    private onRowsChange = (segments: number) => {\r\n        // TODO: as action\r\n        const {plinko, changeNum} = this.props;\r\n        const {num} = plinko;\r\n        const newNum = Math.floor(num / 100) * 100 + segments;\r\n        changeNum(newNum);\r\n    };\r\n\r\n    private playSound = (audio: HTMLAudioElement) => {\r\n        const {info} = this.props;\r\n        const {sound} = info;\r\n\r\n        if (sound) {\r\n            playFromBegin(audio);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {nightMode, info, gameState, plinko} = this.props;\r\n        const {num, value} = plinko;\r\n        const {ballsFalling, showResult, result, loading} = this.state;\r\n\r\n        let maxBetValue = maxBet(GameType.PLINKO, num, MIN_BANKROLL, KELLY_FACTOR);\r\n        maxBetValue = 1e18;\r\n\r\n        if (gameState.status !== \"ENDED\") {\r\n            const max = Math.min(gameState.stake + gameState.balance, maxBetValue);\r\n            maxBetValue = Math.max(max, MIN_BET_VALUE);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Helmet>\r\n                    <title>Plinko</title>\r\n                    <meta name=\"description\" content=\"Ethereum state channel based Plinko game\" />\r\n                </Helmet>\r\n                <Ui\r\n                    disableRiskRowUpdate={ballsFalling > 0}\r\n                    ref={this.ui}\r\n                    nightMode={nightMode}\r\n                    risk={Math.floor(num / 100)}\r\n                    rows={num % 100}\r\n                    value={value}\r\n                    withdrawValue={this.state.reward}\r\n                    maxBetValue={maxBetValue}\r\n                    onValueChange={this.onValueChange}\r\n                    onPlaceBet={this.onPlaceBet}\r\n                    onRiskChange={this.onRiskChange}\r\n                    onRowsChange={this.onRowsChange}\r\n                    showResult={showResult}\r\n                    result={{...result}}\r\n                    showHelp={info.showHelp}\r\n                    onToggleHelp={this.onToggleHelp}\r\n                    onWithdraw={this.onWithdraw}\r\n                />\r\n                {loading ? (\r\n                    <div\r\n                        className=\"position-fixed top-0 start-0 w-100 vh-100 d-flex flex-column align-items-center justify-content-center\"\r\n                        style={{backgroundColor: \"#111111\", zIndex: 10000, opacity: 0.5}}\r\n                    >\r\n                        <div className=\"lds-roller\">\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                        </div>\r\n                        <p className=\"text-white fs-5\">Loading...</p>\r\n                    </div>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Plinko);\r\n","export function playFromBegin(audio: HTMLAudioElement) {\r\n    audio.currentTime = 0;\r\n    audio.play();\r\n}\r\n","import {ActionCreateType} from \"../../../util/util\";\r\nimport * as types from \"./constants\";\r\n\r\nconst ca = <T extends ActionCreateType<typeof types>>(a: T) => a;\r\n\r\nexport const changeValue = ca((value: number) => {\r\n    return {type: types.CHANGE_VALUE, value};\r\n});\r\n\r\nexport const changeNum = ca((num: number) => {\r\n    return {type: types.CHANGE_NUM, num};\r\n});\r\n","import * as React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Route, RouteProps, Routes} from \"react-router-dom\";\r\n\r\nimport {bindActionCreators} from \"redux\";\r\nimport Stats from \"../../platform/components/bet/Stats\";\r\nimport {toggleExpertView, toggleHelp, toggleSound} from \"../../platform/modules/games/info/actions\";\r\nimport {\r\n    conflictEnd,\r\n    createGame,\r\n    endGame,\r\n    forceEnd,\r\n    manualRequestSeed,\r\n} from \"../../platform/modules/games/state/asyncActions\";\r\nimport {catchError} from \"../../platform/modules/utilities/asyncActions\";\r\nimport {Container, Section} from \"../../reusable\";\r\nimport {State} from \"../../rootReducer\";\r\nimport {Dispatch} from \"../../util/util\";\r\nimport Plinko from \"./plinko/Plinko\";\r\n\r\nimport Style from \"./Game.scss\";\r\n\r\nconst mapStateToProps = ({games, web3, account}: State) => {\r\n    const {gameState, info} = games;\r\n\r\n    return {\r\n        gameState,\r\n        info,\r\n        web3State: web3,\r\n        loggedIn: account.jwt !== null,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    ...bindActionCreators(\r\n        {\r\n            toggleExpertView,\r\n            toggleHelp,\r\n            toggleSound,\r\n        },\r\n        dispatch\r\n    ),\r\n    createGame: (value: number, seed: string) => dispatch(createGame(value, seed)),\r\n    endGame: () => dispatch(endGame()),\r\n    manualRequestSeed: () => dispatch(manualRequestSeed()),\r\n    conflictEnd: () => dispatch(conflictEnd()),\r\n    forceEnd: () => dispatch(forceEnd()),\r\n    catchError: (error: Error) => catchError(error, dispatch),\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps> & RouteProps;\r\n\r\nclass Game extends React.Component<Props> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    createGame = (value: number, seed: string) => {\r\n        const {createGame, catchError} = this.props;\r\n        createGame(value, seed).catch(catchError);\r\n    };\r\n\r\n    endGame = () => {\r\n        const {endGame, catchError} = this.props;\r\n        endGame().catch(catchError);\r\n    };\r\n\r\n    requestSeed = () => {\r\n        const {manualRequestSeed, catchError} = this.props;\r\n        manualRequestSeed().catch(catchError);\r\n    };\r\n\r\n    conflictEnd = () => {\r\n        const {conflictEnd, catchError} = this.props;\r\n        conflictEnd().catch(catchError);\r\n    };\r\n\r\n    forceEnd = () => {\r\n        const {forceEnd, catchError} = this.props;\r\n        forceEnd().catch(catchError);\r\n    };\r\n\r\n    onToggleHelp = (show: boolean) => {\r\n        const {toggleHelp} = this.props;\r\n        toggleHelp(show);\r\n    };\r\n\r\n    onToggleExpertView = (show: boolean) => {\r\n        const {toggleExpertView} = this.props;\r\n        toggleExpertView(show);\r\n    };\r\n\r\n    onToggleSound = (enabled: boolean) => {\r\n        const {toggleSound} = this.props;\r\n        toggleSound(enabled);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Section gray className=\"section\">\r\n                    <Container>\r\n                        <div className={Style.wrapper}>\r\n                            <div className={Style.gameWrapper}>\r\n                                <Plinko />\r\n                            </div>\r\n                        </div>\r\n                    </Container>\r\n                </Section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"OzPLQ__wrapper\",\"gameWrapper\":\"OzPLQ__gameWrapper\",\"section\":\"OzPLQ__section\"};","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"_1XO5a__icon\",\"icon-primary\":\"_1XO5a__icon-primary\",\"icon-secondary\":\"_1XO5a__icon-secondary\",\"icon-success\":\"_1XO5a__icon-success\",\"icon-info\":\"_1XO5a__icon-info\",\"icon-warning\":\"_1XO5a__icon-warning\",\"icon-danger\":\"_1XO5a__icon-danger\",\"icon-light\":\"_1XO5a__icon-light\",\"icon-dark\":\"_1XO5a__icon-dark\",\"icon-blue\":\"_1XO5a__icon-blue\",\"icon-indigo\":\"_1XO5a__icon-indigo\",\"icon-purple\":\"_1XO5a__icon-purple\",\"icon-pink\":\"_1XO5a__icon-pink\",\"icon-red\":\"_1XO5a__icon-red\",\"icon-orange\":\"_1XO5a__icon-orange\",\"icon-yellow\":\"_1XO5a__icon-yellow\",\"icon-green\":\"_1XO5a__icon-green\",\"icon-teal\":\"_1XO5a__icon-teal\",\"icon-cyan\":\"_1XO5a__icon-cyan\",\"icon-white\":\"_1XO5a__icon-white\",\"icon-gray\":\"_1XO5a__icon-gray\",\"icon-gray-dark\":\"_1XO5a__icon-gray-dark\"};","import {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {far} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {fas} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon, Props as FontAwesomeProps} from \"@fortawesome/react-fontawesome\";\r\nimport ClassNames from \"classnames\";\r\nimport * as React from \"react\";\r\n\r\nimport Style from \"./FontAwesomeIcon.scss\";\r\n\r\nlibrary.add(fas, far);\r\n\r\nexport interface Props extends FontAwesomeProps {\r\n    color?: string;\r\n}\r\n\r\nconst Icon = ({color, className, ...rest}: Props) => {\r\n    const classNames = ClassNames(className, {\r\n        [Style[`icon-${color}`]]: color !== undefined,\r\n    });\r\n\r\n    return <FontAwesomeIcon {...rest} className={classNames} />;\r\n};\r\n\r\nexport default Icon;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"info\":\"gMMkm__info\"};","import axios, {AxiosError} from \"axios\";\r\nimport * as React from \"react\";\r\n\r\nimport Icon from \"./FontAwesomeIcon\";\r\n\r\nimport Style from \"./DataLoader.scss\";\r\n\r\nconst Loading = () => (\r\n    <div className={Style.info}>\r\n        <Icon icon=\"spinner\" spin size=\"lg\" />\r\n    </div>\r\n);\r\n\r\nconst Failure = () => (\r\n    <div className={Style.info}>\r\n        <span className=\"text-danger\">Error loading Data</span>\r\n    </div>\r\n);\r\n\r\nconst NotFound = () => (\r\n    <div className={Style.info}>\r\n        <span className=\"text-danger\">404 Not Found</span>\r\n    </div>\r\n);\r\n\r\ntype Props<T> = {\r\n    url: string;\r\n    success(data: T): React.ReactNode;\r\n    loading?(): React.ReactNode;\r\n    notFound?(): React.ReactNode;\r\n    failure?(): React.ReactNode;\r\n};\r\n\r\ntype State<T> = {\r\n    data: T | undefined;\r\n    error: AxiosError | undefined;\r\n};\r\n\r\nclass DataLoader<T = any> extends React.Component<Props<T>, State<T>> {\r\n    static defaultProps = {\r\n        loading: () => <Loading />,\r\n        notFound: () => <NotFound />,\r\n        failure: () => <Failure />,\r\n    };\r\n\r\n    constructor(props: Props<T>) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: undefined,\r\n            error: undefined,\r\n        };\r\n    }\r\n\r\n    private fetchData(url: string) {\r\n        axios\r\n            .get<T>(url)\r\n            .then((response) => {\r\n                const data = response.data;\r\n                this.setState({data});\r\n            })\r\n            .catch((error) => {\r\n                this.setState({error});\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {url} = this.props;\r\n\r\n        this.fetchData(url);\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Props<T>) {\r\n        const {url} = this.props;\r\n\r\n        if (url !== prevProps.url) {\r\n            this.fetchData(url);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {failure, notFound, loading, success} = this.props;\r\n        const {data, error} = this.state;\r\n\r\n        if (data) {\r\n            return success(data);\r\n        } else if (error) {\r\n            if (error.response && error.response.status === 404) {\r\n                return notFound ? notFound() : null;\r\n            } else {\r\n                return failure ? failure() : null;\r\n            }\r\n        } else {\r\n            return loading ? loading() : null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default DataLoader;\r\n","import {IconProp} from \"@fortawesome/fontawesome-svg-core\";\r\nimport ClassName from \"classnames\";\r\nimport * as React from \"react\";\r\nimport FontAwesomeIcon, {Props as FontAwesomeIconProps} from \"./FontAwesomeIcon\";\r\n\r\nimport \"./IconButton.scss\";\r\n\r\nexport interface Props extends FontAwesomeIconProps {\r\n    id?: any;\r\n    icon: IconProp;\r\n    onClick: React.MouseEventHandler<any>;\r\n    color?: string;\r\n    buttonClassName?: string;\r\n}\r\n\r\nconst IconButton = ({onClick, color = \"primary\", id, buttonClassName, ...rest}: Props) => {\r\n    const buttonClassNames = ClassName(\"iconButton\", \"iconButton_\" + color, buttonClassName);\r\n\r\n    return (\r\n        <button className={buttonClassNames} onClick={onClick} id={id}>\r\n            <FontAwesomeIcon {...rest} />\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default IconButton;\r\n","import {Placement} from \"popper.js\";\r\nimport * as React from \"react\";\r\nimport {Popover as BootstrapPopover, PopoverBody} from \"reactstrap\";\r\n\r\nimport {BaseType} from \"./BaseType\";\r\n\r\nimport \"./Popover.scss\";\r\n\r\nexport interface Props extends BaseType {\r\n    id?: string;\r\n    children: React.ReactNode;\r\n    isOpen: boolean;\r\n    placement?: Placement;\r\n    container?: any;\r\n    target: string | HTMLElement;\r\n\r\n    toggle(): void;\r\n}\r\n\r\nconst Popover = ({id, isOpen, toggle, children, container, placement = \"auto\", target, ...rest}: Props) => (\r\n    <BootstrapPopover\r\n        id={id}\r\n        isOpen={isOpen}\r\n        toggle={toggle}\r\n        container={container}\r\n        placement={placement}\r\n        style={{zIndex: 20000, maxWidth: \"100rem\"}}\r\n        {...rest}\r\n        target={target}\r\n    >\r\n        <PopoverBody>{children}</PopoverBody>\r\n    </BootstrapPopover>\r\n);\r\n\r\nexport default Popover;\r\n","import * as React from \"react\";\r\nimport ReactCopyToClipboard from \"react-copy-to-clipboard\";\r\n\r\nimport IconButton from \"./IconButton\";\r\nimport Popover from \"./Popover\";\r\n\r\ntype Props = {\r\n    content: string;\r\n    message?: string;\r\n};\r\n\r\ntype State = {\r\n    showMessage: boolean;\r\n};\r\n\r\nclass CopyToClipboard extends React.Component<Props, State> {\r\n    ref: React.RefObject<HTMLElement>;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showMessage: false,\r\n        };\r\n\r\n        this.ref = React.createRef();\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({showMessage: false});\r\n    };\r\n\r\n    onCopy = () => {\r\n        this.setState({showMessage: true});\r\n        setTimeout(() => {\r\n            this.setState({showMessage: false});\r\n        }, 1000);\r\n    };\r\n\r\n    render() {\r\n        const {showMessage} = this.state;\r\n        const {content, message} = this.props;\r\n\r\n        return (\r\n            <span>\r\n                <ReactCopyToClipboard text={content} onCopy={this.onCopy}>\r\n                    <span ref={this.ref}>\r\n                        {\" \"}\r\n                        <IconButton\r\n                            icon=\"share\"\r\n                            onClick={() => {\r\n                                return;\r\n                            }}\r\n                        />{\" \"}\r\n                    </span>\r\n                </ReactCopyToClipboard>\r\n                {this.ref.current && (\r\n                    <Popover isOpen={showMessage} target={this.ref.current} toggle={this.toggle}>\r\n                        <span className=\"text-success\">{message ? message : \"Copied!\"}</span>\r\n                    </Popover>\r\n                )}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CopyToClipboard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"overview\":\"p1-Fz__overview\",\"stats\":\"p1-Fz__stats\",\"statEntry\":\"p1-Fz__statEntry\",\"entryHeader\":\"p1-Fz__entryHeader\",\"userName\":\"p1-Fz__userName\"};","import dayjs from \"dayjs\";\r\nimport * as React from \"react\";\r\n\r\nimport {CopyToClipBoard, Ether} from \"../../../../reusable/index\";\r\nimport {User} from \"../../../modules/account/types\";\r\nimport {Bet} from \"../../../modules/bets/types\";\r\n\r\nimport Style from \"./Overview.scss\";\r\n\r\ntype Props = {\r\n    bet: Bet;\r\n    showUserModal(user: User): void;\r\n};\r\n\r\nconst Overview = ({bet, showUserModal}: Props) => (\r\n    <div className={Style.overview}>\r\n        <h3>\r\n            Bet:\r\n            {bet.id} <CopyToClipBoard message={\"Copied! Paste in Chat!\"} content={`Bet:${bet.id}`} />\r\n        </h3>\r\n        <span>{dayjs(bet.timestamp).format(\"lll\")}</span>\r\n        <span>\r\n            Placed by{\" \"}\r\n            <button className={Style.userName} onClick={() => showUserModal(bet.user)}>\r\n                {bet.user.username}\r\n            </button>\r\n        </span>\r\n        <div className={Style.stats}>\r\n            <div className={Style.statEntry}>\r\n                <span className={Style.entryHeader}>Wagered</span>\r\n                <Ether gwei={bet.value} />\r\n            </div>\r\n            <div className={Style.statEntry}>\r\n                <span className={Style.entryHeader}>Profit</span>\r\n                <Ether colored gwei={bet.profit} />\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Overview;\r\n","import * as React from \"react\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport Plinko from \"../../../../pages/games/plinko/components/Plinko\";\r\nimport {State} from \"../../../../rootReducer\";\r\nimport {popCnt} from \"../../../../util/math\";\r\n\r\ntype OtherProps = {\r\n    betNum: number;\r\n    resultNum: number;\r\n};\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    const {app} = state;\r\n\r\n    return {\r\n        nightMode: app.nightMode,\r\n    };\r\n};\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & OtherProps;\r\n\r\nconst PlinkoBetInfo = ({nightMode, betNum, resultNum}: Props) => {\r\n    const risk = Math.floor(betNum / 100);\r\n    const rows = betNum % 100;\r\n    const resultColumn = popCnt(resultNum);\r\n\r\n    return <Plinko nightMode={nightMode} rows={rows} risk={risk} showResult={true} resultColumn={resultColumn} />;\r\n};\r\n\r\nexport default connect(mapStateToProps)(PlinkoBetInfo);\r\n","import ClassNames from \"classnames\";\r\nimport * as React from \"react\";\r\nimport {BaseType} from \"./BaseType\";\r\n\r\nexport interface Props extends BaseType {\r\n    id: string;\r\n    value: string | number;\r\n    className?: string;\r\n}\r\n\r\nconst Output = ({id, value, className}: Props) => {\r\n    const classNames = ClassNames(\"form-control\", className);\r\n\r\n    return (\r\n        <span id={id} className={classNames}>\r\n            {value}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default Output;\r\n","import * as React from \"react\";\r\nimport {Collapse as BootstrapCollapse} from \"reactstrap\";\r\n\r\nimport {BaseType} from \"./BaseType\";\r\n\r\nexport interface Props extends BaseType {\r\n    isOpen: boolean;\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst Collapse = ({...rest}: Props) => <BootstrapCollapse {...rest} />;\r\n\r\nexport default Collapse;\r\n","import * as React from \"react\";\r\n\r\nimport Icon from \"../../../../reusable/FontAwesomeIcon\";\r\nimport {Button} from \"../../../../reusable/index\";\r\n\r\nimport Style from \"./CollapsButton.scss\";\r\n\r\ntype Props = {\r\n    isOpen: boolean;\r\n    onClick: React.MouseEventHandler<any>;\r\n    name: string;\r\n};\r\n\r\nconst CollapseButton = ({name, isOpen, onClick}: Props) => {\r\n    return (\r\n        <Button color=\"link\" block onClick={onClick}>\r\n            <span>{name}</span>\r\n            <Icon className={Style.arrow} icon=\"angle-down\" size=\"lg\" rotation={isOpen ? 180 : undefined} />\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default CollapseButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"arrow\":\"Vefip__arrow\"};","// extracted by mini-css-extract-plugin\nexport default {\"verification\":\"_0meBl__verification\",\"entry\":\"_0meBl__entry\"};","import {calcResultNumber, verifySeed, verifySignature} from \"@dicether/state-channel\";\r\nimport * as React from \"react\";\r\n\r\nimport {CHAIN_ID, SERVER_ADDRESS} from \"../../../../config/config\";\r\nimport {FontAwesomeIcon} from \"../../../../reusable/index\";\r\nimport {Bet} from \"../../../modules/bets/types\";\r\n\r\nimport Style from \"./Verification.scss\";\r\n\r\ntype Props = {\r\n    bet: Bet;\r\n};\r\n\r\nconst OLD_SERVER_ADDRESS = \"0xCef260a5Fed7A896BBE07b933B3A5c17aEC094D8\";\r\n\r\nconst Valid = ({valid}: {valid: boolean}) =>\r\n    valid ? <FontAwesomeIcon icon=\"check\" color=\"success\" /> : <FontAwesomeIcon icon=\"times\" color=\"danger\" />;\r\n\r\nclass Verification extends React.PureComponent<Props> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {bet} = this.props;\r\n\r\n        const validUserSeed = verifySeed(bet.userSeed, bet.userHash);\r\n        const validServerSeed = verifySeed(bet.serverSeed, bet.serverHash);\r\n\r\n        const signatureVersion = 2;\r\n        const serverAddress = bet.gameId < 5246 ? OLD_SERVER_ADDRESS : SERVER_ADDRESS;\r\n\r\n        const validUserSig = verifySignature(\r\n            bet,\r\n            CHAIN_ID,\r\n            bet.contractAddress,\r\n            bet.userSig,\r\n            bet.user.address,\r\n            signatureVersion\r\n        );\r\n        const validServerSig = verifySignature(\r\n            bet,\r\n            CHAIN_ID,\r\n            bet.contractAddress,\r\n            bet.serverSig,\r\n            serverAddress,\r\n            signatureVersion\r\n        );\r\n\r\n        const resultNum = calcResultNumber(bet.gameType, bet.serverSeed, bet.userSeed, bet.num);\r\n\r\n        const validResultNum = bet.resultNum === resultNum;\r\n\r\n        return (\r\n            <div className={Style.verification}>\r\n                <div className={Style.entry}>\r\n                    <code>keccak(userSeed) == userHash</code>\r\n                    <Valid valid={validUserSeed} />\r\n                </div>\r\n                <div className={Style.entry}>\r\n                    <code>keccak(serverSeed) == serverHash</code>\r\n                    <Valid valid={validServerSeed} />\r\n                </div>\r\n                <div className={Style.entry}>\r\n                    <code>userSignature is valid</code>\r\n                    <Valid valid={validUserSig} />\r\n                </div>\r\n                <div className={Style.entry}>\r\n                    <code>serverSignature is valid</code>\r\n                    <Valid valid={validServerSig} />\r\n                </div>\r\n                <div className={Style.entry}>\r\n                    <code>ResultNum is valid</code>\r\n                    <Valid valid={validResultNum} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Verification;\r\n","import * as React from \"react\";\r\n\r\nimport {FROM_BASE_TO_WEI} from \"../../../../config/config\";\r\nimport {Collapse, Output} from \"../../../../reusable/index\";\r\nimport {Bet} from \"../../../modules/bets/types\";\r\nimport CollapseButton from \"./CollapseButton\";\r\nimport Verification from \"./Verification\";\r\n\r\nimport Style from \"./VerificationInfo.scss\";\r\n\r\ntype Props = {\r\n    bet: Bet;\r\n};\r\n\r\ntype State = {\r\n    isOpen: boolean;\r\n};\r\n\r\nconst Entry = ({id, name, data}: {id: string; name: string; data: string | number}) => (\r\n    <div className={Style.verificationInfo__entry}>\r\n        <span>{name}</span>\r\n        <Output className={Style.verificationInfo__value} id={id} value={data} />\r\n    </div>\r\n);\r\n\r\nclass VerificationInfo extends React.PureComponent<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n        };\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({isOpen: !this.state.isOpen});\r\n    };\r\n\r\n    render() {\r\n        const {isOpen} = this.state;\r\n        const {bet} = this.props;\r\n        const value = bet.value * FROM_BASE_TO_WEI;\r\n        const balance = bet.balance * FROM_BASE_TO_WEI;\r\n\r\n        return (\r\n            <div className={Style.verificationInfo}>\r\n                <CollapseButton name=\"Show Verification Data\" isOpen={isOpen} onClick={this.toggle} />\r\n                <Collapse isOpen={isOpen} style={{width: \"100%\"}}>\r\n                    <div>\r\n                        <Entry id={`bet_${bet.id}_roundId`} name=\"Round Id\" data={bet.roundId} />\r\n                        <Entry id={`bet_${bet.id}_gameType`} name=\"Game Type\" data={bet.gameType} />\r\n                        <Entry id={`bet_${bet.id}_num`} name=\"Number\" data={bet.num} />\r\n                        <Entry id={`bet_${bet.id}_betValue`} name=\"Bet Value (Wei)\" data={value} />\r\n                        <Entry id={`bet_${bet.id}_balance`} name=\"Balance (Wei)\" data={balance} />\r\n                        <Entry id={`bet_${bet.id}_serverHash`} name=\"Server Hash\" data={bet.serverHash} />\r\n                        <Entry id={`bet_${bet.id}_userHash`} name=\"User Hash\" data={bet.userHash} />\r\n                        <Entry id={`bet_${bet.id}_serverSeed`} name=\"Server seed\" data={bet.serverSeed} />\r\n                        <Entry id={`bet_${bet.id}_userSeed`} name=\"User seed\" data={bet.userSeed} />\r\n                        <Entry id={`bet_${bet.id}_gameId`} name=\"Game Id\" data={bet.gameId} />\r\n                        <Entry\r\n                            id={`bet_${bet.id}_contractAddress`}\r\n                            name=\"Contract Address\"\r\n                            data={bet.contractAddress}\r\n                        />\r\n                        <Entry id={`bet_${bet.id}_serverSig`} name=\"Server Signature\" data={bet.serverSig} />\r\n                        <Entry id={`bet_${bet.id}_userSig`} name=\"User Signature\" data={bet.userSig} />\r\n                    </div>\r\n                    <Verification bet={bet} />\r\n                </Collapse>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VerificationInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"verificationInfo\":\"_1xKo4__verificationInfo\",\"verificationInfo__entry\":\"_1xKo4__verificationInfo__entry\",\"verificationInfo__value\":\"_1xKo4__verificationInfo__value\"};","import {GameType} from \"@dicether/state-channel\";\r\nimport * as React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nimport {Dispatch} from \"../../../../util/util\";\r\nimport {Bet} from \"../../../modules/bets/types\";\r\nimport {showUserModal} from \"../../../modules/modals/actions\";\r\nimport Overview from \"./Overview\";\r\nimport PlinkoBetInfo from \"./PlinkoBetInfo\";\r\nimport VerificationInfo from \"./VerificationInfo\";\r\n\r\ntype GameSpecificInfoProps = {\r\n    gameType: number;\r\n    betNum: number;\r\n    resultNum: number;\r\n};\r\n\r\nconst GameSpecificInfo = ({gameType, betNum, resultNum}: GameSpecificInfoProps) => {\r\n    switch (gameType) {\r\n        case GameType.DICE_LOWER:\r\n        case GameType.PLINKO:\r\n            return <PlinkoBetInfo betNum={betNum} resultNum={resultNum} />;\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) =>\r\n    bindActionCreators(\r\n        {\r\n            showUserModal,\r\n        },\r\n        dispatch\r\n    );\r\n\r\ntype OtherProps = {\r\n    bet: Bet;\r\n};\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & OtherProps;\r\n\r\nclass BetInfo extends React.Component<Props> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {bet, showUserModal} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Overview bet={bet} showUserModal={(user) => showUserModal({user})} />\r\n                <GameSpecificInfo betNum={bet.num} resultNum={bet.resultNum} gameType={bet.gameType} />\r\n                <VerificationInfo bet={bet} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(BetInfo);\r\n","import * as React from \"react\";\r\n\r\nimport {DataLoader} from \"../../../reusable\";\r\nimport {Bet, Bet as BetType} from \"../../modules/bets/types\";\r\nimport BetInfo from \"./BetInfo\";\r\n\r\nexport type Props = {\r\n    bet?: Bet;\r\n    betId?: number;\r\n};\r\n\r\nconst Bet = ({bet, betId}: Props) =>\r\n    bet ? (\r\n        <BetInfo bet={bet} />\r\n    ) : (\r\n        <DataLoader<BetType> url={`/bets/bet/${betId}`} success={(bet) => <BetInfo bet={bet} />} />\r\n    );\r\n\r\nexport default Bet;\r\n","import * as React from \"react\";\r\nimport {connectModal, InjectedProps} from \"redux-modal\";\r\n\r\nimport {Modal} from \"../../../reusable\";\r\nimport {Bet as BetType} from \"../../modules/bets/types\";\r\nimport Bet from \"../bet/Bet\";\r\n\r\ntype Props = InjectedProps & {bet?: BetType; betId?: number};\r\n\r\nconst BetModal = ({show, handleHide, bet, betId}: Props) => (\r\n    <Modal toggle={handleHide} isOpen={show}>\r\n        <Bet betId={betId} bet={bet} />\r\n    </Modal>\r\n);\r\n\r\nexport default connectModal({name: \"bet\"})(BetModal);\r\n","import * as React from \"react\";\r\nimport {WithTranslation, withTranslation} from \"react-i18next\";\r\n\r\nimport {COINBASE_WALLET_URL, METAMASK_URL, TRUST_WALLET_URL} from \"../config/config\";\r\n\r\nimport Style from \"./MissingWallet.scss\";\r\n\r\nconst MissingWallet = ({t}: WithTranslation) => <div></div>;\r\n\r\nexport default withTranslation()(MissingWallet);\r\n","import * as React from \"react\";\r\nimport {connectModal, InjectedProps} from \"redux-modal\";\r\n\r\nimport {MissingWallet, Modal} from \"../../../reusable\";\r\n\r\ntype Props = InjectedProps;\r\n\r\nconst MissingWalletModal = ({show, handleHide}: Props) => (\r\n    <Modal toggle={handleHide} isOpen={show}>\r\n        <MissingWallet />\r\n    </Modal>\r\n);\r\n\r\nexport default connectModal({name: \"missingWallet\"})(MissingWalletModal);\r\n","import * as React from \"react\";\r\nimport {Form as BootstrapForm} from \"reactstrap\";\r\n\r\nimport {BaseType} from \"./BaseType\";\r\n\r\nexport interface Props extends BaseType {\r\n    inline?: boolean;\r\n    children: React.ReactNode;\r\n\r\n    onSubmit(e: React.FormEvent<HTMLFormElement>): void;\r\n}\r\n\r\nconst Form = ({inline = false, ...rest}: Props) => <BootstrapForm inline={inline} {...rest} />;\r\n\r\nexport default Form;\r\n","import * as React from \"react\";\r\nimport {FormText as BootstrapFormText} from \"reactstrap\";\r\nimport {BaseType} from \"./BaseType\";\r\n\r\nexport interface Props extends BaseType {\r\n    children: React.ReactNode;\r\n    inline?: boolean;\r\n    color?: string;\r\n}\r\n\r\nconst FormText = ({inline = false, color, ...rest}: Props) => (\r\n    <BootstrapFormText inline={inline} color={color} {...rest} />\r\n);\r\n\r\nexport default FormText;\r\n","import * as React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nimport {Button, Form, FormGroup, FormText, Input} from \"../../../reusable/index\";\r\nimport {Dispatch} from \"../../../util/util\";\r\nimport {authenticate, register} from \"../../modules/account/asyncActions\";\r\nimport {isValidUserName} from \"../../modules/account/util\";\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) =>\r\n    bindActionCreators(\r\n        {\r\n            register,\r\n            authenticate,\r\n        },\r\n        dispatch\r\n    );\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps>;\r\n\r\ntype State = {\r\n    username: string;\r\n    isValid?: boolean;\r\n};\r\n\r\nclass Register extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n        };\r\n    }\r\n\r\n    register = (e: React.FormEvent<HTMLFormElement>) => {\r\n        const {register} = this.props;\r\n        const {username} = this.state;\r\n\r\n        register(username);\r\n        e.preventDefault();\r\n    };\r\n\r\n    onUsername = (username: string) => {\r\n        const isValid = this.validateUsername(username);\r\n        this.setState({\r\n            username,\r\n            isValid,\r\n        });\r\n    };\r\n\r\n    validateUsername = (username: string) => {\r\n        if (isValidUserName(username)) {\r\n            return true;\r\n        } else if (username.length === 0) {\r\n            return undefined;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {authenticate} = this.props;\r\n        const {username, isValid} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <h3 className=\"text-center\">Register</h3>\r\n                <Form onSubmit={this.register}>\r\n                    <FormGroup>\r\n                        <Input\r\n                            isValid={isValid}\r\n                            showValidation\r\n                            value={username}\r\n                            placeholder=\"Username\"\r\n                            onValue={this.onUsername}\r\n                        />\r\n                        <FormText>You can't change the username after registration! So choose wisely...</FormText>\r\n                    </FormGroup>\r\n                    <p>\r\n                        Play responsibly and do not bet what you can not afford to lose. Do not play if you are under\r\n                        18. Do not play if doing so is illegal in your jurisdiction!\r\n                    </p>\r\n                    <Button color=\"primary\" type=\"submit\" disabled={isValid !== true} onClick={this.register}>\r\n                        Register\r\n                    </Button>\r\n                    <Button color=\"link\" onClick={authenticate}>\r\n                        Already registered\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(undefined, mapDispatchToProps)(Register);\r\n","export function isValidUserName(username: string): boolean {\r\n    return username.length <= 15 && username.length >= 3 && /^[a-z0-9]+$/i.test(username);\r\n}\r\n","import * as React from \"react\";\r\nimport {connectModal, InjectedProps} from \"redux-modal\";\r\n\r\nimport {Modal} from \"../../../reusable\";\r\nimport Register from \"../user/Register\";\r\n\r\ntype Props = InjectedProps;\r\n\r\nconst MissingWalletModal = ({show, handleHide}: Props) => (\r\n    <Modal toggle={handleHide} isOpen={show}>\r\n        <Register />\r\n    </Modal>\r\n);\r\n\r\nexport default connectModal({name: \"register\"})(MissingWalletModal);\r\n","import * as React from \"react\";\r\nimport {WithTranslation, withTranslation} from \"react-i18next\";\r\n\r\nimport {Stats} from \"../../../../platform/modules/account/types\";\r\nimport {Ether} from \"../../../../reusable/index\";\r\n\r\nimport Style from \"./GameStats.scss\";\r\n\r\ntype EntryProps = {\r\n    value: number;\r\n    name: string;\r\n    colored?: boolean;\r\n    ether?: boolean;\r\n};\r\n\r\nconst StatsEntry = ({value, name, colored = false, ether = true}: EntryProps) => (\r\n    <div className={Style.entry}>\r\n        <dt className={Style.entry__header}>{name}</dt>\r\n        <dd> {ether ? <Ether colored={colored} gwei={value} /> : value}</dd>\r\n    </div>\r\n);\r\n\r\ninterface Props extends WithTranslation {\r\n    stats: Stats;\r\n}\r\n\r\nconst GameStats = ({stats, t}: Props) => {\r\n    const {profit, wagered, numBets} = stats;\r\n    return (\r\n        <dl className={Style.stats}>\r\n            <StatsEntry value={wagered} name={t(\"wagered\")} />\r\n            <StatsEntry colored value={profit} name={t(\"profit\")} />\r\n            <StatsEntry ether={false} value={numBets} name={t(\"#bets\")} />\r\n        </dl>\r\n    );\r\n};\r\n\r\nexport default withTranslation()(GameStats);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"stats\":\"xcGMB__stats\",\"entry\":\"xcGMB__entry\",\"entry__header\":\"xcGMB__entry__header\"};","import * as React from \"react\";\r\n\r\nimport Style from \"./Address.scss\";\r\n\r\nconst Address = ({address}: {address: string}) => (\r\n    <a rel=\"noreferrer\" target=\"_blank\" href={`https://etherscan.io/address/${address}`} className={Style.address}>\r\n        {address}\r\n    </a>\r\n);\r\n\r\nexport default Address;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"address\":\"asu2d__address\"};","import * as React from \"react\";\r\n\r\nimport GameStats from \"../../../pages/account/components/stats/GameStats\";\r\nimport {Address, CopyToClipBoard, DataLoader} from \"../../../reusable\";\r\nimport {Stats as StatsType, User} from \"../../modules/account/types\";\r\n\r\nimport Style from \"./UserInfo.scss\";\r\n\r\ntype Props = {\r\n    user: User;\r\n};\r\n\r\nexport default class UserInfo extends React.PureComponent<Props> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {user} = this.props;\r\n\r\n        return (\r\n            <div className={Style.userInfo}>\r\n                <h3 className=\"text-center\">\r\n                    {user.username}\r\n                    <CopyToClipBoard message={\"Copied! Paste in Chat!\"} content={`User:${user.username}`} />\r\n                </h3>\r\n                <Address address={user.address} />\r\n                <DataLoader<StatsType>\r\n                    url={`/stats/user/${user.address}`}\r\n                    success={(stats) => <GameStats stats={stats} />}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"userInfo\":\"o7MR4__userInfo\"};","import * as React from \"react\";\r\nimport {DataLoader} from \"../../../reusable\";\r\nimport {User as UserType} from \"../../modules/account/types\";\r\nimport UserInfo from \"./UserInfo\";\r\n\r\nexport type Props = {\r\n    userName?: string;\r\n    user?: UserType;\r\n};\r\n\r\nconst User = ({userName, user}: Props) =>\r\n    user ? (\r\n        <UserInfo user={user} />\r\n    ) : (\r\n        <DataLoader url={`/user/name/${userName}`} success={(user) => <UserInfo user={user} />} />\r\n    );\r\n\r\nexport default User;\r\n","import * as React from \"react\";\r\nimport {connectModal, InjectedProps} from \"redux-modal\";\r\n\r\nimport {Modal} from \"../../../reusable\";\r\nimport {User as UserType} from \"../../modules/account/types\";\r\nimport User from \"../user/User\";\r\n\r\ntype Props = InjectedProps & {user?: UserType; userName?: string};\r\n\r\nconst UserModal = ({show, handleHide, user, userName}: Props) => (\r\n    <Modal toggle={handleHide} isOpen={show}>\r\n        <User userName={userName} user={user} />\r\n    </Modal>\r\n);\r\n\r\nexport default connectModal({name: \"user\"})(UserModal);\r\n","import * as React from \"react\";\r\n\r\nimport BetModal from \"./BetModal\";\r\nimport MissingWalletModal from \"./MissingWalletModal\";\r\nimport RegisterModal from \"./RegisterModal\";\r\nimport UserModal from \"./UserModal\";\r\n\r\nconst Modals = () => (\r\n    <React.Fragment>\r\n        <MissingWalletModal />\r\n        <RegisterModal />\r\n        <BetModal />\r\n        <UserModal />\r\n    </React.Fragment>\r\n);\r\n\r\nexport default Modals;\r\n","import * as React from \"react\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {State} from \"../../../rootReducer\";\r\nimport {Dispatch} from \"../../../util/util\";\r\nimport {getUser} from \"../../modules/account/selectors\";\r\nimport {storeGameState, syncGameState, validChainId} from \"../../modules/games/state/asyncActions\";\r\n\r\nconst mapStateToProps = (state: State) => {\r\n    const {games, web3} = state;\r\n    const {gameState} = games;\r\n\r\n    return {\r\n        gameState,\r\n        userAuth: getUser(state),\r\n        web3,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) =>\r\n    bindActionCreators(\r\n        {\r\n            syncGameState,\r\n        },\r\n        dispatch\r\n    );\r\n\r\nexport type Props = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\r\n\r\nclass StateLoader extends React.Component<Props> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {syncGameState, userAuth, web3} = this.props;\r\n\r\n        if (userAuth !== null && web3.web3 && web3.account && web3.contract && validChainId(web3.chainId)) {\r\n            syncGameState(web3.chainId as number, userAuth.address);\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Props) {\r\n        const {syncGameState, userAuth: nextUserAuth, gameState: nextState, web3: nextWeb3State} = nextProps;\r\n        const {userAuth: curUserAuth, gameState: curState, web3: curWeb3State} = this.props;\r\n\r\n        if (\r\n            nextUserAuth !== null &&\r\n            nextWeb3State.web3 &&\r\n            nextWeb3State.account &&\r\n            nextWeb3State.contract &&\r\n            validChainId(nextWeb3State.chainId) &&\r\n            (nextUserAuth !== curUserAuth ||\r\n                nextWeb3State.account !== curWeb3State.account ||\r\n                nextWeb3State.chainId !== curWeb3State.chainId)\r\n        ) {\r\n            syncGameState(nextWeb3State.chainId as number, nextUserAuth.address);\r\n        }\r\n\r\n        if (nextState !== curState && nextUserAuth) {\r\n            storeGameState(nextUserAuth.address, nextState);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StateLoader);\r\n","import * as React from \"react\";\r\n\r\nimport {State as GameState} from \"../platform/modules/games/state/reducer\";\r\n\r\nexport type Props = {\r\n    gameState: GameState;\r\n};\r\n\r\nclass BeforeUnload extends React.Component<Props> {\r\n    componentDidMount() {\r\n        window.addEventListener(\"beforeunload\", this.handleBeforeUnload);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"beforeunload\", this.handleBeforeUnload);\r\n    }\r\n\r\n    private handleBeforeUnload = (event: Event) => {\r\n        const {gameState} = this.props;\r\n\r\n        if (gameState.status === \"ACTIVE\") {\r\n            const message = \"You need to end the game session before leaving!\";\r\n            (event.returnValue as any) = message;\r\n            return message;\r\n        }\r\n\r\n        return undefined;\r\n    };\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default BeforeUnload;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"notification\":\"wWwpT__notification\"};","import * as React from \"react\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\"; // tslint:disable-line:no-submodule-imports\r\n\r\nimport Style from \"./Notification.scss\";\r\n\r\nconst CloseButton = () => <button type=\"button\" className=\"btn-close btn-close-white\" aria-label=\"Close\" />;\r\n\r\nexport type Props = {\r\n    notification: any;\r\n};\r\n\r\nexport default class Notification extends React.Component<Props> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Props) {\r\n        if (nextProps.notification !== this.props.notification && nextProps.notification !== null) {\r\n            const notification = nextProps.notification;\r\n            if (notification.type === \"success\") {\r\n                toast.success(<div style={{width: \"275px\", wordWrap: \"break-word\"}}>{notification.message}</div>);\r\n            } else if (notification.type === \"info\") {\r\n                toast.info(<div style={{width: \"275px\", wordWrap: \"break-word\"}}>{notification.message}</div>);\r\n            } else {\r\n                toast.error(\r\n                    /*<div style={{width: \"275px\", wordWrap: \"break-word\"}}>{*/ notification.message /*}</div>*/\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ToastContainer\r\n                icon={false}\r\n                toastClassName={Style.notification}\r\n                position=\"top-left\"\r\n                autoClose={5000}\r\n                hideProgressBar={true}\r\n                closeOnClick\r\n                pauseOnHover={false}\r\n                closeButton={<CloseButton />}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\n\r\nimport {bindActionCreators} from \"redux\";\r\nimport {ACCOUNT_BALANCE_POLL_INTERVAL} from \"../config/config\";\r\nimport Layout from \"../layout/Layout\";\r\nimport Account from \"../pages/account/Account\";\r\nimport Faq from \"../pages/faq/Faq\";\r\nimport Game from \"../pages/games/Game\";\r\nimport GameSession from \"../pages/gameSession/GameSession\";\r\nimport HallOfFame from \"../pages/hallOfFame/HallOfFame\";\r\nimport Index from \"../pages/index/Index\";\r\nimport Modals from \"../platform/components/modals/Modals\";\r\nimport StateLoader from \"../platform/components/state/StateLoader\";\r\nimport {initUser, loadDefaultData} from \"../platform/modules/account/asyncActions\";\r\nimport {getUser} from \"../platform/modules/account/selectors\";\r\nimport {\r\n    fetchAccountBalance,\r\n    fetchAllWeb3,\r\n    registerAccountChainIdListener,\r\n    unregisterAccounChainIdListener,\r\n} from \"../platform/modules/web3/asyncActions\";\r\nimport {State as RootState} from \"../rootReducer\";\r\nimport TermsOfUse from \"../termsOfUse/TermsOfUse\";\r\nimport {Dispatch} from \"../util/util\";\r\nimport RequireAuth from \"./RequireAuth\";\r\nimport BeforeUnload from \"./BeforeUnload\";\r\nimport Notification from \"./Notification\";\r\nimport PathNotFound from \"./PathNotFound\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nimport {Web3Modal} from \"@web3modal/react\";\r\nimport {configureChains, createConfig, WagmiConfig} from \"wagmi\";\r\nimport {bsc} from \"wagmi/chains\";\r\nimport {EthereumClient, w3mConnectors, w3mProvider} from \"@web3modal/ethereum\";\r\n\r\nconst projectId = \"1e423b64330f16ace89e2629454e41a5\";\r\nconsole.log(\"projectId\", projectId);\r\nconst chains = [bsc];\r\nconst {publicClient} = configureChains(chains, [w3mProvider({projectId})]);\r\nconst wagmiConfig = createConfig({\r\n    autoConnect: true,\r\n    connectors: w3mConnectors({projectId, chains}),\r\n    publicClient,\r\n});\r\nconst ethereumClient = new EthereumClient(wagmiConfig, chains);\r\n\r\nexport const mapStateToProps = (state: RootState) => {\r\n    const {account, app, web3, games} = state;\r\n    const {gameState} = games;\r\n    const {notification, nightMode} = app;\r\n    const jwt = account.jwt;\r\n\r\n    return {\r\n        jwt,\r\n        userAuth: getUser(state),\r\n        defaultAccount: web3.account,\r\n        notification,\r\n        nightMode,\r\n        gameState,\r\n        web3: web3.web3,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    ...bindActionCreators({fetchAllWeb3, fetchAccountBalance, registerAccountChainIdListener}, dispatch),\r\n    initUser: (address: string) => initUser(dispatch, address),\r\n    loadDefaultData: () => loadDefaultData(dispatch),\r\n});\r\n\r\nexport type Props = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\r\n\r\nclass App extends React.Component<Props> {\r\n    private accountBalanceTimer: number | null = null;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {web3Timer: null};\r\n\r\n        const {jwt, initUser} = this.props;\r\n\r\n        if (jwt !== null) {\r\n            initUser(jwt);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {fetchAllWeb3, fetchAccountBalance, loadDefaultData, registerAccountChainIdListener} = this.props;\r\n\r\n        loadDefaultData();\r\n\r\n        fetchAllWeb3();\r\n        this.accountBalanceTimer = window.setInterval(() => fetchAccountBalance(), ACCOUNT_BALANCE_POLL_INTERVAL);\r\n        registerAccountChainIdListener();\r\n\r\n        this.setTheme(true);\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Props) {\r\n        if (prevProps.nightMode !== this.props.nightMode) {\r\n            this.setTheme(this.props.nightMode);\r\n        }\r\n\r\n        this.props.fetchAllWeb3();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        unregisterAccounChainIdListener();\r\n        if (this.accountBalanceTimer !== null) {\r\n            clearInterval(this.accountBalanceTimer);\r\n        }\r\n    }\r\n\r\n    private setTheme = (nightMode: boolean) => {\r\n        if (nightMode) {\r\n            document.documentElement.setAttribute(\"data-bs-theme\", \"dark\");\r\n        } else {\r\n            document.documentElement.setAttribute(\"data-bs-theme\", \"light\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {userAuth, notification, defaultAccount, gameState} = this.props;\r\n\r\n        const logout = userAuth !== null && userAuth.address !== defaultAccount && defaultAccount !== null;\r\n\r\n        return (\r\n            <>\r\n                <Helmet>\r\n                    <title>Plink</title>\r\n                    <meta\r\n                        name=\"description\"\r\n                        content=\"Dicether is an Ethereum dice game. It uses a smart contract based state channel implementation to provide a fast, secure and provably fair gambling experience.\"\r\n                    />\r\n                </Helmet>\r\n                <WagmiConfig config={wagmiConfig}>\r\n                    <Layout>\r\n                        <Routes>\r\n                            <Route path=\"/\" element={<Game />} />\r\n                        </Routes>\r\n                        <Modals />\r\n                        <BeforeUnload gameState={gameState} />\r\n                        <Notification notification={notification} />\r\n                        <StateLoader />\r\n                    </Layout>\r\n                </WagmiConfig>\r\n                <Web3Modal projectId={projectId} ethereumClient={ethereumClient} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import * as React from \"react\";\r\nimport {Provider} from \"react-redux\";\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\n\r\nimport {Store} from \"redux\";\r\nimport App from \"./app/App\";\r\nimport withTracker from \"./app/withTracker\";\r\nimport {State} from \"./rootReducer\";\r\n\r\nexport type Props = {\r\n    store: Store<State>;\r\n};\r\n\r\nconst TrackedApp = withTracker(App);\r\n\r\nexport default class Root extends React.Component<Props> {\r\n    render() {\r\n        return (\r\n            <Provider store={this.props.store}>\r\n                <Router>\r\n                    <TrackedApp />\r\n                </Router>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\nconst withTracker = (WrappedComponent: React.ComponentType<any>) => {\r\n    let lastPage: string | null = null;\r\n\r\n    const trackPage = (page: string) => {\r\n        if (lastPage !== page) {\r\n            const ga = (window as any).ga;\r\n            if (ga) {\r\n                ga(\"set\", \"page\", page);\r\n                ga(\"send\", \"pageview\", page);\r\n            }\r\n            lastPage = page;\r\n        }\r\n    };\r\n\r\n    const WithTracker = () => {\r\n        const location = useLocation();\r\n        const page = location.pathname;\r\n        trackPage(page);\r\n\r\n        return <WrappedComponent />;\r\n    };\r\n\r\n    WithTracker.displayName = `WithTracker(${WrappedComponent.displayName || WrappedComponent.name || \"Component\"})`;\r\n    return WithTracker;\r\n};\r\n\r\nexport default withTracker;\r\n","import \"core-js/stable\";\r\nimport dayjs from \"dayjs\";\r\nimport localizedFormat from \"dayjs/plugin/localizedFormat\";\r\nimport * as React from \"react\";\r\nimport {render} from \"react-dom\";\r\nimport \"regenerator-runtime/runtime\";\r\nimport \"what-input\";\r\n\r\nimport \"./config/interceptors\";\r\nimport \"./googleanalytics\";\r\nimport Root from \"./Root\";\r\nimport {store} from \"./store\";\r\n\r\ndayjs.extend(localizedFormat);\r\n\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\n\r\nif (!window.ResizeObserver) {\r\n    window.ResizeObserver = ResizeObserver;\r\n}\r\n\r\nconst root = document.getElementById(\"root\");\r\nif (root !== null) {\r\n    render(<Root store={store} />, root);\r\n}\r\n","(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\r\n(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\r\nm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\r\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\r\n\r\nif (window.ga) {\r\n    window.ga('create', 'UA-107010485-1', 'auto');\r\n    window.ga('set', 'anonymizeIp', true);\r\n    window.ga('send', 'pageview');\r\n}\r\n"],"names":["Date","process","CONTRACT_ADDRESS","toChecksumAddress","TOKEN_ADDRESS","console","log","CHAIN_ID","Number","parseInt","SERVER_ADDRESS","REALM","FROM_WEI_TO_BASE","FROM_BASE_TO_WEI","NETWORK_NAME","MIN_BET_VALUE","MIN_BANKROLL","axios","defaults","baseURL","getUser","createSelector","state","account","jwt","jwtDecode","fixedLengthAddElementFront","array","element","maxLength","length","slice","createConstant","p","prefix","isLocalStorageAvailable","mod","localStorage","setItem","removeItem","e","c","CHANGE_NOTIFICATION","TOGGLE_THEME","showErrorMessage","message","type","types","notification","toggleTheme","nightMode","catchError","error","dispatch","Error","Sentry","scope","setExtra","sentryError","response","data","statusText","messageToShow","str","idx","indexOf","substr","extractFirstLine","CHANGE_BETS","ADD_BET","CHANGE_MY_BETS","ADD_MY_BET","changeBets","bets","changeMyBets","myBets","loadBets","get","then","catch","addNewBet","bet","getState","user","allBets","id","addBet","address","myBet","TOGGLE_CHAT","CHANGE_MESSAGES","ADD_MESSAGE","DELETE_MESSAGE","CHANGE_USERS_ONLINE","toggleChat","show","changeMessages","messages","CHANGE_FRIENDS","ADD_FRIEND","CHANGE_RECEIVED_FRIEND_REQUESTS","ADD_RECEIVED_FRIEND_REQUEST","REMOVE_RECEIVED_FRIEND_REQUEST","CHANGE_SENT_FRIEND_REQUESTS","ADD_SENT_FRIEND_REQUEST","REMOVE_SENT_FRIEND_REQUEST","TOGGLE_FRIEND_ONLINE","changeFriends","friends","changeReceivedFriendRequests","receivedFriendRequests","changeSentFriendRequests","sentFriendRequests","showMissingWalletModal","showUserModal","userName","showRegisterModal","web3","CHANGE_WEB3","CHANGE_ACCOUNT","CHANGE_NETWORK","CHANGE_CONTRACT","CHANGE_BALANCE","changeWeb3","changeAccount","changeChainId","chainId","changeBalance","balance","stateChannelContractAbi","require","fetchAccount","__awaiter","curAccount","eth","getAccounts","accounts","fetchAccountBalance","web3State","getBalance","result","BN","div","toNumber","registerAccountChainIdListener","undefined","window","ethereum","on","fetchAllWeb3","web3Data","Web3","contract","Contract","changeContract","newChainId","request","method","params","ex","fetchChainId","getTransactionReceipt","transactionHash","signTypedData","from","typedData","provider","currentProvider","isMetaMask","JSON","stringify","Promise","reject","sig","recoveredAddress","recoverTypedData","CHANGE_FIRST_VISITED","CHANGE_JWT","CHANGE_USER_STATS","CHANGE_GAME_SESSIONS","changeJWTS","changeMyStats","stats","changeMyGameSessions","gameSessions","registerTypes","EIP712Domain","name","Register","changeJWT","headers","common","Authorization","changeAxiosAuthToken","sessionStorage","authenticate","register","username","enable","requestAccounts","web3Account","primaryType","domain","referredBy","getItem","post","realm","signature","hide","initUser","loadStats","loadGameSessions","setUser","loadDefaultData","initialState","innerWidth","numUsers","CHANGE_VALUE","CHANGE_NUM","num","value","TOGGLE_EXPERT_VIEW","TOGGLE_HELP","TOGGLE_SOUND","showHelp","showExpertView","sound","CREATING_GAME","GAME_CREATED","ENDED_GAME","PLACE_BET","END_BET","ENDED_WITH_REASON","USER_INITIATE_CONFLICT_END","USER_ABORT_CONFLICT_END","USER_CONFLICT_END","USER_INITIATE_FORCE_END","USER_ABORT_FORCE_END","SERVER_CONFLICT_END","RESTORE_STATE","CLEAR_STATE","status","hashChain","stake","roundId","gameType","betValue","oldBalance","combineReducers","info","action","Object","assign","enabled","gameState","userHash","serverHash","serverEndHash","createTransactionHash","gameId","reasonEnded","endTransactionHash","serverSig","userSig","placeBet","serverSeed","userSeed","keccak","revealSeed","reason","conflictEndTransactionHash","previousState","conflictEndTime","time","forceEndTransactionHash","plinko","maxBetValue","maxBet","GameType","PLINKO","Math","min","updateNum","appReducer","isSessionStorageAvailable","firstVisited","profit","wagered","numBets","chat","map","m","messageId","deleted","friend","receivedFriendRequest","filter","friendReq","sentFriendRequest","to","online","updateFriendStatus","app","games","modal","middlewares","thunkMiddleware","dsn","tunnel","release","normalizeDepth","maxBreadcrumbs","beforeBreadcrumb","breadcrumb","hint","category","_a","xhr","truncatedResponse","n","store","createStore","compose","applyMiddleware","interceptors","use","connect","mapStateToProps","showChat","authenticated","connected","bindActionCreators","Layout","children","className","open","useWeb3Modal","isConnected","useAccount","chain","useNetwork","disconnect","useDisconnect","useConnect","switchNetwork","useSwitchNetwork","React","src","logoImg","alt","loading","onClick","toggleHelp","toggleExpertView","toggleSound","creatingGame","endedWithReason","gameCreated","userInitiateConflictEnd","userAbortConflictEnd","userConflictEnd","serverConflictEnd","canCreateGame","createGameEvent","canEndGame","endGameEvent","canRegularEndGame","activateGameEvent","canActivateGame","canPlaceBet","canRevealSeed","canUserInitiateConflictEnd","userInitiateConflictEndEvent","canUserConflictEnd","userConflictEndEvent","canUserInitiateForceEnd","canServerConflictEnd","isTransactionFailed","receipt","validChainId","loadContractStateCreatedGame","methods","gameIdGame","call","ContractStatus","ENDED","getBlockNumber","blockNum","getPastEvents","fromBlock","max","toBlock","events","returnValues","getReasonEnded","ContractReasonEnded","USER_INITIATED_END","SERVER_INITIATED_END","syncGameState","warn","storedState","restoreState","parse","loadLocalGameState","logCreated","getLogGameCreated","userEndHash","loadContractGameState","loadServerGameState","endGame","userAddress","createTypedData","contractAddress","verifySignature","endedGame","regularEndGameEvent","forceEnd","userForceGameEnd","resolve","send","gas","userInitiateForceEnd","userInitiateForceEndEvent","requestSeed","retry","retries","minTimeout","revealSeedRequest","newServerBalance","verifySeed","resNum","calcResultNumber","userProfit","calcUserProfit","newUserBalance","revealSeedEvent","betNum","won","dataPlaceBet","placeBetEvent","gray","rest","__rest","allClassNames","ClassNames","Style","BootstrapContainer","returnError","errorMessage","BootstrapRow","BootstrapCol","BootstrapFormGroup","for","htmlFor","BootstrapLabel","block","size","color","outline","active","disabled","variant","BootstrapButton","filterFloat","test","NaN","popCnt","Input","constructor","props","super","onBlur","this","isFocus","setState","inputValue","onFocus","onChange","event","val","target","onValue","validate","valid","isValid","componentWillReceiveProps","nextProps","render","isValidState","suffix","readOnly","placeholder","showValidation","isValidProp","input__input","classNameSuffix","input__suffix","style","flex","defaultProps","NumericInput","isNaN","step","onNumber","round","number","precision","toFixed","toString","MIN_VALUE","MAX_VALUE","ETHER_DIV","ValueInput","onValueChange","newVal","onValueDouble","onValueHalf","InputGroup","Button","Select","handleChange","blur","isOpen","toggle","BootstrapModal","ModalBody","Ether","gwei","showCurrencySymbol","colored","formatEth","classNames","HowToPlayBase","HowToPlay","PureCanvas","shouldComponentUpdate","height","width","ref","node","contextRef","getContext","Drawable","position","Vector2","x","y","multiply","t","add","v","subtract","sqrMagnitude","magnitude","sqrt","negate","dot","normalize","radius","oldPos","draw","ctx","beginPath","arc","PI","fillStyle","fill","startPositions","PayoutInfo","showResult","colorClass","multiplier","classNamesColorStrip","colorStrip","colorStrip_show","classNamesEntry","resultEntry","resultEntry_show","PayoutTable","payout","resultColumn","len","totalPayout","reverse","Array","keys","totalColor","payoutTable","index","key","PLINKO_PAYOUT_DIVIDER","rows","pinRadius","pins","distance","rowDistance","topOffset","i","startPosX","posY","j","posX","push","Pin","getCollisionPin","start","end","maxDistanceSqr","direction","magnitudeSqr","pin","nearestPoint","projection","distanceSqr","distanceNearestPointSqr","distFromNearestToCollisionPoint","collisionPointDist","collisionPoint","normal","Plinko","parent","activeBalls","animationActive","ballAcceleration","currentTime","accumulator","k","stepsPerSecond","speed","addBall","targetPos","resultNum","startPos","promise","ball","Ball","ballRadius","finishedCallBack","now","requestAnimationFrame","animation","renderToCanvas","canvas","clearRect","save","scale","translate","forEach","restore","simulate","results","_","rand","Rand","pos","next","yPos","simulateBall","resArray","floor","resString","join","maxSteps","steps","animateBall","dt","initialPos","initialV","newV","newPos","collisionInfo","aM","vM","sM","collisionTime","tLeft","vCollision","tmp","finalV","newTime","frameTime","finishedBalls","ballData","saveContext","onResize","Pins","NightColors","DayColors","componentDidMount","componentDidUpdate","risk","PLINKO_PAYOUT","ReactResizeDetector","handleWidth","handleHeight","Ui","onSimulate","current","angle","disableRiskRowUpdate","withdrawValue","onToggleHelp","onRiskChange","onRowsChange","onPlaceBet","onWithdraw","resultCol","Row","noGutters","Col","lg","order","xl","menu","FormGroup","Label","xs","sm","Modal","withTranslation","withRef","plinkoAbi","tokenAbi","loadedSounds","ui","calcReward","playerWinnings","playPlinko","pliko_play","pow","playTokenPlinko","tokenContract","allowance","allowanceValue","amount","parseFloat","fromWei","approve","toWei","pliko_token_play","withdrawUserWinnings","getResult","get_result","web3Available","loggedIn","canBet","safeBetValue","numBitsSet","ballsFalling","_b","changeValue","changeNum","segments","playSound","audio","play","playFromBegin","reward","setInterval","rewardAmount","Helmet","content","backgroundColor","zIndex","opacity","Game","createGame","seed","manualRequestSeed","conflictEnd","onToggleExpertView","onToggleSound","Section","Container","createHashChain","checkIfEndTransactionFinished","previousGameId","createBefore","fromGweiToWei","LogGameCreated","options","cancelActiveGame","userCancelActiveGame","userEndGameConflict","library","fas","far","FontAwesomeIcon","Loading","Icon","icon","spin","Failure","NotFound","DataLoader","fetchData","url","prevProps","failure","notFound","success","buttonClassName","buttonClassNames","ClassName","container","placement","BootstrapPopover","maxWidth","PopoverBody","CopyToClipboard","showMessage","onCopy","setTimeout","ReactCopyToClipboard","text","IconButton","Popover","Overview","CopyToClipBoard","dayjs","timestamp","format","PlinkoBetInfo","Output","BootstrapCollapse","CollapseButton","rotation","Valid","Verification","validUserSeed","validServerSeed","serverAddress","validUserSig","validServerSig","validResultNum","Entry","VerificationInfo","Collapse","GameSpecificInfo","DICE_LOWER","BetInfo","Bet","betId","connectModal","BetModal","handleHide","MissingWallet","MissingWalletModal","inline","BootstrapForm","BootstrapFormText","preventDefault","onUsername","validateUsername","isValidUserName","Form","onSubmit","FormText","StatsEntry","ether","GameStats","Address","rel","href","UserInfo","User","UserModal","Modals","RegisterModal","StateLoader","userAuth","nextUserAuth","nextState","nextWeb3State","curUserAuth","curState","curWeb3State","version","storeGameState","BeforeUnload","handleBeforeUnload","returnValue","addEventListener","componentWillUnmount","removeEventListener","CloseButton","Notification","toast","wordWrap","ToastContainer","toastClassName","autoClose","hideProgressBar","closeOnClick","pauseOnHover","closeButton","projectId","chains","bsc","publicClient","configureChains","w3mProvider","wagmiConfig","createConfig","autoConnect","connectors","w3mConnectors","ethereumClient","EthereumClient","App","accountBalanceTimer","setTheme","document","documentElement","setAttribute","web3Timer","removeListener","clearInterval","defaultAccount","WagmiConfig","config","Routes","Route","path","Web3Modal","TrackedApp","WrappedComponent","lastPage","WithTracker","page","ga","trackPage","useLocation","pathname","displayName","withTracker","Root","Provider","Router","localizedFormat","ResizeObserver","root","getElementById","s","o","r","a","q","arguments","l","createElement","getElementsByTagName","async","parentNode","insertBefore"],"sourceRoot":""}